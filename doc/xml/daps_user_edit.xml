<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet
 href="urn:x-suse:xslt:profiling:docbook45-profile.xsl" 
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.docbook.org/xml/4.5/docbookx.dtd"
[<!ENTITY % entities SYSTEM "entity-decl.ent">
%entities;
]>
<chapter id="cha.daps.user.edit">
 <title>Editing DocBook-XML</title>
 <para>
  <remark>topics: free choice of editors, typical root elements: 
   set|book|article, using images, using spellcheck, validation,
   emacs macros
   </remark>
 </para>
 <abstract>
  <para>As &dapsacr; does not include any editor software, you are 
  completely free in the choice of your XML editor. Basically, you can use
  any text editor, but it is helpful if the editor supports editing XML 
  in accordance with the DTD you use. A number of open source editors can be 
  extended with plug-ins for automatic tag insertion and completion, insertion
  of <sgmltag>xref</sgmltag> elements and for checks if the XML document is 
  well-formed. If you are already familiar with vi or Emacs, you can configure
  them to support XML editing mode. If your prefer an editor with a graphical 
  user interface, jEdit is a good choice.</para>
 </abstract>
 <!--taroth 2012-03-08: building an appliance with a pre-configured jedit would
     be a great idea-->
 <!--taroth 2012-03-08: another idea: add an appendix chapter with configuration
     tips/instructions for individual editors?-->
 <sect1 id="sec.daps.user.edit.basics">
  <title>Basic Structural Elements</title>
  <para>If you already worked with DocBook, you know about the typical top-level 
  elements (or root elements) for documents: <sgmltag>book</sgmltag> or 
  <sgmltag>article</sgmltag>. For larger documentation projects, another typical
  root element is <sgmltag>set</sgmltag>. A set is a collection of books.</para>
  <para>To define the individual components of a book, other structural elements 
  are used, for example, <sgmltag>part</sgmltag>, <sgmltag>chapter</sgmltag>, or 
  <sgmltag>appendix</sgmltag>. Within a chapter, you will probably also find
  sections, thus <sgmltag>section</sgmltag> (or <sgmltag>sect1</sgmltag>, 
  <sgmltag>sect2</sgmltag> etc.) are further structural elements, as are 
  <sgmltag>para</sgmltag> (for paragraphs) or <sgmltag>orderlist</sgmltag>.</para>
  <para>If you have set up your documentation project from scratch with 
  <command>daps-init</command>, you can explore the example documents that are
  installed within the directory structure. They show the most commonly used 
  DocBook XML constructs. 
  </para>
 </sect1>
 <sect1 id="sec.daps.user.edit.macros">
  <title>Macros for Automatic Insertion of Complex Elements</title>
  <para>XML elements can be nested to a high extend. Some constructs 
 like <sgmltag>variablelist</sgmltag>, <sgmltag>table</sgmltag> 
 or <sgmltag>image</sgmltag> have a lot of required child elements.
 If you have an editor with DTD support, it will tell you which elements are 
 allowed at the current cursor position, but nevertheless it is cumbersome if
 you need to insert the child elements of complex XML constructs consecutively.  
 </para>
  <para>Most editors allow you to define or record macros which you can use 
 for automatically inserting empty <quote>skeletons</quote> for a complex XML
 construct, for example <xref linkend="ex.daps.user.vle" xrefstyle="select:title"/>.</para>
  <example id="ex.daps.user.vle">
   <title>A <sgmltag>varlistentry</sgmltag>
   </title>
   <screen>
   &lt;varlistentry&gt;
    &lt;term&gt;&lt;/term&gt;
    &lt;listitem&gt;
     &lt;para&gt;&lt;/para&gt;
    &lt;/listitem&gt;
   &lt;/varlistentry&gt;
   </screen>
  </example>
   <para>For Emacs, &dapsacr; already includes macros for adding elements such as 
 <sgmltag>listitem</sgmltag>, <sgmltag>figure</sgmltag>,
 <sgmltag>indexterm</sgmltag> etc. The macros are defined in 
 <filename>emacs_docbook_macros.el</filename>.<remark>taroth 2012-03-08: 
 verify file name and add path</remark> They require that you execute Emacs in 
 <literal>psgml</literal>-mode. To load them, open your Emacs customization file
 (<filename>~/.emacs</filename> or <filename>~/.gnu-emacs</filename> and insert
 the following line:</para>
   <screen>(load "<replaceable>PATH</replaceable>/emacs_docbook_macros.el" t t)</screen>
   <para>
    <remark>taroth 2012-03-08: todo - if there is a default path in the daps 
 installation, add it above</remark> For an overview, which macros are available
 and how to use them, refer to 
 <ulink url="http://en.opensuse.org/openSUSE:Documentation_Emacs_Docbook_Macros">.</ulink>
   </para>
  </sect1>
 </chapter>