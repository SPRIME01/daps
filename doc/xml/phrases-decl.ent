<!ENTITY wip "<emphasis>Work in progress</emphasis>" >

<!ENTITY audience
"This document is intended for users who want to make efficient use of
 DocBook-XML for editing and publishing their documentation&mdash;be it
 documentation sets, individual books, or articles. Key knowledge of XML
 and DocBook is required, as well as key knowledge of using the Bash Shell
 (or command line interfaces in general).">

<!ENTITY daps-userguide-abstract
"The &dapsuser; is a comprehensive guide for end-users. It guides you through creating,
 editing, managing and publishing your DocBook documents with
 &dapsacr;&mdash;be it a short article by a single author or a larger
 documentation project, written by multiple authors.">

<!ENTITY daps-quickstart-abstract
"The &dapsquick; is a short introduction to &dapsacr; for end-users. It
 includes step-by-step instructions for the key tasks in editing and 
 publishing DocBook documents.">

<!ENTITY daps-description-short
"The &dapslong; (&dapsacr;) is an open-source authoring and publishing
 environment for DocBook XML. It is command-line oriented and can be used
 on Linux operating systems. It consists of integrated tools that support 
 technical writers in the editing, translation and publishing process of their 
 XML documents.">
 
<!ENTITY daps-description-long 
"The &dapslong; (&dapsacr;) is developed as open source software for Linux*
 operating systems and is licensed under the GPL. A number of integrated
 tools, stylesheets, scripts, and makefiles help technical writers in the
 editing, translation and publishing process. &dapsacr; supports single
 source publishing into a number of different output formats, and is suited
 both for small documentation projects and for comprehensive projects,
 created by multiple authors in a collaborative effort.">
  
<!ENTITY daps-feedback  
  '<para>
   For general discussions and technical support, join the forum at
   <ulink url="https://sourceforge.net/p/daps/discussion/"/>. You do not need a user 
   account at  <ulink url="sourceforge.net"></ulink> for this.
  </para>
  <para>
   For bugs or enhancement requests, please open a ticket at 
   <ulink url="https://sourceforge.net/p/daps/tickets/add"></ulink>. A user account
   at <ulink url="sourceforge.net"></ulink> is recommended, but you
   may also open tickets anonymously.
  </para>'>
  
<!ENTITY daps-db-versions 
"Currently, &dapsacr; supports only DocBook 4.x. Support for DocBook 5.x is
 planned for version 2.0."> 

<!ENTITY daps-sys-req-general
'  <para>
  &dapsacr; itself is a lean solution that does not require a lot of system
  resources. However, it does use components that may need a stronger processor
  and more RAM, for instance for creating PDF output files.
 </para>
'>

<!ENTITY daps-sys-req-sw
'  <para>&dapsacr; runs on any modern Linux system. It has not been
    attempted to port &dapsacr; to Windows* or Mac OS X* yet.</para>
   <para>When installing &dapsacr; as an RPM package (on any SUSE-based system), 
   dependencies on other software packages are automatically resolved during 
   installation.</para>
'>
<!ENTITY daps-sys-req-sw-continued
'  <para>To install the &dapsacr; sources on other Linux distributions (with 
   <literal>configure</literal>, <literal>make</literal>, and 
   <literal>make install</literal>), make sure the following packages or 
   tools are installed on your system. Else, the installation scripts will
   fail.</para>
     <itemizedlist>
      <listitem>
       <para>bash, version 4.0 or higher</para>
      </listitem>
      <listitem>
       <para>checkbot (this software is sometimes packaged as
       <systemitem class="resource">perl-checkbot</systemitem>)</para>
      </listitem>
      <listitem>
       <para>convert (included in the 
      <systemitem class="resource">ImageMagick</systemitem> package)</para>
      </listitem>
      <listitem>
       <para>Dia</para>
      </listitem>
      <listitem>
       <para>DocBook 4</para>
      </listitem>
      <listitem>
       <para>DocBook 4 Stylesheets (usually a separate package)</para>
      </listitem>
      <listitem>
       <para>exiftool (also packaged as
       <systemitem class="resource">libimage-exiftool-perl</systemitem>)</para>
      </listitem>   
      <listitem>
       <para>fam</para>
      </listitem>
      <listitem>
       <para>ghostscript (also packaged as
       <systemitem class="resource">ghostscript-lbrary</systemitem>)</para>
      </listitem>
      <listitem>
       <para>Inkscape</para>
      </listitem>
      <listitem>
       <para>make</para>
      </listitem>
      <listitem>
       <para>optipng</para>
      </listitem>
      <listitem>
       <para>poppler-tools (also packaged as
       <systemitem class="resource">poppler-utils</systemitem>)</para>
      </listitem>
      <listitem>
       <para>python</para>
      </listitem>
      <listitem>
       <para>python-xml</para>
      </listitem>
      <listitem>
       <para>sgml-skel</para>
      </listitem>
      <listitem>
       <para>TransFig</para>
      </listitem>
      <listitem>
     <para>xmlcatalog (usually part of the package 
      <systemitem class="resource">libxml2</systemitem>, 
      <systemitem class="resource">libxml-utils</systemitem>, or 
      <systemitem class="resource">libxml-tools</systemitem>)</para>
      </listitem>
      <listitem>
     <para>xmllint (usually part of the package 
     <systemitem class="resource">libxml2</systemitem>,
       <systemitem class="resource">libxml-utils</systemitem>, or 
       <systemitem class="resource"
       >libxml-tools</systemitem>)</para>
      </listitem>
      <listitem>
       <para>xsltproc (if not available as a separate package, it may be 
       included in <systemitem class="resource">libxslt</systemitem>)</para>
      </listitem>
     </itemizedlist>
     <para>During the installation procedure, the <filename>convert</filename> 
     script informs you about any further missing software packages. Refer to 
     <xref linkend="pro.daps.user.inst.tarball"/> for more information.
     </para>'>

<!ENTITY daps-addon
'  <para>In addition to &dapsacr;, you need the following software:</para>
   <itemizedlist>
    <listitem>
     <para>An XML (or text) editor of your choice.</para>
    </listitem>
    <listitem>
     <para>For generating PDF output: an FO formatter, like 
      <ulink url="http://projects.apache.org/projects/fop.html">FOP</ulink> or 
      <ulink url="http://www.renderx.com">XEP</ulink>. 
      <ulink url="http://www.antennahouse.com">Antenna House Formatter</ulink> 
      is currently not supported. Whereas FOP is an open source product,
      both XEP and Antenna House are commercial products.</para>
    </listitem>
   </itemizedlist>
   <para>To add further components like version management or a workflow
   mechanism for your projects, use &dapsacr; in combination with the following 
   software:</para>
  <itemizedlist>
   <listitem>
    <para>Any version management system, like CVS, Subversion, Mercurial or Git.
      </para>
   </listitem>
   <listitem>
    <para>&dm;, a command-line tool for adding and retrieving the meta information 
     of all files belonging to a documentation project. &dm; is especially useful 
     for larger, collaborative projects where it helps you keep track of 
     owners (authors) and editing statuses of all files. However, &dm; requires 
     hosting your documentation files on a Subversion server. 
     </para>
   </listitem>
  </itemizedlist>
  <para>
   Together with the software components mentioned above, &dapsacr; can be
   used as a fully-fledged authoring and content management system for documentation
   projects based on DocBook.
  </para>
' >

<!ENTITY daps-sys-req-hw 
'   <variablelist>
     <varlistentry>
      <term>RAM</term>
      <listitem>
       <para>The required amount of RAM mostly depends on the volume of your 
       documentation projects. For creation of PDF output, 2 GB of RAM are 
       recommended.</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>CPU</term>
      <listitem>
       <para>If you have multiple or very large documentation projects, a machine
       with multiple cores is recommended.</para>
      </listitem>
     </varlistentry>
    <varlistentry>
     <term>Hard Disk Space</term>
     <listitem>
      <para>The disk space consumed mostly depends on the amount of your 
       documentation sources and  the number of output formats you want to generate.</para>
     </listitem>
    </varlistentry>
    </variablelist>
'>

<!ENTITY daps-install
'  <para>
    The &dapslong; can be installed and used on any Linux distribution.
    Currently, &dapsacr; is available as an RPM package for the &osuse;
    distribution.
    <remark>taroth 2012-03-20: (and the &sle; products based on
    &osuse;)???</remark><remark>Not yet ... -- sknorr, 2012-09-20</remark>
    Eventually, packages for other distributions may become available.
    In the meantime, you can download a tar archive with the &dapsacr; sources
    and install them on any distribution as described in
    <xref linkend="sec.daps.user.inst.tarball"/>.
  </para>
'>

<!ENTITY daps-install-osuse
'  <para>
   There are a few ways to install &dapsacr; on &osuse;. To always stay up-to-date 
   with the latest version of &dapsacr; install the <systemitem class="resource">daps</systemitem> 
   package from the   <systemitem class="service">&suse-dapsrepo;</systemitem> repository as outlined below.
  </para>
  <procedure>
   <title>Installing &dapsacr; via 1-Click Install</title>
   <step><para>Open your browser and go to
    <ulink url="http://software.opensuse.org/"/>.</para>
   </step>
   <step>
    <para>Enter <systemitem class="resource">daps</systemitem>.</para>
   </step>
   <step>
    <para>On the resulting page, click <menuchoice><guimenu>daps</guimenu>
    <guimenu>Show other versions</guimenu>
    <guimenu>Show unstable packages</guimenu></menuchoice>.</para>
   </step>
   <step>
    <para>Look for the version from the repository
    <systemitem class="service">&suse-dapsrepo;</systemitem> and click the
    <guimenu>1-Click Install</guimenu> link next to it. A window called
    <guimenu>&yast;&ndash;1-Click Install</guimenu> should appear.</para>
   </step>
   <step><para>Follow the instructions and click <guimenu>Next</guimenu>,
   <guimenu>Trust</guimenu>, and finally <guimenu>Finish</guimenu>.</para>
   </step>
  </procedure>
  <para>
   If you are already well-versed in the usage of &osuse;, you can of course also
   add the <systemitem class="service">&suse-dapsrepo;</systemitem> repository
   with either <command>zypper</command> or <guimenu>&yast;</guimenu>.
  </para>
  <para>
   You may also use the <systemitem class="resource">daps</systemitem> package
   that shipped with your version of &osuse;. However, you then might miss the latest 
   features and bug fixes in &dapsacr;.
  </para>
'>

<!ENTITY daps-images-dir
'    &dapsacr; requires you to use a specific directory structure for images. All
     images that you reference from your DocBook files must be stored in
     a sub-directory of the project directory named
     <filename>images/src/file_extension</filename>. For instance, <acronym>PNG</acronym>
     files must be stored under <filename>images/src/png</filename>. If you used
     <command>daps-init</command> to set up your project, the appropriate
     directories should already exist.
'>

<!ENTITY daps-img-formats
" <para>&dapsacr; supports the following types of images:</para>
  <itemizedlist>
   <listitem>
    <para>
     <filename>DIA</filename>
    </para>
   </listitem>
   <listitem>
    <para>
     <filename>EPS</filename> (experimental)
    </para>
   </listitem>
   <listitem>
    <para>
     <filename>FIG</filename>
    </para>
   </listitem>
   <listitem>
    <para>
     <filename>PDF</filename> (experimental)
    </para>
   </listitem>
   <listitem>
    <para>
     <filename>PNG</filename>
    </para>
   </listitem>
   <listitem>
    <para>
     <filename>SVG</filename>
    </para>
   </listitem>
  </itemizedlist>">
  
<!ENTITY daps-img-names-req
' <variablelist>
    <varlistentry>
     <term>Unique Image Names</term>
     <listitem>
      <para>Always store just one file with a particular name within the
      <filename>images/src</filename> folder of a project. As &dapsacr; tries to 
      create any missing image formats from original images, it will otherwise 
      not know which one of the duplicate files to use for converting to the 
      missing formats.</para>
      <para>Additionally, having a file called <filename>example.png</filename> 
      and another called <filename>example.svg</filename> in the same documentation 
      project will often lead to  questions like:
     </para>
      <itemizedlist>
       <listitem>
        <para>Which file to use where?</para>
       </listitem>
       <listitem>
        <para>Do both files display the same content?</para>
       </listitem>
       <listitem>
        <para>Are both files current, or is one outdated?</para>
       </listitem>
      </itemizedlist>
      <para>To search for image name clashes, use the <command>warn-images</command> 
      subcommand. It lists all images with non-unique base names for a particular
      documentation project:
    </para>
      <screen>$ <command>daps -d <replaceable>PATH_TO_&dc;_FILE</replaceable> warn-images</command></screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>No Spaces In Filenames</term>
     <listitem>
      <para>Avoid spaces in filenames because the <command>make</command> command 
       in &dapsacr; has trouble understanding them. Use underscores 
       (<filename>_</filename>) or hyphens (<filename>-</filename>) instead. 
       Camel-cased filenames (<filename>aCamelCasedFileName</filename>) or 
       filenames only differing in upper or lower case spelling may lead to 
       problems if multiple file systems are used anywhere in the process chain
       between generation and publishing of the output formats.</para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
     It is a good idea to find a consistent file naming scheme. For instance, when
     documenting software, it might prove helpful to include the name of the
     application at the beginning of the filename or to use prefixes like 
     <filename>screenshot_</filename> and <filename>diagram_</filename> 
     to separate between different types of images.
    </para>'>
    
<!ENTITY daps-img-ref
' <para>
    Provided your images are located in the required default directory,
    &dapsacr; automatically finds the path to your images. Therefore,
    referencing images in your XML sources is very straightforward: you do
    not need to include any path in the
    <sgmltag class="attribute">fileref</sgmltag> attribute&mdash;the
    file name is enough.
   </para>
  <para>
    Furthermore, DocBook allows you to reference more than one image to
    distinguish between different output formats. For example, you can add
    two references pointing to the same file, but using different images
    widths for PDF and HTML output. Use the
    <sgmltag class="attribute">role</sgmltag> attribute to specify the
    output format, for example <sgmltag class="attvalue">fo</sgmltag> or
    <sgmltag class="attvalue">html</sgmltag>. 
    </para>'>
  
<!ENTITY ex-daps-img-ref
'<screen>&lt;figure&gt;
  &lt;title&gt;Main Window&lt;/title&gt;
  &lt;mediaobject&gt;
    &lt;imageobject role="fo"&gt;
      &lt;imagedata fileref="screenshot.png" width="70&#37;"/&gt;
    &lt;/imageobject&gt;
    &lt;imageobject role="html"&gt;
      &lt;imagedata fileref="screenshot.png" width="75&#37;"/&gt;
    &lt;/imageobject&gt;
  &lt;/mediaobject&gt;
&lt;/figure&gt;</screen>'>
   
<!ENTITY daps-config 
  '<para>
   &dapsacr; can be customized to a large degree: per system, per user, and per 
   document. The configuration file &dapsconf-sys; lists all parameters that can
   be configured, including a short description for each parameter. Parameters 
   are always defined as <option>KEY="VALUE"</option> pairs. Any parameter can be 
   set in various locations, which are listed below in ascending order with 
   regards to their hierarchy. If conflicting values are set for the same parameter, 
   the value defined in the next higher hierarchy level takes precedence. Values 
   defined on the command line always take precedence over values set in any other 
   locations.
  </para>

  <itemizedlist>
   <listitem>
    <para>
     &dapsconf-sys; (system-wide configuration file)
    </para>
   </listitem>
   <listitem>
    <para>
     &dapsconf-user; (user-specific configuration file)
    </para>
   </listitem>
   <listitem>
    <para>
     &dc; (doc config) file of the documentation project (for settings specific 
     to a document or documentation set)
    </para>
   </listitem>
   <listitem>
    <para>
     on the fly at the command line by specifying options to a
     <command>daps</command> command.
    </para>
   </listitem>
  </itemizedlist>'>
 
  
<!ENTITY daps-key-files 
 ' <para>
    The following key files define a documentation project so that 
    it can be processed by &dapsacr;:
   </para>
   <variablelist>
    <varlistentry>
     <term>Main File</term>
     <listitem>
      <para>
       An XML file containing the <quote>starting point</quote> (the
     highest-level object) of your documentation project (for example, 
       <sgmltag>book</sgmltag> or <sgmltag>article</sgmltag>). For larger
       documentation projects, it is good practice to name the file
    <filename>MAIN-<replaceable>PROJECTNAME</replaceable>.xml</filename>, 
       but you can use any other filename as well.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>&dclong; (&dc;) File</term>
     <listitem>
      <para>
      A configuration file defining a number of parameters for your
      documentation deliverable (for example, the main file, layout variants, or 
      which profiling information to use). Of the multiple parameters that
      can be set  in the &dc; file, the only one required is
      <parameter>MAIN</parameter>, pointing to the XML file that you want to
      process. Usually, you create one &dc; file per book or article. For a 
      documentation <sgmltag>set</sgmltag> (a collection of books), 
      multiple &dc; files can be defined. This allows you to set different 
      parameters and different values for individual books in the set.
     </para>
     </listitem>
    </varlistentry>
   </variablelist> '>
   
<!ENTITY daps-co-main
 ' <para>
   Specifies the Main XML file. It contains the highest-level object 
   (root element) of your documentation project. The Main file must be located 
   in <filename><replaceable>YOUR_DOC_DIR</replaceable>/xml/</filename>. 
   Therefore, you only need to specify the Main&#39;s file name in the &dc; file
   (no path).</para>'>
   
<!ENTITY daps-co-rootid
 '<para>
  Defines the root ID of the element to be used for creating an output format. 
  Usually, you specify the root ID of a <sgmltag>book</sgmltag> or 
  <sgmltag>article</sgmltag> element here.</para>'>
  
<!ENTITY daps-co-styleroot
  '<para>
   For a custom layout, use the <parameter>STYLEROOT</parameter> parameter to 
   specify the (absolute or relative) path to the directory containing the 
   custom stylesheets. Using absolute paths is recommended for &dc; files.
   </para>'> 

<!ENTITY daps-co-fbstyleroot   
  '<para>Allows you to define a fallback which is used in case the custom 
     stylesheets defined with <parameter>STYLEROOT</parameter> cannot be accessed. 
     In case neither the stylesheets specified with <parameter>STYLEROOT</parameter> 
     nor with <parameter>FALLBACK_STYLEROOT</parameter> can be accessed, &dapsacr; 
     uses the default DocBook layout.</para>'>
     
<!ENTITY daps-co-css       
  '<para>If not specified, &dapsacr; will use the default DocBook stylesheets for 
     production of HTML and &epub;. For custom CSS styles, specify the 
     (absolute or relative) path to the respective CSS file. Using absolute paths
     is recommended for &dc; files.</para>'>  
     
<!ENTITY daps-co-source    
  "<para>
   Enabling this parameter allows you to source the &dc; file on the Bash with 
   &dapsacr;. Sourcing a &dc; file (formerly called <literal>ENV</literal> file) 
   was necessary to work with the documentation environment provided by &susedoc;,
   &dapsacr;'s predecessor.
  </para>">
  
<!ENTITY daps-co-formatter
 '<para>Specifies the PDF formatter to use.</para>'>
 
<!ENTITY daps-co-draft
 '<para>When set to <literal>yes</literal>, a DRAFT watermark appears in PDF or 
   HTML outputs of the document.</para>'>
   
<!ENTITY daps-editor   
 ' <para>
   As &dapsacr; does not include any editor software, you are completely
   free in the choice of your XML editor. While you can use your text editor of
   of choice, it is helpful if the editor supports editing XML in
   accordance with the schema you use. A number of open source editors can be
   extended with plug-ins for automatic tag insertion and completion,
   insertion of <sgmltag>xref</sgmltag> elements and for checks if the XML
   document is well-formed. If you are already familiar with vi or Emacs,
   you can configure them to support XML editing mode. If you prefer an
   editor with a graphical user interface,
   <ulink url="www.jedit.org/">jEdit</ulink> is a good choice.
  </para>'>
  
  
<!ENTITY db-structure-elements     
 ' <para>
   If you have worked with DocBook before, you know about the typical top-level
   elements for documents, <sgmltag>book</sgmltag> and
   <sgmltag>article</sgmltag>. For larger documentation projects, another
   typical top-level element is <sgmltag>set</sgmltag> (a collection of books).
  </para>

  <para>
   To define the individual components of a book, use structural elements
   such as <sgmltag>part</sgmltag>, <sgmltag>chapter</sgmltag>, 
   <sgmltag>preface</sgmltag> or <sgmltag>appendix</sgmltag>. Chapters are 
   usually subdivided into sections (<sgmltag>section</sgmltag> elements or 
   <sgmltag>sect1</sgmltag>, <sgmltag>sect2</sgmltag> etc.). Smaller structural 
   units are <sgmltag>para</sgmltag> (for paragraphs), or list elements
   such as <sgmltag>orderlist</sgmltag>, <sgmltag>itemizedlist</sgmltag>, or
   <sgmltag>variablelist</sgmltag>.
  </para>

  <para>
   If you have set up your documentation project from scratch with
   <command>daps-init</command>, you can explore the example documents that
   are installed within the directory structure. They show the most commonly
   used DocBook XML constructs.
  </para>'>

<!ENTITY db-profiling-intro
'<para>
   Similar products often share a considerable amount of features and differ
   in details only. It is therefore convenient to apply the same approach to
   the documentation of similar products or product families: Share most of
   the XML source code and only differentiate text snippets where necessary.
   DocBook allows you to create documentation variants from the same pool of XML
   sources by means of <literal>profiling</literal>. </para>'>
   

<!ENTITY db-profiling 
 ' <para>
      In DocBook XML files you can mark some elements as conditional by using 
      profiling attributes. When processing the files to generate output, specify 
      which conditions apply to the output. The stylesheets will then include or 
      exclude the marked text, according to the conditions.</para>
      <para>Profiling allows you to keep both common and product-specific
      content in one XML file and select at production time which information 
      to include in the output. </para>'>

<!ENTITY daps-product-entities   
   '&dapsacr; allows setting product name and product number dynamically.
    This enables you to use the same XML sources for different products.
    Use the entities <literal>&amp;productname;</literal> and 
    <literal>&amp;productnumber;</literal> in your XML
    sources, and define the respective values in an entity (using
    profiling for multiple products).'>
   
<!ENTITY daps-profiling-attributes    
  '<para>DocBook offers profiling attributes for various purposes. 
   &dapsacr; currently supports the following attributes:</para>
  <itemizedlist>
    <listitem>
     <para>
      <sgmltag class="attribute">arch</sgmltag> 
     </para>
    </listitem>
    <listitem>
     <para>
      <sgmltag class="attribute">condition</sgmltag>
     </para>
    </listitem>
    <listitem>
     <para>
      <sgmltag class="attribute">os</sgmltag>
     </para>
    </listitem>
    <listitem>
     <para>
      <sgmltag class="attribute">vendor</sgmltag>
     </para>
    </listitem>
   </itemizedlist>
   <para>Each profiling attribute has a corresponding profiling parameter
   in &dapsacr;: </para>
   <itemizedlist>
    <listitem>
     <para><parameter>PROFARCH</parameter></para>
    </listitem>
    <listitem>
     <para><parameter>PROFCONDITION</parameter></para>
    </listitem>
    <listitem>
     <para><parameter>PROFOS</parameter></para>
    </listitem>
    <listitem>
     <para><parameter>PROFVENDOR</parameter></para>
    </listitem>
   </itemizedlist>
   <para>The profiling parameters are used in the &dc; file to define 
   which profiling attributes in the XML files should be interpreted 
   during generation of output.</para>'> 

