# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Makefile.am for DocBook Authoring and Publishing Suite (daps)
# Generate catalogs and install daps
#
# Copyright (C) 2011,2012 Frank Sundermeyer <fsundermeyer@opensuse.org>
#
# Author:
# Frank Sundermeyer <fsundermeyer@opensuse.org>
#
# TODO: 
# Stylesheets for building xhtml need to be packaged in src tar


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
subdir = .
DIST_COMMON = README $(am__configure_deps) \
	$(am__dist_catalog_DATA_DIST) $(dist_bin_SCRIPTS) \
	$(dist_dapsconf_DATA) $(dist_dapslib_DATA) \
	$(dist_dapslibexec_SCRIPTS) $(dist_dapsmake_DATA) \
	$(dist_dapspython_DATA) $(dist_doc_DATA) \
	$(dist_emacssite_DATA) $(dist_fopconf_DATA) \
	$(dist_hyphen_DATA) $(dist_man1_MANS) $(dist_template_DATA) \
	$(dist_ttfonts_DATA) $(dist_xepconf_DATA) \
	$(dist_xsltcommon_DATA) $(dist_xsltcontrib_DATA) \
	$(dist_xsltdesktop_DATA) $(dist_xsltepub_DATA) \
	$(dist_xsltindex_DATA) $(dist_xsltman_DATA) \
	$(dist_xsltprofiling_DATA) $(dist_xsltyelp_DATA) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/configure AUTHORS COPYING ChangeLog INSTALL NEWS \
	TODO install-sh missing
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_python_module.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(dapslibexecdir)" \
	"$(DESTDIR)$(man1dir)" "$(DESTDIR)$(catalogdir)" \
	"$(DESTDIR)$(dapsconfdir)" "$(DESTDIR)$(dapslibdir)" \
	"$(DESTDIR)$(dapsmakedir)" "$(DESTDIR)$(dapspythondir)" \
	"$(DESTDIR)$(docdir)" "$(DESTDIR)$(emacssitedir)" \
	"$(DESTDIR)$(fopconfdir)" "$(DESTDIR)$(hyphendir)" \
	"$(DESTDIR)$(templatedir)" "$(DESTDIR)$(ttfontsdir)" \
	"$(DESTDIR)$(xepconfdir)" "$(DESTDIR)$(xsltcommondir)" \
	"$(DESTDIR)$(xsltcontribdir)" "$(DESTDIR)$(xsltdesktopdir)" \
	"$(DESTDIR)$(xsltepubdir)" "$(DESTDIR)$(xsltindexdir)" \
	"$(DESTDIR)$(xsltmandir)" "$(DESTDIR)$(xsltprofilingdir)" \
	"$(DESTDIR)$(xsltyelpdir)" "$(DESTDIR)$(dapsconfdir)"
SCRIPTS = $(dist_bin_SCRIPTS) $(dist_dapslibexec_SCRIPTS)
SOURCES =
DIST_SOURCES =
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
man1dir = $(mandir)/man1
NROFF = nroff
MANS = $(dist_man1_MANS)
am__dist_catalog_DATA_DIST = catalogs/for-catalog-$(PACKAGE).xml
DATA = $(dist_catalog_DATA) $(dist_dapsconf_DATA) $(dist_dapslib_DATA) \
	$(dist_dapsmake_DATA) $(dist_dapspython_DATA) $(dist_doc_DATA) \
	$(dist_emacssite_DATA) $(dist_fopconf_DATA) \
	$(dist_hyphen_DATA) $(dist_template_DATA) $(dist_ttfonts_DATA) \
	$(dist_xepconf_DATA) $(dist_xsltcommon_DATA) \
	$(dist_xsltcontrib_DATA) $(dist_xsltdesktop_DATA) \
	$(dist_xsltepub_DATA) $(dist_xsltindex_DATA) \
	$(dist_xsltman_DATA) $(dist_xsltprofiling_DATA) \
	$(dist_xsltyelp_DATA) $(nodist_dapsconf_DATA)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir dist dist-all distcheck
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d "$(distdir)" \
    || { find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr "$(distdir)"; }; }
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
GZIP_ENV = --best
DIST_ARCHIVES = $(distdir).tar.bz2
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BZIP = @BZIP@
CHECKBOT = @CHECKBOT@
CONVERT = @CONVERT@
CYGPATH_W = @CYGPATH_W@
DEBUG = @DEBUG@
DEFS = @DEFS@
DIA = @DIA@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EPUBCHECK = @EPUBCHECK@
EXIFTOOL = @EXIFTOOL@
FOP = @FOP@
GREP = @GREP@
GS = @GS@
HAVE_PYMOD_LXML = @HAVE_PYMOD_LXML@
HAVE_PYMOD_XML = @HAVE_PYMOD_XML@
INKSCAPE = @INKSCAPE@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
JING = @JING@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKE = @MAKE@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OPTIPNG = @OPTIPNG@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PDFFONTS = @PDFFONTS@
PYTHON = @PYTHON@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_VERSION = @PYTHON_VERSION@
Q = @Q@
REMAKE = @REMAKE@
ROOT_CATALOG = @ROOT_CATALOG@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TAR = @TAR@
VERSION = @VERSION@
W3M = @W3M@
XEP = @XEP@
XFIG = @XFIG@
XMLCATALOG = @XMLCATALOG@
XMLLINT = @XMLLINT@
XSLTPROC = @XSLTPROC@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
am__leading_dot = @am__leading_dot@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

#------------------------
AUTOMAKE_OPTIONS = 1.10 foreign dist-bzip2 no-dist-gzip no-installinfo \
			-Wall -Werror -Wno-portability

ACLOCAL_AMFLAGS = -I m4
SUBDIRS = 

# additional files to add to the tarball
EXTRA_DIST := COPYING-2.0 COPYING-3.0 packaging/daps.spec

#------------------------
REPL_PATH = sed \
             -e 's|@sysconfdir[@]|$(sysconfdir)|g' \
             -e 's|@bindir[@]|$(bindir)|g' \
             -e 's|@pkgdatadir[@]|$(pkgdatadir)|g' \
             -e 's|@prefix[@]|$(prefix)|g' \
             -e 's|@PACKAGE_VERSION[@]|$(PACKAGE_VERSION)|g'

DAPS_CATALOG := catalogs/for-catalog-$(PACKAGE).xml
DAPSROOT := $(abs_top_srcdir)

# fop config
# I love automake conditionals, they are sooo powerful ;-(
#
FOP_CONFIG := etc/fop/fop-daps.xml
@DIST_OTHER_TRUE@FOP_CONFIG_SRC := etc/fop/fop-daps.generic
@DIST_REDHAT_TRUE@FOP_CONFIG_SRC := etc/fop/fop-daps.redhat
@DIST_SUSE_TRUE@FOP_CONFIG_SRC := etc/fop/fop-daps.suse

# stylesheets with which to build the documentation
STYLEROOT := $(DAPSROOT)/suse/xslt

# Man pages
DC_MANPAGES := DC-daps-manpages
MAN_PAGE_DIR := $(subst DC-,,$(DC_MANPAGES))
MAN_PAGES := daps.1 ccecho.1
MAN_BUILD_PATH := $(srcdir)/man/build/$(MAN_PAGE_DIR)/man/

# Manuals
DC_USERGUIDE = $(srcdir)/doc/DC-daps-user
DC_QUICKSTART = $(srcdir)/doc/DC-daps-quick
USERGUIDE_NAME = daps-user
QUICKSTART_NAME = daps-quick
USERGUIDE = $(srcdir)/doc/build/$(USERGUIDE_NAME)/htmlsingle/$(USERGUIDE_NAME)/$(USERGUIDE_NAME).html
QUICKSTART = $(srcdir)/doc/build/$(QUICKSTART_NAME)/htmlsingle/$(QUICKSTART_NAME)/$(QUICKSTART_NAME).html
MANUALS = $(dir $(USERGUIDE)) $(dir $(QUICKSTART)) 

#------------------------
# Installation hooks
#
dapsconfdir = @sysconfdir@/daps
fopconfdir = $(dapsconfdir)/fop
xepconfdir = $(dapsconfdir)/xep
hyphendir = $(xepconfdir)/hyphen
catalogdir = @sysconfdir@/xml
dapslibdir = $(pkgdatadir)/lib
dapslibexecdir = $(pkgdatadir)/libexec
dapsmakedir = $(pkgdatadir)/make
dapspythondir = $(pkgpythondir)
emacssitedir = @datadir@/emacs/site-lisp
templatedir = $(pkgdatadir)/init_templates
ttfontsdir = @datadir@/fonts/truetype
htmldocdir = @docdir@/html
xsltdir = $(pkgdatadir)/daps-xslt
xsltcommondir = $(xsltdir)/common
xsltcontribdir = $(xsltdir)/contrib
xsltdesktopdir = $(xsltdir)/desktop
xsltepubdir = $(xsltdir)/epub
xsltindexdir = $(xsltdir)/index
xsltmandir = $(xsltdir)/man
xsltprofilingdir = $(xsltdir)/profiling
xsltyelpdir = $(xsltdir)/yelp

#------------------------
# Automake primaries

# BIN
dist_bin_SCRIPTS = $(wildcard bin/*[^.in])
dist_dapslibexec_SCRIPTS = $(wildcard libexec/*)

# CATALOG files
@CATALOG_EDIT_FALSE@dist_catalog_DATA = $(DAPS_CATALOG)

# CONFIG files
dist_dapsconf_DATA = etc/config etc/docbook-xmlformat.conf
nodist_dapsconf_DATA = etc/config.in etc/catalog.xml
dist_fopconf_DATA = etc/fop/fop-daps.xml
dist_xepconf_DATA = etc/xep/xep-daps.xml
dist_hyphen_DATA = $(wildcard etc/xep/hyphen/*.tex) \
			$(wildcard etc/xep/hyphen/*.il2)


# DATA
dist_dapslib_DATA = $(wildcard lib/*)
dist_emacssite_DATA = misc/docbook_macros.el
dist_dapsmake_DATA = $(wildcard make/*.mk)
dist_template_DATA = $(wildcard init_templates/*)
dist_ttfonts_DATA = $(wildcard fonts/*.ttf)
dist_dapspython_DATA = $(wildcard python/daps/*)
dist_xsltcommon_DATA = $(wildcard daps-xslt/common/*.xsl) \
			   $(wildcard daps-xslt/common/*.xml) \
			   $(wildcard daps-xslt/common/*.svg)

dist_xsltcontrib_DATA = $(wildcard daps-xslt/contrib/*.xsl)
dist_xsltdesktop_DATA = $(wildcard daps-xslt/desktop/*.xsl)
dist_xsltepub_DATA = $(wildcard daps-xslt/epub/*.xsl)
dist_xsltindex_DATA = $(wildcard daps-xslt/index/*.xsl)
dist_xsltman_DATA = $(wildcard daps-xslt/man/*.xsl)
dist_xsltprofiling_DATA = $(wildcard daps-xslt/profiling/*.xsl)
dist_xsltyelp_DATA = $(wildcard daps-xslt/yelp/*.xsl)

# DOCUMENTATION
dist_doc_DATA = BUGS COPYING COPYING-2.0 COPYING-3.0 INSTALL README \
			README.quickstart README.upgrade_from_susedoc_4.x

dist_man1_MANS = $(addprefix $(MAN_BUILD_PATH), $(MAN_PAGES))

#---------------------------Local INSTALLATION--------------------------------
INSTALLDIRS = $(DESTDIR)$(docdir)/html $(DESTDIR)$(pkgdatadir) $(DESTDIR)$(dapspythondir)
all: all-recursive

.SUFFIXES:
am--refresh:
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):
install-dist_binSCRIPTS: $(dist_bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-dist_binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files
install-dist_dapslibexecSCRIPTS: $(dist_dapslibexec_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(dapslibexecdir)" || $(MKDIR_P) "$(DESTDIR)$(dapslibexecdir)"
	@list='$(dist_dapslibexec_SCRIPTS)'; test -n "$(dapslibexecdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(dapslibexecdir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(dapslibexecdir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-dist_dapslibexecSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_dapslibexec_SCRIPTS)'; test -n "$(dapslibexecdir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(dapslibexecdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(dapslibexecdir)" && rm -f $$files
install-man1: $(dist_man1_MANS)
	@$(NORMAL_INSTALL)
	test -z "$(man1dir)" || $(MKDIR_P) "$(DESTDIR)$(man1dir)"
	@list='$(dist_man1_MANS)'; test -n "$(man1dir)" || exit 0; \
	{ for i in $$list; do echo "$$i"; done; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man1dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man1dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man1dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man1dir)" || exit $$?; }; \
	done; }

uninstall-man1:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_man1_MANS)'; test -n "$(man1dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	test -z "$$files" || { \
	  echo " ( cd '$(DESTDIR)$(man1dir)' && rm -f" $$files ")"; \
	  cd "$(DESTDIR)$(man1dir)" && rm -f $$files; }
install-dist_catalogDATA: $(dist_catalog_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(catalogdir)" || $(MKDIR_P) "$(DESTDIR)$(catalogdir)"
	@list='$(dist_catalog_DATA)'; test -n "$(catalogdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(catalogdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(catalogdir)" || exit $$?; \
	done

uninstall-dist_catalogDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_catalog_DATA)'; test -n "$(catalogdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(catalogdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(catalogdir)" && rm -f $$files
install-dist_dapsconfDATA: $(dist_dapsconf_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(dapsconfdir)" || $(MKDIR_P) "$(DESTDIR)$(dapsconfdir)"
	@list='$(dist_dapsconf_DATA)'; test -n "$(dapsconfdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(dapsconfdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(dapsconfdir)" || exit $$?; \
	done

uninstall-dist_dapsconfDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_dapsconf_DATA)'; test -n "$(dapsconfdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(dapsconfdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(dapsconfdir)" && rm -f $$files
install-dist_dapslibDATA: $(dist_dapslib_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(dapslibdir)" || $(MKDIR_P) "$(DESTDIR)$(dapslibdir)"
	@list='$(dist_dapslib_DATA)'; test -n "$(dapslibdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(dapslibdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(dapslibdir)" || exit $$?; \
	done

uninstall-dist_dapslibDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_dapslib_DATA)'; test -n "$(dapslibdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(dapslibdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(dapslibdir)" && rm -f $$files
install-dist_dapsmakeDATA: $(dist_dapsmake_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(dapsmakedir)" || $(MKDIR_P) "$(DESTDIR)$(dapsmakedir)"
	@list='$(dist_dapsmake_DATA)'; test -n "$(dapsmakedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(dapsmakedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(dapsmakedir)" || exit $$?; \
	done

uninstall-dist_dapsmakeDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_dapsmake_DATA)'; test -n "$(dapsmakedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(dapsmakedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(dapsmakedir)" && rm -f $$files
install-dist_dapspythonDATA: $(dist_dapspython_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(dapspythondir)" || $(MKDIR_P) "$(DESTDIR)$(dapspythondir)"
	@list='$(dist_dapspython_DATA)'; test -n "$(dapspythondir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(dapspythondir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(dapspythondir)" || exit $$?; \
	done

uninstall-dist_dapspythonDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_dapspython_DATA)'; test -n "$(dapspythondir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(dapspythondir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(dapspythondir)" && rm -f $$files
install-dist_docDATA: $(dist_doc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(docdir)" || $(MKDIR_P) "$(DESTDIR)$(docdir)"
	@list='$(dist_doc_DATA)'; test -n "$(docdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(docdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(docdir)" || exit $$?; \
	done

uninstall-dist_docDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_doc_DATA)'; test -n "$(docdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(docdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(docdir)" && rm -f $$files
install-dist_emacssiteDATA: $(dist_emacssite_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(emacssitedir)" || $(MKDIR_P) "$(DESTDIR)$(emacssitedir)"
	@list='$(dist_emacssite_DATA)'; test -n "$(emacssitedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(emacssitedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(emacssitedir)" || exit $$?; \
	done

uninstall-dist_emacssiteDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_emacssite_DATA)'; test -n "$(emacssitedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(emacssitedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(emacssitedir)" && rm -f $$files
install-dist_fopconfDATA: $(dist_fopconf_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(fopconfdir)" || $(MKDIR_P) "$(DESTDIR)$(fopconfdir)"
	@list='$(dist_fopconf_DATA)'; test -n "$(fopconfdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(fopconfdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(fopconfdir)" || exit $$?; \
	done

uninstall-dist_fopconfDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_fopconf_DATA)'; test -n "$(fopconfdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(fopconfdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(fopconfdir)" && rm -f $$files
install-dist_hyphenDATA: $(dist_hyphen_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(hyphendir)" || $(MKDIR_P) "$(DESTDIR)$(hyphendir)"
	@list='$(dist_hyphen_DATA)'; test -n "$(hyphendir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(hyphendir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(hyphendir)" || exit $$?; \
	done

uninstall-dist_hyphenDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_hyphen_DATA)'; test -n "$(hyphendir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(hyphendir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(hyphendir)" && rm -f $$files
install-dist_templateDATA: $(dist_template_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(templatedir)" || $(MKDIR_P) "$(DESTDIR)$(templatedir)"
	@list='$(dist_template_DATA)'; test -n "$(templatedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(templatedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(templatedir)" || exit $$?; \
	done

uninstall-dist_templateDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_template_DATA)'; test -n "$(templatedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(templatedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(templatedir)" && rm -f $$files
install-dist_ttfontsDATA: $(dist_ttfonts_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(ttfontsdir)" || $(MKDIR_P) "$(DESTDIR)$(ttfontsdir)"
	@list='$(dist_ttfonts_DATA)'; test -n "$(ttfontsdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(ttfontsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(ttfontsdir)" || exit $$?; \
	done

uninstall-dist_ttfontsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_ttfonts_DATA)'; test -n "$(ttfontsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(ttfontsdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(ttfontsdir)" && rm -f $$files
install-dist_xepconfDATA: $(dist_xepconf_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(xepconfdir)" || $(MKDIR_P) "$(DESTDIR)$(xepconfdir)"
	@list='$(dist_xepconf_DATA)'; test -n "$(xepconfdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(xepconfdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(xepconfdir)" || exit $$?; \
	done

uninstall-dist_xepconfDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_xepconf_DATA)'; test -n "$(xepconfdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(xepconfdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(xepconfdir)" && rm -f $$files
install-dist_xsltcommonDATA: $(dist_xsltcommon_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(xsltcommondir)" || $(MKDIR_P) "$(DESTDIR)$(xsltcommondir)"
	@list='$(dist_xsltcommon_DATA)'; test -n "$(xsltcommondir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(xsltcommondir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(xsltcommondir)" || exit $$?; \
	done

uninstall-dist_xsltcommonDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_xsltcommon_DATA)'; test -n "$(xsltcommondir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(xsltcommondir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(xsltcommondir)" && rm -f $$files
install-dist_xsltcontribDATA: $(dist_xsltcontrib_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(xsltcontribdir)" || $(MKDIR_P) "$(DESTDIR)$(xsltcontribdir)"
	@list='$(dist_xsltcontrib_DATA)'; test -n "$(xsltcontribdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(xsltcontribdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(xsltcontribdir)" || exit $$?; \
	done

uninstall-dist_xsltcontribDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_xsltcontrib_DATA)'; test -n "$(xsltcontribdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(xsltcontribdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(xsltcontribdir)" && rm -f $$files
install-dist_xsltdesktopDATA: $(dist_xsltdesktop_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(xsltdesktopdir)" || $(MKDIR_P) "$(DESTDIR)$(xsltdesktopdir)"
	@list='$(dist_xsltdesktop_DATA)'; test -n "$(xsltdesktopdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(xsltdesktopdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(xsltdesktopdir)" || exit $$?; \
	done

uninstall-dist_xsltdesktopDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_xsltdesktop_DATA)'; test -n "$(xsltdesktopdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(xsltdesktopdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(xsltdesktopdir)" && rm -f $$files
install-dist_xsltepubDATA: $(dist_xsltepub_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(xsltepubdir)" || $(MKDIR_P) "$(DESTDIR)$(xsltepubdir)"
	@list='$(dist_xsltepub_DATA)'; test -n "$(xsltepubdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(xsltepubdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(xsltepubdir)" || exit $$?; \
	done

uninstall-dist_xsltepubDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_xsltepub_DATA)'; test -n "$(xsltepubdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(xsltepubdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(xsltepubdir)" && rm -f $$files
install-dist_xsltindexDATA: $(dist_xsltindex_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(xsltindexdir)" || $(MKDIR_P) "$(DESTDIR)$(xsltindexdir)"
	@list='$(dist_xsltindex_DATA)'; test -n "$(xsltindexdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(xsltindexdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(xsltindexdir)" || exit $$?; \
	done

uninstall-dist_xsltindexDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_xsltindex_DATA)'; test -n "$(xsltindexdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(xsltindexdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(xsltindexdir)" && rm -f $$files
install-dist_xsltmanDATA: $(dist_xsltman_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(xsltmandir)" || $(MKDIR_P) "$(DESTDIR)$(xsltmandir)"
	@list='$(dist_xsltman_DATA)'; test -n "$(xsltmandir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(xsltmandir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(xsltmandir)" || exit $$?; \
	done

uninstall-dist_xsltmanDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_xsltman_DATA)'; test -n "$(xsltmandir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(xsltmandir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(xsltmandir)" && rm -f $$files
install-dist_xsltprofilingDATA: $(dist_xsltprofiling_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(xsltprofilingdir)" || $(MKDIR_P) "$(DESTDIR)$(xsltprofilingdir)"
	@list='$(dist_xsltprofiling_DATA)'; test -n "$(xsltprofilingdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(xsltprofilingdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(xsltprofilingdir)" || exit $$?; \
	done

uninstall-dist_xsltprofilingDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_xsltprofiling_DATA)'; test -n "$(xsltprofilingdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(xsltprofilingdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(xsltprofilingdir)" && rm -f $$files
install-dist_xsltyelpDATA: $(dist_xsltyelp_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(xsltyelpdir)" || $(MKDIR_P) "$(DESTDIR)$(xsltyelpdir)"
	@list='$(dist_xsltyelp_DATA)'; test -n "$(xsltyelpdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(xsltyelpdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(xsltyelpdir)" || exit $$?; \
	done

uninstall-dist_xsltyelpDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_xsltyelp_DATA)'; test -n "$(xsltyelpdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(xsltyelpdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(xsltyelpdir)" && rm -f $$files
install-nodist_dapsconfDATA: $(nodist_dapsconf_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(dapsconfdir)" || $(MKDIR_P) "$(DESTDIR)$(dapsconfdir)"
	@list='$(nodist_dapsconf_DATA)'; test -n "$(dapsconfdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(dapsconfdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(dapsconfdir)" || exit $$?; \
	done

uninstall-nodist_dapsconfDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_dapsconf_DATA)'; test -n "$(dapsconfdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(dapsconfdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(dapsconfdir)" && rm -f $$files

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@list='$(MANS)'; if test -n "$$list"; then \
	  list=`for p in $$list; do \
	    if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	    if test -f "$$d$$p"; then echo "$$d$$p"; else :; fi; done`; \
	  if test -n "$$list" && \
	    grep 'ab help2man is required to generate this page' $$list >/dev/null; then \
	    echo "error: found man pages containing the \`missing help2man' replacement text:" >&2; \
	    grep -l 'ab help2man is required to generate this page' $$list | sed 's/^/         /' >&2; \
	    echo "       to fix them, install help2man, remove and regenerate the man pages;" >&2; \
	    echo "       typically \`make maintainer-clean' will remove them" >&2; \
	    exit 1; \
	  else :; fi; \
	else :; fi
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)
dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-lzma: distdir
	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma
	$(am__remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | xz -c >$(distdir).tar.xz
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lzma*) \
	  lzma -dc $(distdir).tar.lzma | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@$(am__cd) '$(distuninstallcheck_dir)' \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-recursive
all-am: Makefile $(SCRIPTS) $(MANS) $(DATA) all-local
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(dapslibexecdir)" "$(DESTDIR)$(man1dir)" "$(DESTDIR)$(catalogdir)" "$(DESTDIR)$(dapsconfdir)" "$(DESTDIR)$(dapslibdir)" "$(DESTDIR)$(dapsmakedir)" "$(DESTDIR)$(dapspythondir)" "$(DESTDIR)$(docdir)" "$(DESTDIR)$(emacssitedir)" "$(DESTDIR)$(fopconfdir)" "$(DESTDIR)$(hyphendir)" "$(DESTDIR)$(templatedir)" "$(DESTDIR)$(ttfontsdir)" "$(DESTDIR)$(xepconfdir)" "$(DESTDIR)$(xsltcommondir)" "$(DESTDIR)$(xsltcontribdir)" "$(DESTDIR)$(xsltdesktopdir)" "$(DESTDIR)$(xsltepubdir)" "$(DESTDIR)$(xsltindexdir)" "$(DESTDIR)$(xsltmandir)" "$(DESTDIR)$(xsltprofilingdir)" "$(DESTDIR)$(xsltyelpdir)" "$(DESTDIR)$(dapsconfdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
@CATALOG_EDIT_FALSE@uninstall-local:
clean: clean-recursive

clean-am: clean-generic clean-local mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -f Makefile
distclean-am: clean-am distclean-generic distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-data-local install-dist_catalogDATA \
	install-dist_dapsconfDATA install-dist_dapslibDATA \
	install-dist_dapsmakeDATA install-dist_dapspythonDATA \
	install-dist_docDATA install-dist_emacssiteDATA \
	install-dist_fopconfDATA install-dist_hyphenDATA \
	install-dist_templateDATA install-dist_ttfontsDATA \
	install-dist_xepconfDATA install-dist_xsltcommonDATA \
	install-dist_xsltcontribDATA install-dist_xsltdesktopDATA \
	install-dist_xsltepubDATA install-dist_xsltindexDATA \
	install-dist_xsltmanDATA install-dist_xsltprofilingDATA \
	install-dist_xsltyelpDATA install-man \
	install-nodist_dapsconfDATA

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-dist_binSCRIPTS \
	install-dist_dapslibexecSCRIPTS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man: install-man1

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-dist_binSCRIPTS uninstall-dist_catalogDATA \
	uninstall-dist_dapsconfDATA uninstall-dist_dapslibDATA \
	uninstall-dist_dapslibexecSCRIPTS uninstall-dist_dapsmakeDATA \
	uninstall-dist_dapspythonDATA uninstall-dist_docDATA \
	uninstall-dist_emacssiteDATA uninstall-dist_fopconfDATA \
	uninstall-dist_hyphenDATA uninstall-dist_templateDATA \
	uninstall-dist_ttfontsDATA uninstall-dist_xepconfDATA \
	uninstall-dist_xsltcommonDATA uninstall-dist_xsltcontribDATA \
	uninstall-dist_xsltdesktopDATA uninstall-dist_xsltepubDATA \
	uninstall-dist_xsltindexDATA uninstall-dist_xsltmanDATA \
	uninstall-dist_xsltprofilingDATA uninstall-dist_xsltyelpDATA \
	uninstall-local uninstall-man uninstall-nodist_dapsconfDATA

uninstall-man: uninstall-man1

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) ctags-recursive \
	install-am install-strip tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am all-local am--refresh check check-am clean \
	clean-generic clean-local ctags ctags-recursive dist dist-all \
	dist-bzip2 dist-gzip dist-lzma dist-shar dist-tarZ dist-xz \
	dist-zip distcheck distclean distclean-generic distclean-tags \
	distcleancheck distdir distuninstallcheck dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-data-local install-dist_binSCRIPTS \
	install-dist_catalogDATA install-dist_dapsconfDATA \
	install-dist_dapslibDATA install-dist_dapslibexecSCRIPTS \
	install-dist_dapsmakeDATA install-dist_dapspythonDATA \
	install-dist_docDATA install-dist_emacssiteDATA \
	install-dist_fopconfDATA install-dist_hyphenDATA \
	install-dist_templateDATA install-dist_ttfontsDATA \
	install-dist_xepconfDATA install-dist_xsltcommonDATA \
	install-dist_xsltcontribDATA install-dist_xsltdesktopDATA \
	install-dist_xsltepubDATA install-dist_xsltindexDATA \
	install-dist_xsltmanDATA install-dist_xsltprofilingDATA \
	install-dist_xsltyelpDATA install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-man1 \
	install-nodist_dapsconfDATA install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-generic pdf \
	pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-dist_binSCRIPTS uninstall-dist_catalogDATA \
	uninstall-dist_dapsconfDATA uninstall-dist_dapslibDATA \
	uninstall-dist_dapslibexecSCRIPTS uninstall-dist_dapsmakeDATA \
	uninstall-dist_dapspythonDATA uninstall-dist_docDATA \
	uninstall-dist_emacssiteDATA uninstall-dist_fopconfDATA \
	uninstall-dist_hyphenDATA uninstall-dist_templateDATA \
	uninstall-dist_ttfontsDATA uninstall-dist_xepconfDATA \
	uninstall-dist_xsltcommonDATA uninstall-dist_xsltcontribDATA \
	uninstall-dist_xsltdesktopDATA uninstall-dist_xsltepubDATA \
	uninstall-dist_xsltindexDATA uninstall-dist_xsltmanDATA \
	uninstall-dist_xsltprofilingDATA uninstall-dist_xsltyelpDATA \
	uninstall-local uninstall-man uninstall-man1 \
	uninstall-nodist_dapsconfDATA


#---------------------------Local TARGETS--------------------------------------
all-local: $(USERGUIDE) $(QUICKSTART) $(man_MANS) $(DAPS_CATALOG) \
	   bin/daps etc/config $(FOP_CONFIG)

$(INSTALLDIRS):
	test -z "$@" || $(MKDIR_P) $@

install-data-local: $(INSTALLDIRS)
install-data-local: TMP_CATALOG := $(shell mktemp -q catalogs/catalog.XXXXX)
install-data-local:
	for BOOK in $(MANUALS); do \
	  tar c --mode=u+w,go+r-w,a-s -C $$BOOK . | \
		(cd $(DESTDIR)$(docdir)/html; tar xp); \
	done
# create entry in xml root catalog
@CATALOG_EDIT_TRUE@	{ \
@CATALOG_EDIT_TRUE@	  sed '/<\/catalog>/d' $(ROOT_CATALOG); \
@CATALOG_EDIT_TRUE@	  $(XMLLINT) --nocatalogs --format $(DAPS_CATALOG) | \
@CATALOG_EDIT_TRUE@	    awk '/<\/catalog>/{next} s == 1 {print} /<catalog/{s=1} \
@CATALOG_EDIT_TRUE@	      END{print "</catalog>"}'; \
@CATALOG_EDIT_TRUE@	} >$(TMP_CATALOG)
@CATALOG_EDIT_TRUE@	chmod --reference=$(ROOT_CATALOG) $(TMP_CATALOG)
@CATALOG_EDIT_TRUE@	mv $(TMP_CATALOG) $(ROOT_CATALOG)

#---------------------------Local UNINSTALL-----------------------------------
@CATALOG_EDIT_TRUE@uninstall-local: TMP_CATALOG := $(shell mktemp -q catalog.XXXXX)
@CATALOG_EDIT_TRUE@uninstall-local:
@CATALOG_EDIT_TRUE@	$(XMLLINT) --nocatalogs --format $(ROOT_CATALOG) | \
@CATALOG_EDIT_TRUE@	  awk "/<\/group>/ && s == 1 {s=0;next} s == 1 {next} /<group id=\"$(PACKAGE)\">/{s=1;next} {print}" > $(TMP_CATALOG)
@CATALOG_EDIT_TRUE@	chmod --reference=$(ROOT_CATALOG) $(TMP_CATALOG)
@CATALOG_EDIT_TRUE@	mv $(TMP_CATALOG) $(ROOT_CATALOG)
#-----------------------------CLEAN--------------------------------------------
clean-local:
	rm -rf $(srcdir)/man/build/ $(srcdir)/doc/build/ $(srcdir)/.firstbuild \
	$(dir $(DAPS_CATALOG)) $(FOP_CONFIG) bin/daps etc/config 

#-----------------------------DAPS--------------------------------------------

# create temporary DAPS catalog entries file
$(DAPS_CATALOG): DAPS_PROFDIR := $(pkgdatadir)/daps-xslt/profiling
$(DAPS_CATALOG): URN_SUSE     := urn:x-suse:xslt:profiling
$(DAPS_CATALOG): URN_DAPS     := urn:x-daps:xslt:profiling
$(DAPS_CATALOG): DB_VERSIONS  := 41 42 43 44 45 50 51
$(DAPS_CATALOG):
	$(Q)test -z "$(dir $@)" || $(MKDIR_P) $(dir $@)
	$(Q)$(XMLCATALOG) --noout --create $@
	$(Q)for VERS in $(DB_VERSIONS); do \
	  $(XMLCATALOG) --noout --add \
	  "system" "$(URN_DAPS):docbook$${VERS}-profile.xsl" \
	  "file://$(DAPS_PROFDIR)/docbook$${VERS}-profile.xsl" $@; \
	  $(XMLCATALOG) --noout --add \
	  "system" "$(URN_SUSE):docbook$${VERS}-profile.xsl" \
	  "file://$(DAPS_PROFDIR)/docbook$${VERS}-profile.xsl" $@; \
	done
	$(Q)$(XMLCATALOG) --noout --add \
	  "system" "$(URN_DAPS):novdoc-profile.xsl" \
	  "file://$(DAPS_PROFDIR)/novdoc-profile.xsl" $@
	$(Q)$(XMLCATALOG) --noout --add \
	  "system" "$(URN_SUSE):novdoc-profile.xsl" \
	  "file://$(DAPS_PROFDIR)/novdoc-profile.xsl" $@
	$(Q)$(XMLCATALOG) --noout --add "rewriteSystem" \
	  "http://daps.sourceforge.net/release/daps-xsl/current/" \
	  "file://$(pkgdatadir)/daps-xslt/" $@
	$(Q)$(SED) -i '/^<!DOCTYPE .*>$$/d' $@
	$(Q)$(SED) -i '/<catalog/a\ <group id="$(PACKAGE)">' $@
	$(Q)$(SED) -i '/<\/catalog/i\ </group>' $@
	$(Q)$(srcdir)/bin/ccecho "result" "Created $@"

# the SVN sources contain links bin/daps, etc/config and $(FOP_CONFIG)
# These need to be replaced by real files/different links created by
# the respective targets below.
# To make sure they are rebuild at least once when make is called for
# the first time, we make them depend on a file we create first
# This file will be newer than the existing links and thus the targets
# will be rebuild.
# This helps to avoid PHONY targets which would be called with every single
# make call (even make clean) - something we definetely would like to avoid

.firstbuild:
	touch $@

# see http://www.gnu.org/software/autoconf/manual/autoconf.html#Installation-Directory-Variables
bin/daps: .firstbuild
	if [ -L $@ ]; then rm -f $@; fi
	$(REPL_PATH) $@.in > $@
	chmod +x $@

etc/config: .firstbuild
	if [ -L $@ ]; then rm -f $@; fi
	$(REPL_PATH) $@.in > $@

# Create the FOP config file. RedHat and SUSE require a special version
# (see FOP_CONFIG_SRC definitions above)
$(FOP_CONFIG): $(FOP_CONFIG_SRC) .firstbuild
	ln -sf $(notdir $<) $@

$(USERGUIDE): bin/daps etc/config
	$(Q)bin/daps $(DEBUG) --dapsroot=$(DAPSROOT) \
	    --docconfig=$(DC_USERGUIDE) html-single --static \
            --name=$(USERGUIDE_NAME)
	$(Q)$(srcdir)/bin/ccecho "result" "Created $@"

$(QUICKSTART): bin/daps etc/config
	$(Q)bin/daps $(DEBUG) --dapsroot=$(DAPSROOT) \
	    --docconfig=$(DC_QUICKSTART) html-single --static \
	    --name=$(QUICKSTART_NAME)
	$(Q)$(srcdir)/bin/ccecho "result" "Created $@"

# Generate man pages on the fly
$(dist_man1_MANS): bin/daps etc/config
	$(Q)bin/daps $(DEBUG) --dapsroot=$(DAPSROOT) --color=0 \
	  --docconfig=$(DAPSROOT)/man/$(DC_MANPAGES) man --nogzip
	$(Q)$(srcdir)/bin/ccecho "result" "Created man pages $@"

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
