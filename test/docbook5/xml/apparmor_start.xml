<!-- Converted by db4-upgrade version 1.1 -->

<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0" xml:id="cha.apparmor.start">
  <title>Getting Started</title>
  <para>
  Prepare a successful deployment of <phrase>AppArmor</phrase> on your system by carefully
  considering the following items:
 </para>
  <procedure>
    <step>
      <para>
    Determine the applications to profile. Read more on this in
    <xref linkend="sec.apparmor.start.choose"/>.
   </para>
    </step>
    <step>
      <para>
    Build the needed profiles as roughly outlined in
    <xref linkend="sec.apparmor.start.build"/>. Check the results and adjust
    the profiles when necessary.
   </para>
    </step>
    <step>
      <para>
    Update your profiles whenever your environment changes or you need to
    react to security events logged by the reporting tool of <phrase>AppArmor</phrase>. Refer to
    <xref linkend="sec.apparmor.start.update"/>.
   </para>
    </step>
  </procedure>
  <sect1 xml:id="sec.apparmor.start.install">
    <title>Installing <phrase>AppArmor</phrase></title>
    <para><phrase>AppArmor</phrase> is installed and running on any installation of <phrase role="productname"><phrase os="osuse">openSUSE速</phrase><phrase os="sles">SUSE速 Linux Enterprise Server</phrase><phrase os="sled">SUSE速 Linux Enterprise Desktop</phrase><phrase os="slerte">SUSE速 Linux Enterprise Real Time Extension</phrase></phrase> by
   default, regardless of what patterns are installed. The packages listed
   below are needed for a fully-functional instance of <phrase>AppArmor</phrase>:
  </para>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          <systemitem class="resource">apparmor-docs</systemitem>
        </para>
      </listitem>
      <listitem>
        <para>
          <systemitem class="resource">apparmor-parser</systemitem>
        </para>
      </listitem>
      <listitem>
        <para>
          <systemitem class="resource">apparmor-profiles</systemitem>
        </para>
      </listitem>
      <listitem>
        <para>
          <systemitem class="resource">apparmor-utils</systemitem>
        </para>
      </listitem>
      <listitem>
        <para>
          <systemitem class="resource">audit</systemitem>
        </para>
      </listitem>
      <listitem>
        <para>
          <systemitem class="resource">libapparmor1</systemitem>
        </para>
      </listitem>
      <listitem>
        <para>
          <systemitem class="resource">perl-libapparmor</systemitem>
        </para>
      </listitem>
      <listitem>
        <para>
          <systemitem class="resource">yast2-apparmor</systemitem>
        </para>
      </listitem>
    </itemizedlist>
    <tip>
      <para>
    If <phrase>AppArmor</phrase> is not installed on your system, install the pattern
    <systemitem class="resource">apparmor</systemitem> for a complete <phrase>AppArmor</phrase>
    installation. Either use the YaST Software Management module for
    installation, or use Zypper on the command line:
   </para>
      <screen>zypper in -t pattern apparmor</screen>
    </tip>
  </sect1>
  <sect1 xml:id="sec.apparmor.start.enable">
    <title>Enabling and Disabling <phrase>AppArmor</phrase></title>
    <para><phrase>AppArmor</phrase> is configured to run by default on any fresh installation of
<!--    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ --><phrase role="productname"><phrase os="osuse">openSUSE</phrase><phrase os="sles">SUSE Linux Enterprise Server</phrase><phrase os="sled">SUSE Linux Enterprise Desktop</phrase><phrase os="slerte">SUSE Linux Enterprise Real Time Extension</phrase></phrase>. There are two ways of toggling the status of <phrase>AppArmor</phrase>:
  </para>
    <variablelist>
      <varlistentry>
        <term>Using YaST Services Manager</term>
        <listitem>
          <para>
      Disable or enable <phrase>AppArmor</phrase> by removing or adding its boot script to the
      sequence of scripts executed on system boot. Status changes are
      applied on reboot.
     </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Using <phrase>AppArmor</phrase> Configuration Window</term>
        <listitem>
          <para>
      Toggle the status of <phrase>AppArmor</phrase> in a running system by switching it off or
      on using the YaST <phrase>AppArmor</phrase> Control Panel. Changes made here are applied
      instantaneously. The Control Panel triggers a stop or start event for
      <phrase>AppArmor</phrase> and removes or adds its boot script in the system's boot
      sequence.
     </para>
        </listitem>
      </varlistentry>
    </variablelist>
    <para>
   To disable <phrase>AppArmor</phrase> permanently (by removing it from the sequence of scripts
   executed on system boot) proceed as follows:
  </para>
    <procedure>
      <step>
        <para>
     Start YaST.
    </para>
      </step>
      <step>
        <para>
     Select <menuchoice><guimenu>System</guimenu><guimenu>Services
     Manager</guimenu></menuchoice>.
    </para>
      </step>
      <step>
        <para>
     Mark <literal>apparmor</literal> by clicking its row in the list of
     services, then click <guimenu>Enable/Disable</guimenu> in the lower
     part of the window. Check that <guimenu>Enabled</guimenu> changed to
     <guimenu>Disabled</guimenu> in the <literal>apparmor</literal> row.
    </para>
      </step>
      <step>
        <para>
     Confirm with <guimenu>OK</guimenu>.
    </para>
      </step>
    </procedure>
    <para><phrase>AppArmor</phrase> will not be initialized on reboot, and stays inactive until you
   re-enable it. Re-enabling a service using the YaST
   <guimenu>Services Manager</guimenu> tool is similar to disabling it.
  </para>
    <para>
   Toggle the status of <phrase>AppArmor</phrase> in a running system by using the <phrase>AppArmor</phrase>
   Configuration window. These changes take effect as soon as you apply them
   and survive a reboot of the system. To toggle the status of <phrase>AppArmor</phrase>, proceed
   as follows:
  </para>
    <procedure>
      <step>
        <para>
     Start YaST, select <guimenu><phrase>AppArmor</phrase> Configuration</guimenu>, and click
     <guimenu>Settings</guimenu> in the main window.
    </para>
      </step>
      <step>
        <para>
     Enable <phrase>AppArmor</phrase> by checking <guimenu>Enable <phrase>AppArmor</phrase></guimenu> or disable <phrase>AppArmor</phrase>
     by deselecting it.
    </para>
      </step>
      <step>
        <para>
     Click <guimenu>Done</guimenu> in the <guimenu><phrase>AppArmor</phrase>
     Configuration</guimenu> window.
    </para>
      </step>
    </procedure>
  </sect1>
  <sect1 xml:id="sec.apparmor.start.choose">
    <title>Choosing Applications to Profile</title>
    <para>
   You only need to protect the programs that are exposed to attacks in your
   particular setup, so only use profiles for those applications you
   actually run. Use the following list to determine the most likely
   candidates:
  </para>
    <simplelist>
      <member>Network Agents</member>
      <member>Web Applications</member>
      <member>Cron Jobs</member>
    </simplelist>
    <para>
   To find out which processes are currently running with open network ports
   and might need a profile to confine them, run
   <command>aa-unconfined</command> as <systemitem class="username">root</systemitem>.
  </para>
    <example xml:id="ex.unconfined">
      <title>Output of <command>aa-unconfined</command></title>
      <screen>19848 /usr/sbin/cupsd not confined
19887 /usr/sbin/sshd not confined
19947 /usr/lib/postfix/master not confined
1328 /usr/sbin/ntpd confined by '/usr/sbin/ntpd (enforce)'</screen>
    </example>
    <para>
   Each of the processes in the above example labeled <literal>not
   confined</literal> might need a custom profile to confine it. Those
   labeled <literal>confined by</literal> are already protected by <phrase>AppArmor</phrase>.
  </para>
    <tip>
      <title>For More Information</title>
      <para>
    For more information about choosing the right applications to profile,
    refer to <xref linkend="sec.apparmor.concept.determine"/>.
   </para>
    </tip>
  </sect1>
  <sect1 xml:id="sec.apparmor.start.build">
    <title>Building and Modifying Profiles</title>
    <para><phrase>AppArmor</phrase> on <phrase role="productname"><phrase os="osuse">openSUSE</phrase><phrase os="sles">SUSE Linux Enterprise Server</phrase><phrase os="sled">SUSE Linux Enterprise Desktop</phrase><phrase os="slerte">SUSE Linux Enterprise Real Time Extension</phrase></phrase> ships with a preconfigured set of profiles for the
   most important applications. In addition, you can use <phrase>AppArmor</phrase> to create your
   own profiles for any application you want.
  </para>
    <para>
   There are two ways of managing profiles. One is to use the graphical
   front-end provided by the YaST <phrase>AppArmor</phrase> modules and the other is to use the
   command line tools provided by the <phrase>AppArmor</phrase> suite itself. The main difference
   is that YaST supports only basic functionality for <phrase>AppArmor</phrase> profiles, while
   the command line tools let you update/tune the profiles in a more
   fine-grained way.
  </para>
    <para>
   For each application, perform the following steps to create a profile:
  </para>
    <procedure xml:id="proc.genprof">
      <step xml:id="st.genprof1">
        <para>
     As <systemitem class="username">root</systemitem>, let <phrase>AppArmor</phrase> create a rough outline of the application's
     profile by running <command>aa-genprof
     <replaceable>programname</replaceable></command>.
    </para>
        <para>
          <emphasis>or</emphasis>
        </para>
        <para><!-- this part of YaST is not too useful IMHO - "vi $profile" works better ;-) -->
     Outline the basic profile by running <menuchoice><guimenu>YaST</guimenu><guimenu>Security and Users</guimenu><guimenu><phrase>AppArmor</phrase> Configuration</guimenu><guimenu>Manually Add
     Profile</guimenu></menuchoice> and specifying the complete path to the
     application you want to profile.
    </para>
        <para>
     A new basic profile is outlined and put into learning mode, which means
     that it logs any activity of the program you are executing, but does
     not yet restrict it.
    </para>
      </step>
      <step xml:id="st.genprof2">
        <para>
     Run the full range of the application's actions to let <phrase>AppArmor</phrase> get a very
     specific picture of its activities.
    </para>
      </step>
      <step xml:id="st.genprof3">
        <para>
     Let <phrase>AppArmor</phrase> analyze the log files generated in
     <xref linkend="st.genprof2"/> by typing <keycap>S</keycap> in
     aa-genprof.
    </para>
        <para><phrase>AppArmor</phrase> scans the logs it recorded during the application's run and asks
     you to set the access rights for each event that was logged. Either set
     them for each file or use globbing.
    </para>
      </step>
      <step>
        <para>
     Depending on the complexity of your application, it might be necessary
     to repeat <xref linkend="st.genprof2"/> and
     <xref linkend="st.genprof3"/>. Confine the application, exercise it
     under the confined conditions, and process any new log events. To
     properly confine the full range of an application's capabilities, you
     might be required to repeat this procedure often.
    </para>
      </step>
      <step xml:id="st.genprof4">
        <para>
     When you finish <command>aa-genprof</command>, your profile is set to
     enforce mode. The profile is applied and <phrase>AppArmor</phrase> restricts the application
     according to it.
    </para>
        <para>
     If you started <command>aa-genprof</command> on an application that had
     an existing profile that was in complain mode, this profile remains in
     learning mode upon exit of this learning cycle. For more information
     about changing the mode of a profile, refer to
     <xref linkend="sec.apparmor.commandline.profiling.summary.complain"/>
     and
     <xref linkend="sec.apparmor.commandline.profiling.summary.enforce"/>.
    </para>
      </step>
    </procedure>
    <para>
   Test your profile settings by performing every task you need with the
   application you confined. Normally, the confined program runs smoothly
   and you do not notice <phrase>AppArmor</phrase> activities at all. However, if you notice
   certain misbehavior with your application, check the system logs and see
   if <phrase>AppArmor</phrase> is too tightly confining your application. Depending on the log
   mechanism used on your system, there are several places to look for <phrase>AppArmor</phrase>
   log entries:
  </para>
    <simplelist>
      <member>
        <filename>/var/log/audit/audit.log</filename>
      </member>
      <member>The command <command>journalctl | grep -i apparmor</command></member>
      <member>The command <command>dmesg -T</command></member>
    </simplelist>
    <para>
   To adjust the profile, analyze the log messages relating to this
   application again as described in
   <xref linkend="sec.apparmor.commandline.profiling.summary.logprof"/>.
   Determine the access rights or restrictions when prompted.
  </para>
    <tip>
      <title>For More Information</title>
      <para>
    For more information about profile building and modification, refer to
    <xref linkend="cha.apparmor.profiles"/>,
    <xref linkend="cha.apparmor.yast"/>, and
    <xref linkend="cha.apparmor.commandline"/>.
   </para>
    </tip>
  </sect1>
  <sect1 xml:id="sec.apparmor.start.update">
    <title>Updating Your Profiles</title>
    <para>
   Software and system configurations change over time. As a result, your
   profile setup for <phrase>AppArmor</phrase> might need some fine-tuning from time to time.
   <phrase>AppArmor</phrase> checks your system log for policy violations or other <phrase>AppArmor</phrase> events
   and lets you adjust your profile set accordingly. Any application
   behavior that is outside of any profile definition can be addressed by
   <command>aa-logprof</command>. For more information, see
   <xref linkend="sec.apparmor.commandline.profiling.summary.logprof"/>.
  </para>
  </sect1>
</chapter>
