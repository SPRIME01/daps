<!-- Converted by db4-upgrade version 1.1 -->

<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0" xml:id="cha.deployment.autoinst">
  <title>Automated Installation</title>
  <para>
  AutoYaST allows you to install SUSE® Linux Enterprise on a large number of machines in
  parallel. The AutoYaST technology offers great flexibility to adjust
  deployments to heterogeneous hardware. This chapter tells you how to
  prepare a simple automated installation and lay out an advanced scenario
  involving different hardware types and installation purposes.
 </para>
  <sect1 xml:id="sec.deployment.autoinst.simple">
    <title>Simple Mass Installation</title>
    <important>
      <title>Identical Hardware</title>
      <para>
    This scenario assumes you are rolling out SUSE Linux Enterprise to a set of machines
    with exactly the same hardware configuration.
   </para>
    </important>
    <para>
   To prepare for an AutoYaST mass installation, proceed as follows:
  </para>
    <procedure>
      <step>
        <para>
     Create an AutoYaST profile that contains the installation details needed
     for your deployment as described in
     <xref linkend="sec.deployment.autoinst.simple.profile"/>.
    </para>
      </step>
      <step>
        <para>
     Determine the source of the AutoYaST profile and the parameter to pass to
     the installation routines as described in
     <xref linkend="sec.deployment.autoinst.simple.dist"/>.
    </para>
      </step>
      <step>
        <para>
     Determine the source of the SUSE Linux Enterprise installation data as described in
     <xref linkend="sec.deployment.autoinst.simple.source"/>.
    </para>
      </step>
      <step>
        <para>
     Determine and set up the boot scenario for autoinstallation as
     described in
     <xref linkend="sec.deployment.autoinst.simple.boot"/>.
    </para>
      </step>
      <step>
        <para>
     Pass the command line to the installation routines by adding the
     parameters manually or by creating an <filename>info</filename> file as
     described in
     <xref linkend="sec.deployment.autoinst.simple.info"/>.
    </para>
      </step>
      <step>
        <para>
     Start the autoinstallation process as described in
     <xref linkend="sec.deployment.autoinst.simple.install"/>.
    </para>
      </step>
    </procedure>
    <sect2 xml:id="sec.deployment.autoinst.simple.profile">
      <title>Creating an AutoYaST Profile</title>
      <para>
    An AutoYaST profile tells AutoYaST what to install and how to configure the
    installed system to get a completely ready-to-use system in the end. It
    can be created in several different ways:
   </para>
      <itemizedlist>
        <listitem>
          <para>
      Clone a fresh installation from a reference machine to a set of
      identical machines
     </para>
        </listitem>
        <listitem>
          <para>
      Use the AutoYaST GUI to create and modify a profile to meet your
      requirements
     </para>
        </listitem>
        <listitem>
          <para>
      Use an XML editor and create a profile from scratch
     </para>
        </listitem>
      </itemizedlist>
      <para>
    To clone a fresh reference installation, proceed as follows:
   </para>
      <procedure>
        <step>
          <para>
      Start a normal installation as described in <xref linkend="cha.inst"/>
      and configure the system according to your needs. On the
      <guimenu>Installation Settings</guimenu> screen
      (<xref linkend="sec.i.yast2.proposal"/>) choose <guimenu>Clone
      System Configuration</guimenu> and activate <guimenu>Write AutoYaST
      profile to /root/autoinst.xml</guimenu>.
     </para>
        </step>
        <step>
          <para>
      A ready-to-use profile will be created at
      <filename>/root/autoinst.xml</filename>. It can be used to create
      clones of this particular installation.
     </para>
        </step>
      </procedure>
      <para>
    To use the AutoYaST GUI to create a profile from an existing system
    configuration and modify it to your needs, proceed as follows:
   </para>
      <procedure>
        <step>
          <para>
      As <systemitem class="username">root</systemitem>, start YaST.
     </para>
        </step>
        <step>
          <para>
      Select <menuchoice><guimenu>Miscellaneous</guimenu><guimenu>Autoinstallation</guimenu></menuchoice> to start the
      graphical AutoYaST front-end.
     </para>
        </step>
        <step>
          <para>
      Select <menuchoice><guimenu>Tools</guimenu><guimenu>Create Reference
      Profile</guimenu></menuchoice> to prepare AutoYaST to mirror the current
      system configuration into an AutoYaST profile.
     </para>
        </step>
        <step>
          <para>
      As well as the default resources (like boot loader, partitioning, and
      software selection), you can add various other aspects of your system
      to the profile by checking the items in the list in <guimenu>Create a
      Reference Control File</guimenu>.
     </para>
        </step>
        <step>
          <para>
      Click <guimenu>Create</guimenu> to have YaST gather all the system
      information and write it to a new profile.
     </para>
        </step>
        <step>
          <para>
      To proceed, choose one of the following:
     </para>
          <itemizedlist>
            <listitem>
              <para>
        If the profile is complete and matches your requirements, select
        <menuchoice><guimenu>File</guimenu><guimenu>Save as</guimenu></menuchoice> and enter a file name for the profile, such as
        <filename>autoinst.xml</filename>.
       </para>
            </listitem>
            <listitem>
              <para>
        Modify the reference profile by selecting the appropriate
        configuration aspects (such as <quote>Hardware/Printer</quote>) from
        the tree view to the left and clicking <guimenu>Configure</guimenu>.
        The respective YaST module starts but your settings are written to
        the AutoYaST profile instead of applied to your system. When done,
        select <menuchoice><guimenu>File</guimenu><guimenu>Save
        as</guimenu></menuchoice> and enter a suitable name for the
        profile.
       </para>
            </listitem>
          </itemizedlist>
        </step>
        <step>
          <para>
      Leave the AutoYaST module with <menuchoice><guimenu>File</guimenu><guimenu>Exit</guimenu></menuchoice>.
     </para>
        </step>
      </procedure>
      <figure>
        <title>Editing an AutoYaST Profile with the AutoYaST Front-End</title>
        <mediaobject>
          <imageobject role="fo">
            <imagedata fileref="autoyast_gui.png" width="75%" format="PNG"/>
          </imageobject>
          <imageobject role="html">
            <imagedata fileref="autoyast_gui.png" width="75%" format="PNG"/>
          </imageobject>
        </mediaobject>
      </figure>
    </sect2>
    <sect2 xml:id="sec.deployment.autoinst.simple.dist">
      <title>Distributing the Profile and Determining the AutoYaST Parameter</title>
      <para>
    The AutoYaST profile can be distributed in several different ways. Depending
    on the protocol used to distribute the profile data, different AutoYaST
    parameters are used to make the profile location known to the
    installation routines on the client. The location of the profile is
    passed to the installation routines by means of the boot prompt or an
    <filename>info</filename> file that is loaded upon boot. The following
    options are available:
   </para>
      <informaltable>
        <tgroup cols="3">
          <thead>
            <row>
              <entry>
                <para>
         Profile Location
        </para>
              </entry>
              <entry>
                <para>
         Parameter
        </para>
              </entry>
              <entry>
                <para>
         Description
        </para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
                <para>
         File
        </para>
              </entry>
              <entry>
                <para>
                  <filename>autoyast=file://<replaceable>path</replaceable></filename>
                </para>
              </entry>
              <entry>
                <para>
         Makes the installation routines look for the control file in the
         specified path (relative to source root
         directory—<filename>file:///autoinst.xml</filename> if in the
         top directory of a CD-ROM).
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         Device
        </para>
              </entry>
              <entry>
                <para>
                  <filename>autoyast=device://<replaceable>path</replaceable></filename>
                </para>
              </entry>
              <entry>
                <para>
         Makes the installation routines look for the control file on a
         storage device. Only the device name is
         needed—<filename>/dev/sda1</filename> is wrong, use
         <filename>sda1</filename> instead.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         NFS
        </para>
              </entry>
              <entry>
                <para>
                  <!--adjust to standard network example-->
                  <filename>autoyast=nfs://<replaceable>server</replaceable>/<replaceable>path</replaceable></filename>
                </para>
              </entry>
              <entry>
                <para>
         Has the installation routines retrieve the control file from an NFS
         server.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         HTTP
        </para>
              </entry>
              <entry>
                <para>
                  <!--adjust to standard network example-->
                  <filename>autoyast=http://<replaceable>server</replaceable>/<replaceable>path</replaceable></filename>
                </para>
              </entry>
              <entry>
                <para>
         Has the installation routines retrieve the control file from an
         HTTP server.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         HTTPS
        </para>
              </entry>
              <entry>
                <para>
                  <!--adjust to standard network example-->
                  <filename>autoyast=https://<replaceable>server</replaceable>/<replaceable>path</replaceable></filename>
                </para>
              </entry>
              <entry>
                <para>
         Has the installation routines retrieve the control file from an
         HTTPS server.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         TFTP
        </para>
              </entry>
              <entry>
                <para>
                  <!--adjust to standard network example-->
                  <filename>autoyast=tftp://<replaceable>server</replaceable>/<replaceable>path</replaceable></filename>
                </para>
              </entry>
              <entry>
                <para>
         Has the installation routines retrieve the control file from a TFTP
         server.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         FTP
        </para>
              </entry>
              <entry>
                <para>
                  <!--adjust to standard network example-->
                  <filename>autoyast=ftp://<replaceable>server</replaceable>/<replaceable>path</replaceable></filename>
                </para>
              </entry>
              <entry>
                <para>
         Has the installation routines retrieve the control file from an FTP
         server.
        </para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
      <para>
    Replace the <replaceable>server</replaceable> and
    <replaceable>path</replaceable> placeholders with values matching your
    actual setup.
   </para>
      <para>
    AutoYaST includes a feature that allows the binding of certain profiles to
    the client's MAC address. Without having to alter the
    <option>autoyast=</option> parameter, you can have the same setup
    install several different instances using different profiles.
   </para>
      <para>
    To use this, proceed as follows:
   </para>
      <procedure>
        <step>
          <para>
      Create separate profiles with the MAC address of the client as the
      file name and put them on the HTTP server that holds your AutoYaST
      profiles.
     </para>
        </step>
        <step>
          <para>
      Omit the exact path including the file name when creating the
      <option>autoyast=</option> parameter, for example:
     </para>
          <screen>autoyast=tftp://192.168.1.115/</screen>
        </step>
        <step>
          <para>
      Start the autoinstallation.
     </para>
        </step>
      </procedure>
      <para>
    YaST tries to determine the location of the profile in the following
    way:
   </para>
      <orderedlist>
        <listitem>
          <para>
      YaST searches for the profile using its own IP address in uppercase
      hexadecimal, for example, <literal>192.0.2.91</literal> is
      <literal>C000025B</literal>.
     </para>
        </listitem>
        <listitem>
          <para>
      If this file is not found, YaST removes one hex digit and tries
      again. This action is repeated eight times until the file with the
      correct name is found.
     </para>
        </listitem>
        <listitem>
          <para>
      If that still fails, it tries locating a file with the MAC address of
      the clients as the file name. The MAC address of the example client is
      <literal>0080C8F6484C</literal>.
     </para>
        </listitem>
        <listitem>
          <para>
      If the MAC address–named file cannot be found, YaST searches
      for a file named <filename>default</filename> (in lowercase). An
      example sequence of addresses where YaST searches for the AutoYaST
      profile looks as follows:
     </para>
          <screen>
C000025B 
C000025 
C00002 
C0000 
C000 
C00 
C0 
C 
0080C8F6484C 
default
     </screen>
        </listitem>
      </orderedlist>
    </sect2>
    <sect2 xml:id="sec.deployment.autoinst.simple.source">
      <title>Providing the Installation Data</title>
      <para>
    The installation data can be provided by means of the product CDs or
    DVDs or using a network installation source. If the product CDs are used
    as the installation source, physical access to the client to be
    installed is needed, because the boot process needs to be initiated
    manually and the CDs need to be changed.
   </para>
      <para>
    To provide the installation sources over the network, set up a network
    installation server (HTTP, NFS, FTP) as described in
    <xref linkend="sec.deployment.remoteinst.instserver.sles9"/>. Use an
    <filename>info</filename> file to pass the server's location to the
    installation routines.
   </para>
    </sect2>
    <sect2 xml:id="sec.deployment.autoinst.simple.boot">
      <title>Setting Up the Boot Scenario</title>
      <para>
    The client can be booted in several different ways:
   </para>
      <variablelist>
        <varlistentry>
          <term>Network Boot</term>
          <listitem>
            <para>
       As with a normal remote installation, autoinstallation can be
       initiated with Wake on LAN and PXE, the boot image and control file
       can be pulled in via TFTP, and the installation sources from any
       network installation server.
      </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Bootable CD-ROM</term>
          <listitem>
            <para>
       You can use the original SUSE Linux Enterprise media to boot the system for
       autoinstallation and pull in the control file from a network location
       or a removable media. Alternatively, create your own custom CD-ROM
       holding both the installation sources and the AutoYaST profile.
      </para>
          </listitem>
        </varlistentry>
      </variablelist>
      <para>
    The following sections provide a basic outline of the procedures for
    network boot or boot from CD-ROM.
   </para>
      <sect3 xml:id="sec.deployment.autoinst.simple.boot.pxe">
        <title>Preparing for Network Boot</title>
        <para>
     Network booting with Wake on LAN, PXE, and TFTP is discussed in
     <xref linkend="sec.deployment.remoteinst.scenario.vncpxe"/>. To
     make the setup introduced there work for autoinstallation, modify the
     featured PXE Linux configuration file
     (<filename>/srv/tftp/pxelinux.cfg/default</filename>) to contain the
     <literal>autoyast</literal> parameter pointing to the location of the
     AutoYaST profile. An example entry for a standard installation looks like
     this:
    </para>
        <screen>
default linux 

# default label linux 
    kernel linux
    append initrd=initrd install=http://192.168.1.115/install/suse-enterprise/ 
	  
	</screen>
        <para>
     The same example for autoinstallation looks like this:
    </para>
        <screen>
default linux 

# default label linux 
    kernel linux
    append initrd=initrd install=http://192.168.1.115/install/suse-enterprise/ \
           autoyast=nfs://192.168.1.110/profiles/autoinst.xml
	</screen>
        <para>
     Replace the example IP addresses and paths with the data used in your
     setup.
    </para>
      </sect3>
      <sect3 xml:id="sec.deployment.autoinst.simple.boot.cd">
        <title>Preparing to Boot from CD-ROM</title>
        <para>
     There are several ways in which booting from CD-ROM can come into play
     in AutoYaST installations. Choose from the following scenarios:
    </para>
        <variablelist>
          <varlistentry>
            <term>Boot from SUSE Linux Enterprise Media, Get the Profile over the Network</term>
            <listitem>
              <para>
        Use this approach if a totally network-based scenario is not
        possible (for example, if your hardware does not support PXE) and
        you have physical access to system to install during most of the
        process.
       </para>
              <para>
        You need:
       </para>
              <itemizedlist>
                <listitem>
                  <para>
          The SUSE Linux Enterprise media
         </para>
                </listitem>
                <listitem>
                  <para>
          A network server providing the profile data (see
          <xref linkend="sec.deployment.autoinst.simple.dist"/>
          for details)
         </para>
                </listitem>
                <listitem>
                  <para>
          A removable media containing the <filename>info</filename> file
          that tells the installation routines where to find the profile
         </para>
                  <para>
                    <emphasis>or</emphasis>
                  </para>
                  <para>
          Access to the boot prompt of the system to install where you
          manually enter the <literal>autoyast=</literal> parameter
         </para>
                </listitem>
              </itemizedlist>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term> Boot and Install from SUSE Linux Enterprise Media, Get the Profile from a
      Removable Media</term>
            <listitem>
              <para>
        Use this approach if an entirely network-based installation scenario
        would not work. It requires physical access to the system to be
        installed for turning on the target machine, or, in the second case,
        to enter the profile's location at the boot prompt. In both cases,
        you may also need to change media depending on the scope of
        installation.
       </para>
              <para>
        You need:
       </para>
              <itemizedlist>
                <listitem>
                  <para>
          The SUSE Linux Enterprise media
         </para>
                </listitem>
                <listitem>
                  <para>
          A removable media holding both the profile and the
          <filename>info</filename> file
         </para>
                  <para>
                    <emphasis>or</emphasis>
                  </para>
                  <para>
          Access to the boot prompt of the target to enter the
          <option>autoyast=</option> parameter
         </para>
                </listitem>
              </itemizedlist>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Boot and Install from Custom Media, Get the Profile from the Media</term>
            <listitem>
              <para>
        If you need to install a limited number of software packages and the
        number of targets is relatively low, creating your own custom CD
        holding both the installation data and the profile itself might
        prove a good idea, especially if no network is available in your
        setup.
       </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </sect3>
    </sect2>
    <sect2 xml:id="sec.deployment.autoinst.simple.info">
      <title>Creating the <filename>info</filename> File</title>
      <para>
    The installation routines at the target need to be made aware of all the
    different components of the AutoYaST framework. This is done by creating a
    command line containing all the parameters needed to locate the AutoYaST
    components, installation sources, and the parameters needed to control
    the installation process.
   </para>
      <para>
    Do this by manually passing these parameters at the boot prompt of the
    installation or by providing a file called <filename>info</filename>
    that is read by the installation routines (linuxrc). The former requires
    physical access to any client to install, which makes this approach
    unsuitable for large deployments. The latter enables you to provide the
    <filename>info</filename> file on some media that is prepared and
    inserted into the clients' drives prior to the autoinstallation.
    Alternatively, use PXE boot and include the linuxrc parameters in the
    <filename>pxelinux.cfg/default</filename> file as shown in
    <xref linkend="sec.deployment.autoinst.simple.boot.pxe"/>.
   </para>
      <para>
    The following parameters are commonly used for linuxrc. For more
    information, refer to the AutoYaST package documentation under
    <filename>/usr/share/doc/packages/autoyast</filename>.
   </para>
      <important>
        <title>Separating Parameters and Values</title>
        <para>
     When passing parameters to linuxrc at the boot prompt, use
     <literal>=</literal> to separate parameter and value. When using an
     <filename>info</filename> file, separate parameter and value with
     <literal>:</literal>.
    </para>
      </important>
      <informaltable>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>
                <para>
         Keyword
        </para>
              </entry>
              <entry>
                <para>
         Value
        </para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
                <para>
                  <literal>netdevice</literal>
                </para>
              </entry>
              <entry>
                <para>
         The network device to use for network setup (for BOOTP/DHCP
         requests). Only needed if several network devices are available.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
                  <literal>hostip</literal>
                </para>
              </entry>
              <entry>
                <para>
         When empty, the client sends a BOOTP request. Otherwise the client
         is configured using the specified data.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
                  <literal>netmask</literal>
                </para>
              </entry>
              <entry>
                <para>
         Netmask for the selected network.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
                  <literal>gateway</literal>
                </para>
              </entry>
              <entry>
                <para>
         Default gateway.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
                  <literal>nameserver</literal>
                </para>
              </entry>
              <entry>
                <para>
         Name server.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
                  <literal>autoyast</literal>
                </para>
              </entry>
              <entry>
                <para>
         Location of the control file to use for the automatic installation,
         such as <literal>autoyast=nfs//192.168.1.110/profiles/</literal>.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
                  <literal>install</literal>
                </para>
              </entry>
              <entry>
                <para>
         Location of the installation source, such as
         <literal>install=nfs://192.168.1.110/CDs/</literal>.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
                  <literal>vnc</literal>
                </para>
              </entry>
              <entry>
                <para>
         If set to <literal>1</literal>, enables VNC remote controlled
         installation.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
                  <literal>vncpassword</literal>
                </para>
              </entry>
              <entry>
                <para>
         The password for VNC.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
                  <literal>usessh</literal>
                </para>
              </entry>
              <entry>
                <para>
         If set to <literal>1</literal>, enables SSH remote controlled
         installation.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
                  <literal>netsetup</literal>
                </para>
              </entry>
              <entry>
                <para>
         If set to <literal>1</literal>, sets up the network. Normally this
         is done automatically, but you need to set
         <literal>netsetup=1</literal> in case the installation repository
         is provided locally (for example, via DVD or local iso image) and
         the <filename>info</filename> file is loaded from the network.
        </para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
      <para>
    If your autoinstallation scenario involves client configuration via DHCP
    and a network installation source, and you want to monitor the
    installation process using VNC, your <filename>info</filename> would
    look like this:
   </para>
      <screen>autoyast:<replaceable>profile_source</replaceable> install:<replaceable>install_source</replaceable> vnc:1 vncpassword:<replaceable>some_password</replaceable></screen>
      <para>
    If you prefer a static network setup at installation time, your
    <filename>info</filename> file would look like the following:
   </para>
      <screen>
autoyast:<replaceable>profile_source</replaceable> \
install:<replaceable>install_source</replaceable> \ 
hostip:<replaceable>some_ip</replaceable> \ 
netmask:<replaceable>some_netmask</replaceable> \ 
gateway:<replaceable>some_gateway</replaceable></screen>
      <para>
    The <literal>\</literal> indicates that the line breaks have only been
    added for the sake of readability. All options must be entered as one
    continuous string.
   </para>
      <para>
    The <filename>info</filename> data can be made available to linuxrc in
    various different ways:
   </para>
      <itemizedlist>
        <listitem>
          <para>
      As a file on a removable media that is available on the client at
      installation time. Add the info parameter similar to
      <systemitem>info=cd:/info</systemitem>.
     </para>
        </listitem>
        <listitem>
          <para>
      As a file in the root directory of the initial RAM disk used for
      booting the system provided either from custom installation media or
      via PXE boot.
     </para>
        </listitem>
        <listitem>
          <para>
      As part of the AutoYaST profile. In this case, the AutoYaST file needs to be
      called <filename>info</filename> to enable linuxrc to parse it. An
      example for this approach is given below.
     </para>
        </listitem>
        <listitem>
          <para>
      By means of an URL that points to the location of the info file. The
      syntax for this looks like
      <systemitem>info=http://www.example.com/info</systemitem>.
     </para>
        </listitem>
      </itemizedlist>
      <para>
    linuxrc looks for a string (<option>start_linuxrc_conf</option>) in the
    profile that represents the beginning of the file. If it is found, it
    parses the content starting from that string and finishes when the
    string <option>end_linuxrc_conf</option> is found. The options are
    stored in the profile as follows:
   </para>
      <screen>....
  &lt;install&gt;
....
    &lt;init&gt;
      &lt;info_file&gt;
&lt;![CDATA[
#
# Don't remove the following line:
# start_linuxrc_conf
#
install: nfs:<replaceable>server</replaceable>/<replaceable>path</replaceable>
vnc: 1
vncpassword: test
autoyast: file:///info

# end_linuxrc_conf
# Do not remove the above comment
#
]]&gt;

      &lt;/info_file&gt;
    &lt;/init&gt;
......
  &lt;/install&gt;
....
</screen>
      <para>
    linuxrc loads the profile containing the boot parameters instead of the
    traditional <filename>info</filename> file. The
    <option>install:</option> parameter points to the location of the
    installation sources. <option>vnc</option> and
    <option>vncpassword</option> indicate the use of VNC for installation
    monitoring. The <option>autoyast</option> parameter tells linuxrc to
    treat <filename>info</filename> as an AutoYaST profile.
   </para>
    </sect2>
    <sect2 xml:id="sec.deployment.autoinst.simple.install">
      <title>Initiating and Monitoring the Autoinstallation</title>
      <para>
    After you have provided all the infrastructure mentioned above (profile,
    installation source, and <filename>info</filename> file), you can go
    ahead and start the autoinstallation. Depending on the scenario chosen
    for booting and monitoring the process, physical interaction with the
    client may be needed:
   </para>
      <itemizedlist>
        <listitem>
          <para>
      If the client system boots from any kind of physical media, either
      product media or custom CDs, you need to insert these into the
      client's drives.
     </para>
        </listitem>
        <listitem>
          <para>
      If the client is not switched on via Wake on LAN, you need to at least
      switch on the client machine.
     </para>
        </listitem>
        <listitem>
          <para>
      If you have not opted for remote controlled autoinstallation, the
      graphical feedback from AutoYaST is sent to the client's attached monitor
      or, if you use a headless client, to a serial console.
     </para>
        </listitem>
      </itemizedlist>
      <para>
    To enable remote controlled autoinstallation, use the VNC or SSH
    parameters described in
    <xref linkend="sec.deployment.autoinst.simple.info"/> and connect to the
    client from another machine as described in
    <xref linkend="sec.deployment.remoteinst.monitor"/>.
   </para>
    </sect2>
  </sect1>
  <sect1 xml:id="sec.deployment.autoinst.advanced">
    <title>Rule-Based Autoinstallation</title>
    <para>
   The following sections introduce the basic concept of rule-based
   installation using AutoYaST and provide an example scenario that enables you
   to create your own custom autoinstallation setup.
  </para>
    <sect2 xml:id="sec.deployment.autoinst.advanced.expl">
      <title>Understanding Rule-Based Autoinstallation</title>
      <para>
    Rule-based AutoYaST installation allows you to cope with heterogeneous
    hardware environments:
   </para>
      <itemizedlist>
        <listitem>
          <para>
      Does your site contain hardware of different vendors?
     </para>
        </listitem>
        <listitem>
          <para>
      Are the machines on your site of different hardware configuration (for
      example, using different devices or using different memory and disk
      sizes)?
     </para>
        </listitem>
        <listitem>
          <para>
      Do you intend to install across different domains and need to
      distinguish between them?
     </para>
        </listitem>
      </itemizedlist>
      <para>
    Rule-based autoinstallation starts with generating a custom profile to
    match a heterogeneous scenario by merging several profiles into one.
    Each rule describes one particular distinctive feature of your setup
    (such as disk size) and tells AutoYaST which profile to use when the rule
    matches. Several rules describing different features of your setup are
    combined in an AutoYaST <filename>rules.xml</filename> file. The rule stack
    is then processed and AutoYaST generates the final profile by merging the
    different profiles matching the AutoYaST rules into one. To illustrate this
    procedure, refer to
    <xref linkend="sec.deployment.autoinst.advanced.example"/>.
   </para>
      <para>
    Rule-based AutoYaST offers you great flexibility in planning and executing
    your SUSE Linux Enterprise deployment. You can:
   </para>
      <itemizedlist>
        <listitem>
          <para>
      Create rules for matching any of the predefined system attributes in
      AutoYaST
     </para>
        </listitem>
        <listitem>
          <para>
      Combine multiple system attributes (such as disk size and kernel
      architecture) into one rule by using logical operators
     </para>
        </listitem>
        <listitem>
          <para>
      Create custom rules by running shell scripts and passing their output
      to the AutoYaST framework. The number of custom rules is limited to five.
     </para>
        </listitem>
      </itemizedlist>
      <note>
        <para>
     For more information about rule creation and usage with AutoYaST, refer to
     the package's documentation under
     <filename>/usr/share/doc/packages/autoyast2/html/index.html</filename>,
     Chapter <guimenu>Rules and Classes</guimenu>.
    </para>
      </note>
      <para>
    To prepare for a rule-based AutoYaST mass installation, proceed as follows:
   </para>
      <procedure>
        <step>
          <para>
      Create several AutoYaST profiles that contain the installation details
      needed for your heterogeneous setup as described in
      <xref linkend="sec.deployment.autoinst.simple.profile"/>.
     </para>
        </step>
        <step>
          <para>
      Define rules to match the system attributes of your hardware setup as
      shown in
      <xref linkend="sec.deployment.autoinst.advanced.example"/>.
     </para>
        </step>
        <step>
          <para>
      Determine the source of the AutoYaST profile and the parameter to pass to
      the installation routines as described in
      <xref linkend="sec.deployment.autoinst.simple.dist"/>.
     </para>
        </step>
        <step>
          <para>
      Determine the source of the SUSE Linux Enterprise installation data as described in
      <xref linkend="sec.deployment.autoinst.simple.source"/>.
     </para>
        </step>
        <step>
          <para>
      Pass the command line to the installation routines by adding the
      parameters manually or by creating an <filename>info</filename> file
      as described in
      <xref linkend="sec.deployment.autoinst.simple.info"/>.
     </para>
        </step>
        <step>
          <para>
      Determine and set up the boot scenario for autoinstallation as
      described in
      <xref linkend="sec.deployment.autoinst.simple.boot"/>.
     </para>
        </step>
        <step>
          <para>
      Start the autoinstallation process as described in
      <xref linkend="sec.deployment.autoinst.simple.install"/>.
     </para>
        </step>
      </procedure>
    </sect2>
    <sect2 xml:id="sec.deployment.autoinst.advanced.example">
      <title>Example Scenario for Rule-Based Autoinstallation</title>
      <para>
    To get a basic understanding of how rules are created, think of the
    following example, depicted in <xref linkend="fig.autoyast.rules"/>. One
    run of AutoYaST installs the following setup:
   </para>
      <variablelist>
        <varlistentry>
          <term>A Print Server</term>
          <listitem>
            <para>
       This machine only needs a minimal installation without a desktop
       environment and a limited set of software packages.
      </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Workstations in the Engineering Department</term>
          <listitem>
            <para>
       These machines need a desktop environment and a broad set of
       development software.
      </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Laptops in the Sales Department</term>
          <listitem>
            <para>
       These machines need a desktop environment and a limited set of
       specialized applications, such as office and calendaring software.
      </para>
          </listitem>
        </varlistentry>
      </variablelist>
      <figure xml:id="fig.autoyast.rules">
        <title>AutoYaST Rules</title>
        <mediaobject>
          <imageobject role="fo">
            <imagedata fileref="autoyast_rules.svg" width="90%" format="SVG"/>
          </imageobject>
          <imageobject role="html">
            <imagedata fileref="autoyast_rules.png" width="80%" format="PNG"/>
          </imageobject>
        </mediaobject>
      </figure>
      <para>
    In a first step, use one of the methods outlined in
    <xref linkend="sec.deployment.autoinst.simple.profile"/> to create
    profiles for each use case. In this example, you would create
    <filename>print.xml</filename>, <filename>engineering.xml</filename>,
    and <filename>sales.xml</filename>.
   </para>
      <para>
    In the second step, create rules to distinguish the three hardware types
    from one another and to tell AutoYaST which profile to use. Use an algorithm
    similar to the following to set up the rules:
   </para>
      <orderedlist>
        <listitem>
          <para>
      Does the machine have an IP of <guimenu>192.168.2.253</guimenu>? Then
      make it the print server.
     </para>
        </listitem>
        <listitem>
          <para>
      Does the machine have PCMCIA hardware and feature an Intel chipset?
      Then consider it an Intel laptop and install the sales department
      software selection.
     </para>
        </listitem>
        <listitem>
          <para>
      If none of the above is true, consider the machine a developer
      workstation and install accordingly.
     </para>
        </listitem>
      </orderedlist>
      <para>
    Roughly sketched, this translates into a <filename>rules.xml</filename>
    file with the following content:
   </para>
      <screen>
&lt;?xml version="1.0"?&gt;
&lt;!DOCTYPE autoinstall SYSTEM "/usr/share/autoinstall/dtd/rules.dtd"&gt; 
&lt;autoinstall xmlns="http://www.suse.com/1.0/yast2ns" xmlns:config="http://www.suse.com/1.0/configns"&gt;
  &lt;rules config:type="list"&gt;
    &lt;rule&gt;
       &lt;hostaddress&gt;
	    &lt;match&gt;192.168.2.253&lt;/match&gt;
            &lt;match_type&gt;exact&lt;/match_type&gt;
       &lt;/hostaddress&gt;
       &lt;result&gt;
            &lt;profile&gt;print.xml&lt;/profile&gt;
            &lt;continue config:type="boolean"&gt;false&lt;/continue&gt;
        &lt;/result&gt;
    &lt;/rule&gt;
    &lt;rule&gt;
       &lt;haspcmcia&gt;
            &lt;match&gt;1&lt;/match&gt;
            &lt;match_type&gt;exact&lt;/match_type&gt;
       &lt;/haspcmcia&gt;
       &lt;custom1&gt;
           &lt;script&gt;
if grep -i intel /proc/cpuinfo &gt; /dev/null; then
echo -n "intel"
else
echo -n "non_intel"
fi;
           &lt;/script&gt;
           &lt;match&gt;*&lt;/match&gt;
           &lt;match_type&gt;exact&lt;/match_type&gt;
       &lt;/custom1&gt;
       &lt;result&gt;
            &lt;profile&gt;sales.xml&lt;/profile&gt;
            &lt;continue config:type="boolean"&gt;false&lt;/continue&gt;
        &lt;/result&gt;
        &lt;operator&gt;and&lt;/operator&gt;
    &lt;/rule&gt;
    &lt;rule&gt;
        &lt;haspcmcia&gt;
            &lt;match&gt;0&lt;/match&gt;
            &lt;match_type&gt;exact&lt;/match_type&gt;
        &lt;/haspcmcia&gt;
 	&lt;result&gt;
            &lt;profile&gt;engineering.xml&lt;/profile&gt;
            &lt;continue config:type="boolean"&gt;false&lt;/continue&gt;
        &lt;/result&gt;
    &lt;/rule&gt;
  &lt;/rules&gt;
&lt;/autoinstall&gt;
</screen>
      <para>
    When distributing the rules file, make sure that the
    <filename>rules</filename> directory resides under the
    <filename>profiles</filename> directory, specified in the
    <filename>autoyast=<replaceable>protocol</replaceable>:<replaceable>serverip</replaceable>/profiles/</filename>
    URL. AutoYaST looks for a <filename>rules</filename> subdirectory containing
    a file named <filename>rules.xml</filename> first then loads and merges
    the profiles specified in the rules file.
   </para>
      <para>
    The rest of the autoinstallation procedure is carried out as usual.
   </para>
    </sect2>
  </sect1>
  <sect1 xml:id="sec.deployment.autoinst.moreinfo">
    <title>For More Information</title>
    <para><!-- ke, 2012-11-13: We do not seem to ship the ay docs with sled -->
   For in-depth information about the AutoYaST technology, refer to
   <phrase os="sles"><xref linkend="book.autoyast"/> or </phrase> the
   documentation installed along with the software
   (<filename>/usr/share/doc/packages/autoyast2</filename>).
  </para>
  </sect1>
</chapter>
