<!-- Converted by db4-upgrade version 1.1 -->

<book xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0" xml:lang="en" xml:id="book.autoyast">
  <info>
    <title>
      <emphasis>AutoYaST</emphasis>
    </title>
    <productname>
      <phrase role="productname">
        <phrase os="osuse">openSUSE</phrase>
        <phrase os="sles">SUSE Linux Enterprise Server</phrase>
        <phrase os="sled">SUSE Linux Enterprise Desktop</phrase>
        <phrase os="slerte">SUSE Linux Enterprise Real Time Extension</phrase>
      </phrase>
    </productname>
    <productnumber>
      <phrase role="productname">
        <phrase os="osuse">12.2</phrase>
        <phrase os="sles;sled;slerte">12</phrase>
      </phrase>
    </productnumber>
    <date>
      <?dbtimestamp format="B d, Y" ?>
    </date>
    <xi:include href="common_copyright_gfdl.xml" parse="xml"/>
    <abstract>
      <para>
    AutoYaST is a system for installing one or more SUSE Linux Enterprise
     systems automatically and without user intervention, using an AutoYaST
     profile that contains installation and configuration data. The manual
     guides you through the basic steps of auto-installation: preparation,
     installation, and configuration.
   </para>
    </abstract>
  </info>
  <chapter xml:id="introduction">
    <title>Introduction</title>
    <para>
   AutoYaST is a system for installing one or more SUSE Linux systems
   automatically and without user intervention. AutoYaST installations are
   performed using an AutoYaST control file (also called <quote>profile</quote>)
   with installation and configuration data. That control file can be
   created using the configuration interface of AutoYaST and can be provided to
   YaST during installation in different ways.
  </para>
    <sect1 xml:id="motiv">
      <title>Motivation</title>
      <para>
    In an article in issue 78, the Linux Journal
    (<link xlink:href="http://www.linuxjournal.com/"/>) writes:
   </para>
      <para>
        <quote> A standard Linux installation asks many questions about what to
    install, what hardware to configure, how to configure the network
    interface, etc. Answering these questions once is informative and maybe
    even fun. But imagine a system engineer who has to set up a new Linux
    network with a large number of machines. Now, the same issues need to be
    addressed and the same questions answered repeatedly. This makes the
    task very inefficient, not to mention a source of irritation and
    boredom. Hence, a need arises to automate this parameter and option
    selection.</quote>
      </para>
      <para>
        <quote>The thought of simply copying the hard disks naturally crosses
    one's mind. This can be done quickly, and all the necessary functions
    and software will be copied without option selection. However, the fact
    is that simple copying of hard disks causes the individual computers to
    become too similar. This, in turn, creates an altogether new mission of
    having to reconfigure the individual settings on each PC. For example,
    IP addresses for each machine will have to be reset. If this is not done
    properly, strange and inexplicable behavior results.</quote>
      </para>
      <para>
    A regular installation of SUSE Linux is semi-automated by default. The
    user is requested to select the necessary information at the beginning
    of the installation (In most cases language only), YaST then generates
    a proposal for the underlying system depending on different factors and
    system paramters. In most cases, and especially for new systems, such a
    proposal can be used to install the system and provides a usable
    installation. The steps following the proposal are fully automated.
   </para>
      <para>
    AutoYaST can be used where no user intervention is required or where
    customization is required. Using an AutoYaST control file, YaST prepares
    the system for a custom installation and avoids any interaction with the
    user, unless specified in the file controlling the installation.
   </para>
      <para>
    AutoYaST is not an automated GUI system. This means that in most cases many
    screens will be skipped, i.e. you will never see the language selection
    interface. AutoYaST will simply pass the language parameter to the
    sub-system without displaying any language related interface.
   </para>
    </sect1>
    <sect1 xml:id="overviewandconcept">
      <title>Overview and Concept</title>
      <para>
    Using AutoYaST, multiple systems can easily be installed in parallel and
    quickly. They need to share the same environment and similar, but not
    necessarily identical, hardware. The installation is defined by an XML
    configuration file (usually named <filename>autoinst.xml</filename>)
    referred to as the <quote>AutoYaST control file</quote>. It can initially be
    created using existing configuration resources easily be tailored for
    any specific environment.
   </para>
      <para>
    AutoYaST is fully integrated and provides various options for installing and
    configuring a system. The main advantage over other auto-installation
    systems is the possibility to configure a computer by using existing
    modules and avoiding using custom scripts which are normally executed at
    the end of the installation.
   </para>
      <para>
    This document will guide you through the three steps of
    auto-installation:
   </para>
      <itemizedlist>
        <listitem>
          <para>
      Preparation: All relevant information about the target system is
      collected and turned into the appropriate directives of the control
      file. The control file is transferred onto the target system where its
      directives will be parsed and fed into YaST.
     </para>
        </listitem>
        <listitem>
          <para>
      Installation: YaST performs the installation of the basic system
      using the data from the AutoYaST control file.
     </para>
        </listitem>
        <listitem>
          <para>
      Configuration: After the installation of the basic system, the system
      configuration is performed in the second stage of the installation.
      User defined post-installation scripts from the AutoYaST control file will
      also be executed at this stage.
     </para>
        </listitem>
      </itemizedlist>
      <note>
        <title>Second Stage</title>
        <para>
     A regular installation of <phrase role="productname"><phrase os="osuse">openSUSE</phrase><phrase os="sles">SUSE Linux Enterprise Server</phrase><phrase os="sled">SUSE Linux Enterprise Desktop</phrase><phrase os="slerte">SUSE Linux Enterprise Real Time Extension</phrase></phrase><phrase role="productname"><phrase os="osuse">12.2</phrase><phrase os="sles;sled;slerte">12</phrase></phrase> is performed in
     a single stage. The auto-installation process, however, is diveded into
     two stages. After the installation of the basic system the system boots
     into the second stage where the system configuration is done.
    </para>
        <para>
     The second stage can be turned off with the
     <literal>second_stage</literal> parameter:
    </para>
        <screen>&lt;general&gt;
  &lt;mode&gt;
    &lt;confirm config:type="boolean"&gt;false&lt;/confirm&gt;
    &lt;second_stage config:type="boolean"&gt;false&lt;/second_stage&gt;
  &lt;/mode&gt;
&lt;/general&gt;</screen>
      </note>
      <para>
    The complete and detailed process is illustrated in the following
    figure:
   </para>
      <figure xml:id="process">
        <title>Auto-installation process</title>
        <mediaobject>
          <imageobject role="html">
            <imagedata fileref="autoyast-oview.png"/>
          </imageobject>
          <imageobject role="fo">
            <imagedata fileref="autoyast-oview.png" width="75%"/>
          </imageobject>
        </mediaobject>
      </figure>
    </sect1>
  </chapter>
  <chapter xml:id="Profile">
    <title>The Control File</title>
    <para/>
    <sect1 xml:id="Profile.Intro">
      <title>Introduction</title>
      <para>
    The control file is in most cases a configuration description for a
    single system. It consists of sets of resources with properties
    including support for complex structures such as lists, records, trees
    and large embedded or referenced objects.
   </para>
      <important>
        <title>Control Files from Previous Releases are Incompatible</title>
        <para>
     A lot of major changes were introduced with <phrase role="productname"><phrase os="osuse">openSUSE</phrase><phrase os="sles">SUSE Linux Enterprise Server</phrase><phrase os="sled">SUSE Linux Enterprise Desktop</phrase><phrase os="slerte">SUSE Linux Enterprise Real Time Extension</phrase></phrase> 12 (the
     switch to systemd and GRUB 2 for example). These changes also required
     fundamental changes in AutoYaST, therefore you cannot use AutoYaST control
     files created on previous SUSE Linux Enterprise versions to install <phrase role="productname"><phrase os="osuse">openSUSE</phrase><phrase os="sles">SUSE Linux Enterprise Server</phrase><phrase os="sled">SUSE Linux Enterprise Desktop</phrase><phrase os="slerte">SUSE Linux Enterprise Real Time Extension</phrase></phrase> 12
     and vice versa.
    </para>
      </important>
    </sect1>
    <sect1 xml:id="Profile.Format">
      <title>Format</title>
      <para>
    The XML configuration format provides a consistent file structure, which
    is easy to learn and to remember when attempting to configure a new
    system.
   </para>
      <para>
    The AutoYaST control file uses XML to describe the system installation and
    configuration. XML is a commonly used mark up and many users are
    familiar with the concepts of the language and the tools used to process
    XML files. If you edit an existing control file or create a control file
    using an editor from scratch, it is strongly recommended to validate the
    control file using a validating XML parser such as
    <literal>xmllint</literal>, for example.
   </para>
      <para>
    The following example shows a control file in XML format:
   </para>
      <example>
        <title>AutoYaST Control File (Profile)</title>
        <screen>&lt;?xml version="1.0"?&gt;
&lt;!DOCTYPE profile&gt;
&lt;profile
  xmlns="http://www.suse.com/1.0/yast2ns"
  xmlns:config="http://www.suse.com/1.0/configns"&gt;
  &lt;partitioning  config:type="list"&gt;
    &lt;drive&gt;
      &lt;device&gt;/dev/sda&lt;/device&gt;
      &lt;partitions config:type="list"&gt;
        &lt;partition&gt;
          &lt;filesystem config:type="symbol"&gt;btrfs&lt;/filesystem&gt;
          &lt;size&gt;10G&lt;/size&gt;
          &lt;mount&gt;/&lt;/mount&gt;
        &lt;/partition&gt;
        &lt;partition&gt;
          &lt;filesystem config:type="symbol"&gt;xfs&lt;/filesystem&gt;
          &lt;size&gt;120G&lt;/size&gt;
          &lt;mount&gt;/data&lt;/mount&gt;
        &lt;/partition&gt;
      &lt;/partitions&gt;
    &lt;/drive&gt;
  &lt;/partitioning&gt;
  &lt;scripts&gt;
    &lt;pre-scripts&gt;
      &lt;script&gt; 
        &lt;interpreter&gt;shell&lt;/interpreter&gt;
        &lt;filename&gt;start.sh&lt;/filename&gt;
        &lt;source&gt;
        &lt;![CDATA[
#!/bin/sh 
echo "Starting installation" 
exit 0

]]&gt;

        &lt;/source&gt;
      &lt;/script&gt;  
    &lt;/pre-scripts&gt;
  &lt;/scripts&gt;
&lt;/profile&gt;</screen>
      </example>
    </sect1>
    <sect1 xml:id="Profile.Structure">
      <title>Structure</title>
      <para>
    Below is an example of a basic control file container, the actual
    content of which is explained later on in this chapter.
   </para>
      <example>
        <title>Control file container</title>
        <screen>&lt;?xml version="1.0"?&gt;
&lt;!DOCTYPE profile&gt;
&lt;profile
  xmlns="http://www.suse.com/1.0/yast2ns"
  xmlns:config="http://www.suse.com/1.0/configns"&gt;
  &lt;!-- RESOURCES --&gt;
&lt;/profile&gt;</screen>
      </example>
      <para>
    The <literal>&lt;profile&gt;</literal> element (root node) contains one
    or more distinct resource elements. The permissible resource elements
    are specified in the schema files
   </para>
      <sect2>
        <title>Resources and Properties</title>
        <para>
     A resource element either contains multiple and distinct property and
     resource elements, or multiple instances of the same resource element,
     or it is empty. The permissible content of a resource element is
     specified in the schema files.
    </para>
        <para>
     A property element is either empty or contains a literal value. The
     permissible property elements and values in each resource element are
     specified in the schema files
    </para>
        <para>
     An element can be either a container of other elements (a resource) or
     it has a literal value (a property); it can never be both. This
     restriction is specified in the schema files. A configuration component
     with more than one value must either be represented as some kind of
     embedded list in a property value or as a nested resource.
    </para>
      </sect2>
      <sect2>
        <title>Nested Resources</title>
        <para>
     Nested resource elements allow a tree-like structure of configuration
     components to be built to any level.
    </para>
        <example>
          <title>Nested Resources</title>
          <screen>...
&lt;drive&gt; 
  &lt;device&gt;/dev/sda&lt;/device&gt; 
  &lt;partitions&gt; &lt;!-- this is wrong, explanation below --&gt;
    &lt;partition&gt; 
      &lt;size&gt;10G&lt;/size&gt; 
      &lt;mount&gt;/&lt;/mount&gt; 
    &lt;/partition&gt; 
    &lt;partition&gt; 
      &lt;size&gt;1G&lt;/size&gt; 
      &lt;mount&gt;/tmp&lt;/mount&gt; 
    &lt;/partition&gt; 
  &lt;/partitions&gt; 
&lt;/drive&gt;
....</screen>
        </example>
        <para>
     In the example above the disk resource consists of a device property
     and a partitions resource. The partitions resource contains multiple
     instances of the partition resource. Each partition resource contains a
     size and mount property.
    </para>
        <para>
     The XML schema defines the partitions element as a resource supporting
     one or multiple partition element children. If only one partition
     resource is specified it is important to use the
     <literal>config:type</literal> attribute of the partitions element to
     indicate that the content is a resource, in this case a list. Using the
     partitions element with out specifying the type in this case will
     result in undefined behavior as YaST will improperly interpret the
     partitions resource as a property. The example below illustrates this
     use case.
    </para>
        <example>
          <title>Nested Resources with Type Attributes</title>
          <screen>...
&lt;drive&gt; 
  &lt;device&gt;/dev/sda&lt;/device&gt; 
  &lt;partitions config:type="list"&gt; 
     &lt;partition&gt; 
        &lt;size&gt;10G&lt;/size&gt; 
        &lt;mount&gt;/&lt;/mount&gt; 
     &lt;/partition&gt; 
     &lt;partition&gt; 
        &lt;size&gt;1G&lt;/size&gt; 
        &lt;mount&gt;/tmp&lt;/mount&gt; 
     &lt;/partition&gt; 
  &lt;/partitions&gt; 
&lt;/drive&gt;
....</screen>
        </example>
      </sect2>
      <sect2>
        <title>Attributes</title>
        <para>
     Global attributes are used to define meta-data on resources and
     properties. Attributes are used to define context switching. They are
     also used for naming and typing properties as shown in the previous
     sections. Attributes are in a separate namespace so they do not have to
     be treated as reserved words in the default namespace.
    </para>
        <para>
     Global attributes are defined in the configuration namespace and must
     always be prefixed with <literal>config:</literal> . All attributes are
     optional. Most can be used with both resource and property elements but
     some can only be used with one type of element which is specified in
     the schema files.
    </para>
        <para>
     The type of an element is defined using the
     <literal>config:type</literal> attribute. The type of a resource
     element is always RESOURCE, although this can also be made explicit
     with this attribute (to ensure correct identification of an empty
     element, for example, when there is no schema file to refer to). A
     resource element cannot be any other type and this restriction is
     specified in the schema file. The type of a property element determines
     the interpretation of its literal value. The type of a property element
     defaults to <literal>STRING</literal>, as specified in the schema file.
     The full set of permissible types is specified in the schema file.
    </para>
      </sect2>
    </sect1>
    <sect1 xml:id="Profile.DTD">
      <title>RELAX NG—A Schema Language for XML</title>
      <para>
        <remark role="fixme">Add a short description</remark>
      </para>
      <sect2>
        <title>Introduction</title>
        <para>
     A RELAX NG schema specifies a pattern for the structure and content of
     an XML document. A RELAX NG schema thus identifies a class of XML
     documents consisting of those documents that match the pattern. A RELAX
     NG schema is itself an XML document.
    </para>
      </sect2>
    </sect1>
  </chapter>
  <chapter xml:id="CreateProfile">
    <title>Creating A Control File</title>
    <para/>
    <sect1 xml:id="Autoinstallation.collectInfo">
      <title>Collecting Information</title>
      <para>
    In order to create the control file, you need to collect information
    about the systems your are going to install. This includes hardware data
    and network information among other things. Make sure you have the
    following information about the machines you want to install:
   </para>
      <itemizedlist>
        <listitem>
          <para>
      Hard disk types and sizes
     </para>
        </listitem>
        <listitem>
          <para>
      Graphical interface and attached monitor, if any
     </para>
        </listitem>
        <listitem>
          <para>
      Network interface and MAC address if known (for example, when using
      DHCP)
     </para>
        </listitem>
      </itemizedlist>
    </sect1>
    <sect1 xml:id="CreateProfile.CMS">
      <title>Using the Configuration Management System (CMS)</title>
      <para>
    In order to create the control file for one or more computers, a
    configuration interface based on YaST is provided. This system depends
    on existing modules which are usually used to configure a computer in
    regular operation mode, for example, after <phrase role="productname"><phrase os="osuse">openSUSE</phrase><phrase os="sles">SUSE Linux Enterprise Server</phrase><phrase os="sled">SUSE Linux Enterprise Desktop</phrase><phrase os="slerte">SUSE Linux Enterprise Real Time Extension</phrase></phrase> is installed.
   </para>
      <para>
    The configuration management system lets you create control files easily
    and lets you manage a repository of configurations for the use in a
    networked environment with multiple clients.
   </para>
      <figure>
        <title>Configuration System</title>
        <mediaobject>
          <imageobject role="html">
            <imagedata fileref="autoyast2-maindialog.png"/>
          </imageobject>
          <imageobject role="fo">
            <imagedata fileref="autoyast2-maindialog.png" width="75%"/>
          </imageobject>
        </mediaobject>
      </figure>
      <sect2>
        <title>Creating a New Control File</title>
        <para>
     With some exceptions, almost all resources of the control file can be
     configured using the configuration management system. The system offers
     flexibility and the configuration of some resources is identical to the
     one available in the YaST Control Center. In addition to the existing
     and familiar modules new interfaces were created for special and
     complex configurations, for example for partitioning, general options
     and software.
    </para>
        <para>
     Furthermore, using a CMS guarantees the validity of the resulting
     control file and its direct use for starting automated installation.
    </para>
        <para>
     Make sure the configuration system is installed (package
     <systemitem class="resource">autoyast2</systemitem> and call it
     using the YaST Control Center or as root with the following command
     (make sure the <envar>DISPLAY</envar> variable is set correctly to
     start the graphical user interface instead of the text based one):
    </para>
        <screen>/sbin/yast2 autoyast</screen>
      </sect2>
    </sect1>
    <sect1 xml:id="CreateProfile.Manual">
      <title>Creating/Editing a Control File Manually</title>
      <para>
    If editing the control file manually, make sure it has a valid syntax.
    To check the syntax, use the tools already available on the
    distribution. For example, to verify that the file is well-formed, use
    the utility <command>xmllint</command> available with the
    <systemitem>libxml2</systemitem> package:
   </para>
      <screen>xmllint &lt;control file&gt;</screen>
      <para>
    If the control file is not well formed, for example, if a tag is not
    closed, <command>xmllint</command> will report about the errors.
   </para>
      <para>
    Before going on with the autoinstallation, fix any errors resulting from
    such checks. The autoinstallation process cannot be started with an
    invalid and not well-formed control file.
   </para>
      <para>
    You can use any XML editor available on your system or any text editor
    with XML support (for example, Emacs, Vim). However, it is not optimal
    to create the control file manually for a large number of machines and
    it should only be seen as an interface between the autoinstallation
    engine and the Configuration Management System (CMS).
   </para>
      <tip>
        <title>Using Emacs as an XML Editor</title>
        <para>
     The built-in nxml-mode turns Emacs into a fully-flegded XML editor with
     automatic tag completion and validation. Refer to the Emacs help for
     instructions on how to set up nxml-mode.
    </para>
      </tip>
    </sect1>
    <sect1 xml:id="CreateProfile.XSLT">
      <title>Creating a Control File via Script with XSLT</title>
      <para>
    If you have a template and want to change a few things via script or
    command line, use an XSLT processor like <literal>xsltproc</literal>.
    For example, if you have an AutoYaST control file and want to fillout the
    hostname via script for any reason (if doing this so often, you want to
    script it)
   </para>
      <para>
    First, create an XSL file
   </para>
      <example>
        <title>Example file for replacing hostname/domain by script</title>
        <screen>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns:y2="http://www.suse.com/1.0/yast2ns"
  xmlns:config="http://www.suse.com/1.0/configns"
  xmlns="http://www.suse.com/1.0/yast2ns"
  version="1.0"&gt;
  &lt;xsl:output method="xml" encoding="UTF-8" indent="yes" omit-xml-declaration="no" cdata-section-elements="source"/&gt;

  &lt;!-- the parameter names --&gt;
  &lt;xsl:param name="hostname"/&gt;
  &lt;xsl:param name="domain"/&gt;

  &lt;xsl:template match="/"&gt;
    &lt;xsl:apply-templates select="@*|node()"/&gt;
  &lt;/xsl:template&gt;

  &lt;xsl:template match="y2:dns"&gt;
    &lt;xsl:copy&gt;
      &lt;!-- where to copy the parameters --&gt;
      &lt;domain&gt;&lt;xsl:value-of select="string($domain)"/&gt;&lt;/domain&gt;
      &lt;hostname&gt;&lt;xsl:value-of select="string($hostname)"/&gt;&lt;/hostname&gt;  
      &lt;xsl:apply-templates select="@*|node()"/&gt;
    &lt;/xsl:copy&gt;
  &lt;/xsl:template&gt;


  &lt;xsl:template match="@*|node()" &gt;
    &lt;xsl:copy&gt;
      &lt;xsl:apply-templates select="@*|node()"/&gt;
    &lt;/xsl:copy&gt;
  &lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</screen>
      </example>
      <para>
    This file expects the host name and the domain name as parameters from
    the user.
   </para>
      <remark condition="clarity">
    2014-09-19 - fs: FIXME: add xsltproc command and fix the following
                     paragraph
   </remark>
      <screen>&lt;xsl:param name="hostname"/&gt;
&lt;xsl:param name="domain"/&gt;</screen>
      <para>
    There will be a copy of those parameters in the dns section of the
    control file. That means, if there already is a domain element in the
    dns section, you will get a second one (no good).
   </para>
      <remark>mdejmek: why is this no good? please explain</remark>
      <!-- FIXME: rewrite these sections using xsltproc
   <para>
    If you want to create a new &ay; control file now from the template plus
    the XSL file, run the following command:
   </para>

<screen>sabcmd add_hostname.xsl \$hostname=myHost \$domain=my.domain  template.xml</screen>

   <para>
    You will get a filled out &ay; control file then on STDOUT.
   </para>

   <para>
    If you have multiple XSL files you want to apply to a template, do the
    following:
   </para>

<screen>sabcmd add_hd_vg.xsl \$device=/dev/sda \$partition=p2 \$vg=system \
        | sabcmd add_harddisk.xsl \$device=/dev/system \$lvm=true \
        | sabcmd ....
        | sabcmd add_hostname.xsl \$hostname=myHost \$domain=my.domain</screen>

   <para>
    Pipe the output of each sabcmd to the next sabcmd.
   </para>
-->
      <para>
    For more information about XSLT, go to the official Web page
    <link xlink:href="http://www.w3.org/TR/xslt">http://www.w3.org/TR/xslt</link></para>
    </sect1>
  </chapter>
  <chapter xml:id="configuration">
    <title>Configuration and Installation Options</title>
    <para>
   This chapter introduces important parts of a control file for standard
   purposes. To learn about other available options, use the configuration
   management system.
  </para>
    <para>
   Note that for some of the configuration options to work, additional
   packages have to be installed, depending on the software selection you
   have configured. If you choose to install a minimal system then some
   packages might be missing and have to be added to the individual package
   selection.
  </para>
    <para>
   YaST will install packages required in the second phase of the
   installation and before the post-installation phase of AutoYaST has started.
   However, if necessary YaST modules are not available in the system,
   important configuration steps will be skipped. For example, no security
   settings will be configured if
   <systemitem class="resource">yast2-security</systemitem> is not
   installed.
  </para>
    <sect1 xml:id="CreateProfile.General">
      <title>General Options</title>
      <para>
    General options include all the settings related to the installation
    process and the environment of the installed system.
   </para>
      <para>
    The mode section configures the behavior of AutoYaST with regard to
    confirmation and rebooting. The following has to be in the
    &lt;general&gt;&lt;mode&gt; section.
   </para>
      <para>
    By default, the user must confirm the auto-installation process. This
    option allows the user to view and change the settings for a target
    system before they are committed and can be used for debugging.
    <literal>confirm</literal> is set to <literal>true</literal> by default
    to avoid recursive installs when the system schedules a reboot after
    initial system setup. Only disable confirmation if you want to carry out
    a fully unattended installation.
   </para>
      <para>
    With <literal>halt</literal> you cause AutoYaST to shut down the machine
    after all packages have been installed. Instead of a reboot into stage
    two, the machine is turned off. The boot loader is alreay installed and
    all your chroot scripts have run.
   </para>
      <para><literal>final_halt</literal> and <literal>final_reboot</literal> halts
    or reboots the machine after the installation and the configuration are
    finished at the end of stage 2.
   </para>
      <para><literal>max_systemd_wait</literal> specifies how long AutoYaST waits at
    most for systemd to set up the default target. Normally you do not need
    to bother with this entry. If it is not preset a reasonable default (30
    seconds) is used.
   </para>
      <para os="osuse">
    Some openSUSE versions use the kexec feature and does not reboot
    anymore between stage1 and stage2. With the <literal>forceboot</literal>
    option you can force the reboot in case you need it for some reason. The
    value <literal>true</literal> will reboot, <literal>false</literal> will
    not reboot and a missing <literal>forceboot</literal> option uses the
    product's default.
   </para>
      <important os="osuse">
        <title>Drivers May Need a Reboot</title>
        <para><remark>2013-03-18 - fs: bnc #802387</remark>
     Some drivers, for example the proprietary drivers for Nvidia and ATI
     graphics cards, need a reboot and will not work properly when using
     kexec. Therefore the default on SUSE Linux Enterprise products is to always do a proper
     reboot.
    </para>
      </important>
      <informaltable>
        <tgroup cols="3">
          <thead>
            <row>
              <entry>
                <para>
         Attribute
        </para>
              </entry>
              <entry>
                <para>
         Values
        </para>
              </entry>
              <entry>
                <para>
         Description
        </para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
                <para>
         confirm
        </para>
              </entry>
              <entry>
                <para>
         If this boolean is set to <literal>true</literal>, the installation
         stops at the confirmation screen (also called proposal screen) and
         has to be confirmed with the <guimenu>Install</guimenu> button.
        </para>
                <screen>&lt;confirm config:type="boolean"&gt;true&lt;/confirm&gt;</screen>
              </entry>
              <entry>
                <para>
         Optional. The default is true.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         halt
        </para>
              </entry>
              <entry>
                <para>
         Shuts down the machine after the first stage. So if you turn it on
         again, the machine boots and the second stage of the
         autoinstallation starts.
        </para>
                <screen>&lt;halt config:type="boolean"&gt;true&lt;/halt&gt;</screen>
              </entry>
              <entry>
                <para>
         Optional. The default is false.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         second_stage
        </para>
              </entry>
              <entry>
                <para>
         This boolean determines if AutoYaST will run in the second stage too
         (after the partitioning, software and bootloader installation of
         the first stage). If you set this to <literal>false</literal>, a
         normal manual installation happens in the second stage.
        </para>
                <screen>&lt;second_stage config:type="boolean"&gt;true&lt;/second_stage&gt;</screen>
              </entry>
              <entry>
                <para>
         Optional. The default is true.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         final_reboot
        </para>
              </entry>
              <entry>
                <para>
         If you set this to <literal>true</literal>, the machine will reboot
         at the very end of the installation (when everything is installed
         and configured at the end of the second stage).
        </para>
                <screen>&lt;final_reboot config:type="boolean"&gt;true&lt;/final_reboot&gt;</screen>
              </entry>
              <entry>
                <para>
         Optional. The default is false. It makes no sense to set this and
         <literal>final_halt</literal> to <literal>true</literal>.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         final_halt
        </para>
              </entry>
              <entry>
                <para>
         If you set this to <literal>true</literal>, the machine will
         shutdown at the very end of the installation (when everything is
         installed and configured at the end of the second stage).
        </para>
                <screen>&lt;final_halt config:type="boolean"&gt;true&lt;/final_halt&gt;</screen>
              </entry>
              <entry>
                <para>
         Optional. The default is <literal>false</literal>. It makes no
         sense to set this and <literal>final_reboot</literal> to
         <literal>true</literal>.
        </para>
              </entry>
            </row>
            <row os="osuse">
              <entry>
                <para>
         forceboot
        </para>
              </entry>
              <entry>
                <para>
         Some openSUSE releases use kexec to avoid the reboot after the
         first stage. They immediately boot into the installed system. You
         can force a reboot with this.
        </para>
                <screen>&lt;forceboot config:type="boolean"&gt;true&lt;/forceboot&gt;</screen>
              </entry>
              <entry>
                <para>
         Optional. The default is <literal>false</literal>.
        </para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
      <para>
    AutoYaST allows you to configure the proposal screen with the &lt;proposals
    config:type="list"&gt; option in the control file. All proposals that
    are listed in that section are shown in the proposal screen if you set
    the <literal>confirm</literal> option to <literal>true</literal>.
    Proposals are also used during the regular installation and can be found
    in the file <filename>control.xml</filename> in the root directory of
    the installation media.
   </para>
      <example>
        <title>General Options</title>
        <screen>&lt;general&gt;
  &lt;signature-handling&gt;
    &lt;accept_unsigned_file config:type="boolean"&gt;true&lt;/accept_unsigned_file&gt;
    &lt;accept_file_without_checksum config:type="boolean"&gt;true&lt;/accept_file_without_checksum&gt;
    &lt;accept_verification_failed config:type="boolean"&gt;true&lt;/accept_verification_failed&gt;
    &lt;accept_unknown_gpg_key config:type="boolean"&gt;true&lt;/accept_unknown_gpg_key&gt;
    &lt;import_gpg_key config:type="boolean"&gt;true&lt;/import_gpg_key&gt;
    &lt;accept_non_trusted_gpg_key config:type="boolean"&gt;true&lt;/accept_non_trusted_gpg_key&gt;
  &lt;/signature-handling&gt;
  &lt;mode&gt;
    &lt;halt config:type="boolean"&gt;false&lt;/halt&gt;
    &lt;forceboot config:type="boolean"&gt;false&lt;/forceboot&gt;
    &lt;final_reboot config:type="boolean"&gt;false&lt;/final_reboot&gt;
    &lt;final_halt config:type="boolean"&gt;false&lt;/final_halt&gt;
    &lt;confirm config:type="boolean"&gt;true&lt;/confirm&gt;
    &lt;second_stage config:type="boolean"&gt;true&lt;/second_stage&gt;
  &lt;/mode&gt;
  &lt;proposals config:type="list"&gt;
    &lt;proposal&gt;partitions_proposal&lt;/proposal&gt;
  &lt;/proposals&gt;
  &lt;wait&gt;
    &lt;pre-modules config:type="list"&gt;
      &lt;module&gt;
        &lt;name&gt;networking&lt;/name&gt;
        &lt;sleep&gt;
          &lt;time config:type="integer"&gt;10&lt;/time&gt;
          &lt;feedback config:type="boolean"&gt;true&lt;/feedback&gt;
        &lt;/sleep&gt;
        &lt;script&gt;
          &lt;source&gt;sleep 5&lt;/source&gt;
          &lt;debug config:type="boolean"&gt;false&lt;/debug&gt;
        &lt;/script&gt;
      &lt;/module&gt;
    &lt;/pre-modules&gt;
    &lt;post-modules config:type="list"&gt;
      &lt;module&gt;
        &lt;name&gt;networking&lt;/name&gt;
        &lt;sleep&gt;
          &lt;time config:type="integer"&gt;3&lt;/time&gt;
          &lt;feedback config:type="boolean"&gt;true&lt;/feedback&gt;
        &lt;/sleep&gt;
        &lt;script&gt;
          &lt;source&gt;sleep 7&lt;/source&gt;
          &lt;debug config:type="boolean"&gt;false&lt;/debug&gt;
        &lt;/script&gt;
      &lt;/module&gt;
    &lt;/post-modules&gt;
  &lt;/wait&gt;
  &lt;storage&gt;
    &lt;!--
       partition_alignment:
         align_optimal  - That's the default. Partitions are aligned like the
                          kernel suggests. This can lead to problem with some
                          machines/bioses that are unable to boot with that
                          alignment
         align_cylinder -  Partitions always start on a cylinder boundary
    --&gt;
     &lt;partition_alignment config:type="symbol"&gt;align_cylinder&lt;/partition_alignment&gt;
  &lt;/storage&gt;
&lt;/general&gt;</screen>
      </example>
      <para>
    You can let AutoYaST <command>sleep</command> before and after each module
    run during the second stage. You can run scripts and/or pass a value (in
    seconds) for AutoYaST to sleep. In the example above AutoYaST will sleep for 15
    seconds (10+5) before the network configuration starts and 10 seconds
    (3+7) after the network configuration is done. The scripts in the
    example don't really make a lot of sense because you could pass that
    value as <quote>time</quote> value too. They are only used to show how
    scripts in the wait section work now.
   </para>
      <tip>
        <title>Enabling Mulipath for the Installation</title>
        <para>
     When installing on a network storage that is accessed via multiple
     paths, you need to enable multipath for the installation with the
     <literal>start_multipath</literal> parameter that needs to be placed
     within the following XML structure:
    </para>
        <screen>&lt;general&gt;
  &lt;storage&gt;
    &lt;start_multipath config:type="boolean"&gt;true&lt;/start_multipath&gt;
  &lt;/storage&gt;
&lt;/general&gt;</screen>
        <para>
     Alternatively, you can pass the following parameter to linuxrc:
     <literal>LIBSTORAGE_MULTIPATH_AUTOSTART=ON</literal></para>
      </tip>
    </sect1>
    <sect1 xml:id="CreateProfile.Reporting">
      <title>Reporting</title>
      <para>
    The <literal>report</literal> resource manages three types of pop-ups
    that may appear during installation:
   </para>
      <itemizedlist>
        <listitem>
          <para>
      message pop-ups (usually non-critical, informative messages),
     </para>
        </listitem>
        <listitem>
          <para>
      warning pop-ups (if something might go wrong),
     </para>
        </listitem>
        <listitem>
          <para>
      error pop-ups (in case an error occurs).
     </para>
        </listitem>
      </itemizedlist>
      <example>
        <title>Reporting Behavior</title>
        <screen>&lt;report&gt;    
  &lt;messages&gt;
    &lt;show config:type="boolean"&gt;true&lt;/show&gt;
    &lt;timeout config:type="integer"&gt;10&lt;/timeout&gt;
    &lt;log config:type="boolean"&gt;true&lt;/log&gt;
  &lt;/messages&gt;
  &lt;errors&gt;
    &lt;show config:type="boolean"&gt;true&lt;/show&gt;
    &lt;timeout config:type="integer"&gt;10&lt;/timeout&gt;
    &lt;log config:type="boolean"&gt;true&lt;/log&gt;
  &lt;/errors&gt;
  &lt;warnings&gt;
    &lt;show config:type="boolean"&gt;true&lt;/show&gt;
    &lt;timeout config:type="integer"&gt;10&lt;/timeout&gt;
    &lt;log config:type="boolean"&gt;true&lt;/log&gt;
  &lt;/warnings&gt;
&lt;/report&gt;</screen>
      </example>
      <para>
    Depending on your experience, you can skip, log and show (with timeout)
    those messages. It is recommended to show all
    <literal>messages</literal> with timeout. Warnings can be skipped in
    some places but should not be ignored.
   </para>
      <para>
    The default setting in auto-installation mode is to show all messages
    without logging and with a timeout of 10 seconds.
   </para>
      <warning>
        <title>Critical System Messages</title>
        <para>
     Note that not all messages during installation are controlled by the
     <literal>report</literal> resource. Some critical messages concerning
     package installation and partitioning will show up ignoring your
     settings in the <literal>report</literal> section. In most cases those
     messages will have to be answered with <guimenu>Yes</guimenu> or
     <guimenu>No</guimenu>.
    </para>
      </warning>
    </sect1>
    <sect1 xml:id="CreateProfile.Register">
      <title>System Registration and Extension Selection</title>
      <para>
    Registering the system with the can be configured within the
    <literal>suse_register</literal> resource. The following example
    registers the system with the SUSE Customer Center. In case your organization provides
    its own registration server, you need to specify the required data with
    the <literal>reg_server*</literal> properties. Refer to the table below
    for details.
   </para>
      <screen>&lt;suse_register&gt;
  &lt;do_registration config:type="boolean"&gt;true&lt;/do_registration&gt;
  &lt;email&gt;tux@example.com&lt;/email&gt;
  &lt;reg_code&gt;<replaceable>MY_SECRET_REGCODE</replaceable>&lt;/reg_code&gt;
  &lt;install_updates config:type="boolean"&gt;true&lt;/install_updates&gt;
  &lt;slp_discovery config:type="boolean"&gt;false&lt;/slp_discovery&gt;
&lt;/suse_register&gt;
 </screen>
      <para>
    As an alternative to the fully automated registration, AutoYaST can also be
    configured to start the YaST registration module during the
    installation. this offers the possibility to enter the registration data
    manually. The following XML code is required:
   </para>
      <screen>&lt;general&gt;
 &lt;semi-automatic config:type="list"&gt;
   &lt;semi-automatic_entry&gt;scc&lt;/semi-automatic_entry&gt;
 &lt;/semi-automatic&gt;
&lt;/general&gt;</screen>
      <tip>
        <title>Using the Installation Network Settings</title>
        <para>
     In case you need to use the same network settings that were used for
     the installation, AutoYaST needs to run the network setup in stage 1 right
     before the registration is started:
    </para>
        <screen>&lt;networking&gt;
  &lt;setup_before_proposal config:type="boolean"&gt;true&lt;/setup_before_proposal
&lt;/networking&gt;</screen>
      </tip>
      <table>
        <title>System Registration: XML Representation</title>
        <tgroup cols="3">
          <colspec colwidth="1*"/>
          <colspec colwidth="3*"/>
          <colspec colwidth="2*"/>
          <thead>
            <row>
              <entry>
                <para>
         Element
        </para>
              </entry>
              <entry>
                <para>
         Description
        </para>
              </entry>
              <entry>
                <para>
         Comment
        </para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
                <para>
         do_registration
        </para>
              </entry>
              <entry>
                <para>
         Specify whether the system should be registered or not. Can be set
         to <literal>true</literal> or <literal>false</literal>.
        </para>
                <screen>&lt;do_registration config:type="boolean"
&gt;true&lt;/do_registration&gt;</screen>
              </entry>
              <entry>
                <para>
         If set to <literal>false</literal> all other options are ignored
         and the system is not registered.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         email
        </para>
              </entry>
              <entry>
                <para>
         The e-mail address matching the registration code.
        </para>
                <screen>&lt;email&gt;tux@example.com&lt;/email&gt;</screen>
              </entry>
              <entry>
                <para>
         Required value.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         reg_code
        </para>
              </entry>
              <entry>
                <para>
         The registration code.
        </para>
                <screen>&lt;reg_code&gt;<replaceable>SECRET_REGCODE</replaceable>&lt;/reg_code&gt;</screen>
              </entry>
              <entry>
                <para>
         Required value.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         install_updates
        </para>
              </entry>
              <entry>
                <para>
         Defines if the update repositories provided by the registration
         server are used during the installtion (<literal>true</literal>) or
         not (<literal>false</literal>).
        </para>
                <screen>&lt;install_updates config:type="boolean"
&gt;true&lt;/install_updates&gt;</screen>
              </entry>
              <entry>
                <para>
         Optional. The default value is <literal>false</literal>.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         slp_discovery
        </para>
              </entry>
              <entry>
                <para>
         Search for the registration server via SLP.
        </para>
                <screen>&lt;slp_discovery config:type="boolean"
&gt;true&lt;/slp_discovery&gt;</screen>
              </entry>
              <entry>
                <para>
         Optional. The default value is <literal>false</literal>.
        </para>
                <para>
         Expects to find a single server. If more than one server is found,
         the installation will fail. In case there is more than one
         registration server available, you need to specify one with
         <literal>reg_server</literal>.
        </para>
                <para>
         Optional, If neither <literal>slp_discovery</literal> or
         <literal>reg_server</literal> are set, the system is registered
         with the SUSE Customer Center.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         reg_server
        </para>
              </entry>
              <entry>
                <para>
         URl to the SMT server
        </para>
                <screen>&lt;reg_server&gt;
  https://smt.example.com
&lt;/reg_server&gt;</screen>
              </entry>
              <entry>
                <para>
         Optional, If neither <literal>slp_discovery</literal> or
         <literal>reg_server</literal> are set, the system is registered
         with the SUSE Customer Center.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         reg_server_cert_fingerprint_type
        </para>
              </entry>
              <entry>
                <para>
         Fingerprint type. Can either be <literal>SHA1</literal> or
         <literal>SHA256</literal>.
        </para>
                <screen>&lt;reg_server_cert_fingerprint_type&gt;
  SHA1
&lt;/reg_server_cert_fingerprint_type&gt;</screen>
              </entry>
              <entry>
                <para>
         Requires a checksum value provided with
         <literal>reg_server_cert_fingerprint</literal>. Using the
         fingerprint is recommended, since it ensures the SSL certificate is
         verified. The matching certificate will be automatically imported
         when the SSL communication fails because of a verification error.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         reg_server_cert_fingerprint
        </para>
              </entry>
              <entry>
                <para>
         Fingerprint value in hexadecimal notion (case-insensitive).
        </para>
                <screen>&lt;reg_server_cert_fingerprint&gt;
  <replaceable>01:AB...:EF</replaceable>
&lt;/reg_server_cert_fingerprint&gt;</screen>
              </entry>
              <entry>
                <para>
         Requires a fingerprint type value provided with
         <literal>reg_server_cert_fingerprint_type</literal>. Using the
         fingerprint is recommended, since it ensures the SSL certificate is
         verified. The matching certificate will be automatically imported
         when the SSL communication fails because of a verification error.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         reg_server_cert
        </para>
              </entry>
              <entry>
                <para>
         Path to the SSL certificate on the server.
        </para>
                <screen>&lt;reg_server_cert&gt;
  http://smt.example.com/smt.crt
&lt;/reg_server_cert&gt;</screen>
              </entry>
              <entry>
                <para>
         Using this option is not recommended, since the certificate that is
         downloaded is not verified. Use
         <literal>reg_server_cert_fingerprint</literal> instead.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         addons
        </para>
              </entry>
              <entry>
                <para>
         Specify an extension from the registration server that should be
         added to the installation repositories. See
         <xref linkend="CreateProfile.Register.Extension"/> for details.
        </para>
              </entry>
              <entry>
                <para/>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </table>
      <sect2 xml:id="CreateProfile.Register.Extension">
        <title>Extensions</title>
        <para>
     The SUSE Customer Center provides a number of extensions, such as sle-sdk (Software
     Development Kit - SDK) that can be added as additional installation
     sources during the installation. Adding extensions can be configured
     via the <literal>addons</literal> property within the
     <literal>suse_register</literal> block. Below is a list of all
     extensions available for SUSE Linux Enterprise on x86_64:
    </para>
        <note>
          <title>Availability of Extensions</title>
          <para>
      The availability of extensions is product and architecture dependent.
      All listed extensions are available for SUSE Linux Enterprise Server on the x86_64
      architecture. Not all extensions are available on other architectures.
      The only extension available for SUSE Linux Enterprise Desktop is the sle-sdk.
     </para>
          <para>
      Some extensions, such as the sle-we, sle-ha and sle-ha-geo require a
      registration code.
     </para>
        </note>
        <screen>&lt;addons config:type="list"&gt;
  &lt;addon&gt;
    &lt;arch&gt;x86_64&lt;/arch&gt;
    &lt;name&gt;sle-ha&lt;/name&gt;
    &lt;reg_code&gt;YOUR_REG_CODE_HERE&lt;/reg_code&gt;
    &lt;release_type&gt;nil&lt;/release_type&gt;
    &lt;version&gt;12&lt;/version&gt;
  &lt;/addon&gt;
  &lt;addon&gt;
    &lt;arch&gt;x86_64&lt;/arch&gt;
    &lt;name&gt;sle-ha-geo&lt;/name&gt;
    &lt;reg_code&gt;YOUR_REG_CODE_HERE&lt;/reg_code&gt;
    &lt;release_type&gt;nil&lt;/release_type&gt;
    &lt;version&gt;12&lt;/version&gt;
  &lt;/addon&gt;
  &lt;addon&gt;
    &lt;arch&gt;x86_64&lt;/arch&gt;
    &lt;name&gt;sle-module-web-scripting&lt;/name&gt;
    &lt;reg_code/&gt;
    &lt;release_type&gt;nil&lt;/release_type&gt;
    &lt;version&gt;12&lt;/version&gt;
  &lt;/addon&gt;
  &lt;addon&gt;
    &lt;arch&gt;x86_64&lt;/arch&gt;
    &lt;name&gt;sle-module-adv-systems-management&lt;/name&gt;
    &lt;reg_code/&gt;
    &lt;release_type&gt;nil&lt;/release_type&gt;
    &lt;version&gt;12&lt;/version&gt;
  &lt;/addon&gt;
  &lt;addon&gt;
    &lt;arch&gt;x86_64&lt;/arch&gt;
    &lt;name&gt;sle-module-legacy&lt;/name&gt;
    &lt;reg_code/&gt;
    &lt;release_type&gt;nil&lt;/release_type&gt;
    &lt;version&gt;12&lt;/version&gt;
  &lt;/addon&gt;
  &lt;addon&gt;
    &lt;arch&gt;x86_64&lt;/arch&gt;
    &lt;name&gt;sle-we&lt;/name&gt;
    &lt;reg_code&gt;YOUR_REG_CODE_HERE&lt;/reg_code&gt;
    &lt;release_type&gt;nil&lt;/release_type&gt;
    &lt;version&gt;12&lt;/version&gt;
  &lt;/addon&gt;
  &lt;addon&gt;
    &lt;arch&gt;x86_64&lt;/arch&gt;
    &lt;name&gt;sle-sdk&lt;/name&gt;
    &lt;reg_code/&gt;
    &lt;release_type&gt;nil&lt;/release_type&gt;
    &lt;version&gt;12&lt;/version&gt;
  &lt;/addon&gt;
  &lt;addon&gt;
    &lt;arch&gt;x86_64&lt;/arch&gt;
    &lt;name&gt;sle-module-public-cloud&lt;/name&gt;
    &lt;reg_code/&gt;
    &lt;release_type&gt;nil&lt;/release_type&gt;
    &lt;version&gt;12&lt;/version&gt;
  &lt;/addon&gt;
&lt;/addons&gt;</screen>
      </sect2>
    </sect1>
    <sect1 xml:id="CreateProfile.Bootloader">
      <title>The Boot Loader</title>
      <para>
    This documentation is for yast2-bootloader and applies to SLE
    <phrase role="productname"><phrase os="osuse">12.2</phrase><phrase os="sles;sled;slerte">12</phrase></phrase>. For older product versions, use the documentation that
    comes with your distribution in
    <filename>/usr/share/doc/packages/autoyast2/</filename></para>
      <para>
    The general structure of the AutoYaST boot loader part looks like the
    following:
   </para>
      <screen>&lt;bootloader&gt;
  &lt;loader_type&gt;
    &lt;!-- boot loader type (grub2 or grub2-efi) --&gt;
  &lt;/loader_type&gt;
  &lt;global&gt;
    &lt;!-- 
      entries defining the installation settings for GRUB 2 and
      the generic boot code
    --&gt;
  &lt;/global&gt;
  &lt;device_map config:type="list"&gt;
    &lt;!-- entries defining the order of devices --&gt;
  &lt;/device_map&gt;
 &lt;/bootloader&gt;</screen>
      <sect2>
        <title>Loader Type</title>
        <para>
     Define which boot loader to use: <literal>grub2</literal> or
     <literal>grub2-efi</literal>.
    </para>
        <screen>&lt;loader_type&gt;grub2&lt;/loader_type&gt;</screen>
      </sect2>
      <sect2>
        <title>Globals</title>
        <para>
     This is an important if optional part. Define here where to install
     GRUB 2 and how the boot process will work. Again, yast2-bootloader
     proposes a configuration if you don't define one. Usually the AutoYaST
     control file includes only this part and all other parts are added
     automatically during installation by yast2-bootloader. Unless you have
     some special requirements, do not specify the bootloader config in the
     XML file.
    </para>
        <screen>&lt;global&gt;
  &lt;activate config:type="boolean"&gt;true&lt;/activate&gt;
  &lt;timeout config:type="integer"&gt;10&lt;/timeout&gt;
  &lt;suse_btrfs config:type="boolean"&gt;true&lt;/suse_btrfs&gt;
  &lt;terminal&gt;gfxterm&lt;/terminal&gt;
  &lt;gfxmode&gt;1280x1024x24&lt;/gfxmode&gt;     
&lt;/global&gt;</screen>
        <informaltable>
          <tgroup cols="2">
            <thead>
              <row>
                <entry>
                  <para>
          Attribute
         </para>
                </entry>
                <entry>
                  <para>
          Description
         </para>
                </entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>
                  <para>
          activate
         </para>
                </entry>
                <entry>
                  <para>
          Set the boot flag on the boot partition. The boot partition can be
          <filename>/</filename> if there is no separate /boot partition. If
          the boot partition is on a logical partition, the boot flag is set
          to the extended partition.
         </para>
                  <screen>&lt;activate config:type="boolean"&gt;true&lt;/activate&gt;</screen>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          append
         </para>
                </entry>
                <entry>
                  <para>
          Kernel parameters added at the end of boot entries for normal and
          recovery mode.
         </para>
                  <screen>&lt;append&gt;nomodeset vga=0x317&lt;/append&gt;</screen>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          boot_boot
         </para>
                </entry>
                <entry>
                  <para>
          Write GRUB 2 to a separate /boot partition. If no separate /boot
          partition exists, GRUB 2 will be written to
          <filename>/</filename>.
         </para>
                  <screen>&lt;boot_boot&gt;false&lt;/boot_boot&gt;</screen>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          boot_custom
         </para>
                </entry>
                <entry>
                  <para>
          Write GRUB 2 to a custom device.
         </para>
                  <screen>&lt;boot_custom&gt;/dev/sda3&lt;/boot_custom&gt;</screen>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          boot_extended
         </para>
                </entry>
                <entry>
                  <para>
          Write GRUB 2 to the extended partition (important if you want to
          use a generic boot code and the <filename>/boot</filename>
          partition is logical). NOTE: if the boot partition is logical, you
          should use <literal>boot_mbr</literal> (write GRUB 2 to MBR)
          rather than <literal>generic_mbr</literal>.
         </para>
                  <screen>&lt;boot_extended&gt;false&lt;/boot_extended&gt;</screen>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          boot_mbr
         </para>
                </entry>
                <entry>
                  <para>
          Write GRUB 2 to MBR of the first disk in the order (device.map
          includes order of disks).
         </para>
                  <screen>&lt;boot_mbr&gt;false&lt;/boot_mbr&gt;</screen>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          boot_root
         </para>
                </entry>
                <entry>
                  <para>
          Write GRUB 2 to <filename>/</filename> partition.
         </para>
                  <screen>&lt;boot_root&gt;false&lt;/boot_root&gt;</screen>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          generic_mbr
         </para>
                </entry>
                <entry>
                  <para>
          Write generic boot code to MBR, will be ignored if boot_mbr is set
          to <literal>true</literal>.
         </para>
                  <screen>&lt;generic_mbr config:type="boolean"&gt;false&lt;/generic_mbr&gt;</screen>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          gfxmode
         </para>
                </entry>
                <entry>
                  <para>
          Graphical resolution of the GRUB 2 screen (requires
          &lt;terminal&gt; to be set to <literal>gfxterm</literal>. Valid
          entries are <literal>auto</literal>,
          <literal><replaceable>HORIZONTAL</replaceable>x<replaceable>VERTICAL</replaceable></literal>,
          or
          <literal><replaceable>HORIZONTAL</replaceable>x<replaceable>VERTICAL</replaceable>x<replaceable>COLOR
          DEPTH</replaceable></literal>. You can display the screen
          resolutions available to GRUB 2 on a particular system by typing
          <command>vbeinfo</command> at the GRUB 2 command line in the
          running system.
         </para>
                  <screen>&lt;gfxmode&gt;1280x1024x24&lt;/gfxmode&gt;</screen>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          os_prober
         </para>
                </entry>
                <entry>
                  <para>
          If set to <literal>true</literal>, automatically searches for
          operating systems already installed and generates boot entries for
          them during the installation
         </para>
                  <screen>&lt;os_prober config:type="boolean"&gt;false&lt;/os_prober&gt;</screen>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          suse_btrfs
         </para>
                </entry>
                <entry>
                  <para>
          If set to <literal>true</literal>, booting from Btrfs snapshots
          will be enabled.
         </para>
                  <screen>&lt;suse_Btrfs config:type="boolean"&gt;false&lt;/suse_btrfs&gt;</screen>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          serial
         </para>
                </entry>
                <entry>
                  <para>
          Command to execute if the GRUB 2 terminal mode is set to
          <literal>serial</literal>.
         </para>
                  <screen>&lt;serial&gt;
  serial --speed=115200 --unit=0 --word=8 --parity=no --stop=1
&lt;/serials&gt;</screen>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          terminal
         </para>
                </entry>
                <entry>
                  <para>
          Specify the GRUB 2 terminal mode to use, Valid entries are
          <literal>console</literal>, <literal>gfxterm</literal>, and
          <literal>serial</literal>. If set to <literal>serial</literal>,
          the serial command needs to be specified with &lt;serial&gt;, too.
         </para>
                  <screen>&lt;terminal&gt;serial&lt;/terminal&gt;</screen>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          timeout
         </para>
                </entry>
                <entry>
                  <para>
          The timeout in seconds until the default boot entry is booted
          automatically.
         </para>
                  <screen>&lt;timeout config:type="integer"&gt;10&lt;/timeout&gt;</screen>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          vgamode
         </para>
                </entry>
                <entry>
                  <para>
          Adds the Kernel parameter
          <literal>vga=<replaceable>VALUE</replaceable></literal> to the
          boot entries.
         </para>
                  <screen>&lt;vgamode&gt;0x317&lt;/vgamode&gt;</screen>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          xen-append
         </para>
                </entry>
                <entry>
                  <para>
          Kernel parameters added at the end of boot entries for Xen
          guests.
         </para>
                  <screen>&lt;append&gt;nomodeset vga=0x317&lt;/append&gt;</screen>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          xen-kernel-append
         </para>
                </entry>
                <entry>
                  <para>
          Kernel parameters added at the end of boot entries for Xen
          kernels on the VM Host Server.
         </para>
                  <screen>&lt;xen-append&gt;dom0_mem=768M&lt;/xen-append&gt;</screen>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </sect2>
      <sect2>
        <title>Device map</title>
        <para>
     GRUB 2 avoids mapping problems between BIOS drives and Linux devices by
     using device ID strings (UUIDs) or file system labels when generating
     its configuration files. GRUB 2 utilities create a temporary device map
     on the fly, which is usually sufficient, particularly on single-disk
     systems. However, if you need to override the automatic device mapping
     mechanism, create your custom mapping in this section.
    </para>
        <screen>&lt;device_map config:type="list"&gt;
  &lt;device_map_entry&gt;
    &lt;firmware&gt;hd0&lt;/firmware&gt; &lt;!-- order of devices in target map  --&gt;
    &lt;linux&gt;/dev/disk/by-id/ata-ST3500418AS_6VM23FX0&lt;/linux&gt; &lt;!-- name of device (disk)  --&gt;
  &lt;/device_map_entry&gt;
&lt;/device_map&gt;</screen>
      </sect2>
    </sect1>
    <sect1 xml:id="CreateProfile.Partitioning">
      <title>Partitioning</title>
      <para>
        <remark role="fixme">Add a short description</remark>
      </para>
      <sect2>
        <title>Drive Configuration</title>
        <para>
     The elements listed below must be placed within the following XML
     structure:
    </para>
        <screen>&lt;profile&gt;
  &lt;partitioning config:type="list"&gt;
    &lt;drive&gt;
     ...
    &lt;/drive&gt;
  &lt;/partitioning&gt;
&lt;/profile&gt;</screen>
        <informaltable>
          <tgroup cols="3">
            <thead>
              <row>
                <entry>
                  <para>
          Attribute
         </para>
                </entry>
                <entry>
                  <para>
          Values
         </para>
                </entry>
                <entry>
                  <para>
          Description
         </para>
                </entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>
                  <para>
          device
         </para>
                </entry>
                <entry>
                  <para>
          The device you want to configure in this &lt;drive&gt; section.
          You can use persistent device names via id, like
          <filename>/dev/disk/by-id/ata-WDC_WD3200AAKS-75L9A0_WD-WMAV27368122</filename>
          or <emphasis>by-path</emphasis>,like
          <filename>/dev/disk/by-path/pci-0001:00:03.0-scsi-0:0:0:0</filename>.
         </para>
                  <screen>&lt;device&gt;/dev/sda&lt;/device&gt;</screen>
                </entry>
                <entry>
                  <para>
          Optional. If left out, AutoYaST tries to guess the device. See
          <xref linkend="ay.partitioning.skip_devices"/> on how to
          influence guessing.
         </para>
                  <para>
          A RAID must always have <literal>/dev/md</literal> as device.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          initialize
         </para>
                </entry>
                <entry>
                  <para>
          If set to <literal>true</literal>, the partition table gets wiped
          out before AutoYaST starts the partition calculation.
         </para>
                  <screen>&lt;initialize config:type="boolean"&gt;true&lt;/initialize&gt;</screen>
                </entry>
                <entry>
                  <para>
          Optional. The default is <literal>false</literal>.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          partitions
         </para>
                </entry>
                <entry>
                  <para>
          A list of &lt;partition&gt; entries (see
          <xref linkend="ay.partition_configuration"/>).
         </para>
                  <screen>&lt;partitions config:type="list"&gt;
  &lt;partition&gt;...&lt;/partition&gt;
  ...
&lt;/partitions&gt;</screen>
                </entry>
                <entry>
                  <para>
          Optional. If no partitions are specified, AutoYaST will create a
          reasonable partitioning (see
          <xref linkend="ay.auto_partitioning"/>).
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          pesize
         </para>
                </entry>
                <entry>
                  <para>
          This value only makes sense with LVM.
         </para>
                  <screen>&lt;pesize&gt;8M&lt;/pesize&gt;</screen>
                </entry>
                <entry>
                  <para>
          Optional. Default is 4M for LVM volume groups.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          use
         </para>
                </entry>
                <entry>
                  <para>
          Specifies the strategy AutoYaST will use to partition the hard disk.
         </para>
                  <para>
          Choose between:
         </para>
                  <itemizedlist>
                    <listitem>
                      <para>
            all (uses the whole device while calculating the new
            partitioning),
           </para>
                    </listitem>
                    <listitem>
                      <para>
            linux (only existing Linux partitions are used),
           </para>
                    </listitem>
                    <listitem>
                      <para>
            free (only unused space on the device is used, no other
            partitions are touched),
           </para>
                    </listitem>
                    <listitem>
                      <para>
            1,2,3 (a list of comma separated partition numbers to use).
           </para>
                    </listitem>
                  </itemizedlist>
                </entry>
                <entry>
                  <para>
          This parameter should be provided.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          type
         </para>
                </entry>
                <entry>
                  <para>
          Specify the type of the <literal>drive</literal>,
         </para>
                  <para>
          Choose between:
         </para>
                  <itemizedlist>
                    <listitem>
                      <para>
            CT_DISK for physical hard disks (default),
           </para>
                    </listitem>
                    <listitem>
                      <para>
            CT_LVM for LVM volume groups,
           </para>
                    </listitem>
                  </itemizedlist>
                  <screen>&lt;type config:type="symbol"&gt;CT_LVM&lt;/type&gt;</screen>
                </entry>
                <entry>
                  <para>
          Optional. Default is CT_DISK for a normal physical hard disk.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          disklabel
         </para>
                </entry>
                <entry>
                  <para>
          Describes the type of the partition table.
         </para>
                  <para>
          Choose between:
         </para>
                  <itemizedlist>
                    <listitem>
                      <para>
            msdos
           </para>
                    </listitem>
                    <listitem>
                      <para>
            gpt
           </para>
                    </listitem>
                  </itemizedlist>
                  <screen>&lt;disklabel&gt;gpt&lt;/disklabel&gt;</screen>
                </entry>
                <entry>
                  <para>
          Optional. By default YaST decides what makes sense.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          keep_unknown_lv
         </para>
                </entry>
                <entry>
                  <para>
          This value only makes sense for type=CT_LVM drives. If you are
          reusing a logical volume group and you set this to
          <literal>true</literal>, all existing logical volumes in that
          group will not be touched unless they are specified in the
          &lt;partitioning&gt; section. So you can keep existing logical
          volumes without specifying them.
         </para>
                  <screen>&lt;keep_unknown_lv config:type="boolean"
&gt;false&lt;/keep_unknown_lv&gt;</screen>
                </entry>
                <entry>
                  <para>
          Optional. The default is <literal>false</literal>.
         </para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
        <tip xml:id="ay.partitioning.skip_devices">
          <title>Skipping Devices</title>
          <para>
      You can influence AutoYaST's device-guessing for cases where you don't
      specify a &lt;device&gt; entry on your own. Usually AutoYaST would use the
      first device it can find that looks reasonable but you can configure
      it to skip some devices like this:
     </para>
          <screen>&lt;partitioning config:type="list"&gt;
  &lt;drive&gt;
    &lt;initialize config:type="boolean"&gt;true&lt;/initialize&gt;
    &lt;skip_list config:type="list"&gt;
      &lt;listentry&gt;
        &lt;!-- skip devices that use the usb-storage driver --&gt;
        &lt;skip_key&gt;driver&lt;/skip_key&gt;
        &lt;skip_value&gt;usb-storage&lt;/skip_value&gt;
      &lt;/listentry&gt;
      &lt;listentry&gt;
        &lt;!-- skip devices that are smaller than 1GB --&gt;
        &lt;skip_key&gt;size_k&lt;/skip_key&gt;
        &lt;skip_value&gt;1048576&lt;/skip_value&gt;
        &lt;skip_if_less_than config:type="boolean"&gt;true&lt;/skip_if_less_than&gt;
      &lt;/listentry&gt;
      &lt;listentry&gt;
        &lt;!-- skip devices that are larger than 100GB --&gt;
        &lt;skip_key&gt;size_k&lt;/skip_key&gt;
        &lt;skip_value&gt;104857600&lt;/skip_value&gt;
        &lt;skip_if_more_than config:type="boolean"&gt;true&lt;/skip_if_more_than&gt;
      &lt;/listentry&gt;
    &lt;/skip_list&gt;
  &lt;/drive&gt;
&lt;/partitioning&gt;</screen>
          <para>
      For a list of all possible &lt;skip_key&gt;, run <command>yast2
      ayast_probe</command> on an already installed system.
     </para>
        </tip>
      </sect2>
      <sect2 xml:id="ay.partition_configuration">
        <title>Partition Configuration</title>
        <para>
     The elements listed below must be placed within the following XML
     structure:
    </para>
        <screen>&lt;drive&gt;
  &lt;partitions config:type="list"&gt;
    &lt;partition&gt;
      ...
    &lt;/partition&gt;
  &lt;/partitions&gt;
&lt;/drive&gt;</screen>
        <informaltable>
          <tgroup cols="3">
            <colspec colwidth="1*"/>
            <colspec colwidth="3*"/>
            <colspec colwidth="2*"/>
            <thead>
              <row>
                <entry>
                  <para>
          Attribute
         </para>
                </entry>
                <entry>
                  <para>
          Values
         </para>
                </entry>
                <entry>
                  <para>
          Description
         </para>
                </entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>
                  <para>
          create
         </para>
                </entry>
                <entry>
                  <para>
          Specify if this partition must be created or if it already exists.
         </para>
                  <screen>&lt;create config:type="boolean"
&gt;false&lt;/create&gt;</screen>
                </entry>
                <entry>
                  <para>
          If set to <literal>false</literal>, you also need to set
          <literal>partition_nr</literal> to tell AutoYaST the partition number.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          mount
         </para>
                </entry>
                <entry>
                  <para>
          The mountpoint of this partition.
         </para>
                  <screen>&lt;mount&gt;/&lt;/mount&gt;
&lt;mount&gt;swap&lt;/mount&gt;</screen>
                </entry>
                <entry>
                  <para>
          You should have at least a root partition (/) and a swap
          partition.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          fstopt
         </para>
                </entry>
                <entry>
                  <para>
          Mount options for this partition.
         </para>
                  <screen>&lt;fstopt&gt;
  ro,noatime,user,data=ordered,acl,user_xattr
&lt;/fstopt&gt;</screen>
                </entry>
                <entry>
                  <para>
          See <command>man mount</command> for available mount options.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          label
         </para>
                </entry>
                <entry>
                  <para>
          The label of the partition (useful for the
          <literal>mountby</literal> parameter; see below).
         </para>
                  <screen>&lt;label&gt;mydata&lt;/label&gt;</screen>
                </entry>
                <entry>
                  <para>
          See <command>man e2label</command> for an example.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          uuid
         </para>
                </entry>
                <entry>
                  <para>
          The uuid of the partition (only useful for the
          <literal>mountby</literal> parameter; see below).
         </para>
                  <screen>&lt;uuid
&gt;1b4e28ba-2fa1-11d2-883f-b9a761bde3fb&lt;/uuid&gt;</screen>
                </entry>
                <entry>
                  <para>
          See <command>man uuidgen</command>.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          size
         </para>
                </entry>
                <entry>
                  <para>
          The size of the partition, e.g. 4G, 4500M, etc. The /boot
          partition and the swap partition can have <literal>auto</literal>
          as size. Then AutoYaST calculates a reasonable size. One partition can
          have the value <literal>max</literal> to use all remaining space.
         </para>
                  <para>
          You can also specify the the size in percentage. So 10% will use
          10% of the size of the hard disk or volume group. You can mix
          auto, max, size, and percentage as you like.
         </para>
                  <screen>&lt;size&gt;10G&lt;/size&gt;</screen>
                </entry>
                <entry>
                  <para/>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          format
         </para>
                </entry>
                <entry>
                  <para>
          Specify if AutoYaST should format the partition.
         </para>
                  <screen>&lt;format config:type="boolean"&gt;false&lt;/format&gt;</screen>
                </entry>
                <entry>
                  <para>
          If you set <literal>create</literal> to <literal>true</literal>,
          then you likely want this option set to <literal>true</literal> as
          well.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          filesystem
         </para>
                </entry>
                <entry>
                  <para>
          Specify the filesystem to use on this partition:
         </para>
                  <itemizedlist>
                    <listitem>
                      <para>
            btrfs
           </para>
                    </listitem>
                    <listitem>
                      <para>
            ext2
           </para>
                    </listitem>
                    <listitem>
                      <para>
            ext3
           </para>
                    </listitem>
                    <listitem>
                      <para>
            ext4
           </para>
                    </listitem>
                    <listitem>
                      <para>
            fat
           </para>
                    </listitem>
                    <listitem>
                      <para>
            xfs
           </para>
                    </listitem>
                    <listitem>
                      <para>
            swap.
           </para>
                    </listitem>
                  </itemizedlist>
                  <screen>&lt;filesystem config:type="symbol"
&gt;ext3&lt;/filesystem&gt;</screen>
                </entry>
                <entry>
                  <para>
          Optional. The default is <literal>btrfs</literal> for the root
          partition (<filename>/</filename>) and <literal>xfs</literal> for
          data partitions.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          mkfs_options
         </para>
                </entry>
                <entry>
                  <para>
          Specifiy an option string that is added to the mkfs command.
         </para>
                  <screen>&lt;mkfs_options&gt;-I 128&lt;/mkfs_options&gt;</screen>
                </entry>
                <entry>
                  <para>
          Optional. Only use this when you know what you are doing.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          partition_nr
         </para>
                </entry>
                <entry>
                  <para>
          The partition number of this partition. If you have set
          <literal>create=false</literal> or if you use LVM, then you can
          specify the partition via <literal>partition_nr</literal>. You can
          force AutoYaST to only create primary partitions by assigning numbers
          below 5.
         </para>
                  <screen>&lt;partition_nr config:type="integer"
&gt;2&lt;/partition_nr&gt;</screen>
                </entry>
                <entry>
                  <para>
          In most cases, numbers 1 to 4 are primary partitions while 5 and
          higher are logical partitions.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          partition_id
         </para>
                </entry>
                <entry>
                  <para>
          The partition_id sets the id of the partition. If you want
          different identifiers than 131 for Linux partition or 130 for
          swap, configure them with partition_id.
         </para>
                  <screen>&lt;partition_id config:type="integer"
&gt;131&lt;/partition_id&gt;</screen>
                </entry>
                <entry>
                  <para>
          The default is 131 for Linux partition and 130 for swap.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          mountby
         </para>
                </entry>
                <entry>
                  <para>
          Instead of a partition number, you can tell AutoYaST to mount a
          partition by <literal>device</literal>, <literal>label</literal>,
          <literal>uuid</literal>, <literal>path</literal> or
          <literal>id</literal>, which are the udev path and udev id (see
          <filename>/dev/disk/...</filename>).
         </para>
                  <screen>&lt;mountby config:type="symbol"
&gt;label&lt;/mountby&gt;</screen>
                </entry>
                <entry>
                  <para>
          See <literal>label</literal> and <literal>uuid</literal>
          documentation above. The default depends on YaST and is
          <literal>id</literal> in most cases.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          subvolumes
         </para>
                </entry>
                <entry>
                  <para>
          List of subvolumes to create for a filesystem of type btrfs. This
          key only makes sense for file systems of type btrfs. If there is a
          default subvolume used for the distribution (for example
          <filename>@</filename> in <phrase role="productname"><phrase os="osuse">openSUSE</phrase><phrase os="sles">SUSE Linux Enterprise Server</phrase><phrase os="sled">SUSE Linux Enterprise Desktop</phrase><phrase os="slerte">SUSE Linux Enterprise Real Time Extension</phrase></phrase>) the name of this default
          subvolume is automatically prepended to the names in this list.
         </para>
                  <screen>&lt;subvolumes config:type="list"&gt;
  &lt;path&gt;tmp&lt;/path&gt;
  &lt;path&gt;opt&lt;/path&gt;
  &lt;path&gt;srv&lt;/path&gt;
  &lt;path&gt;var/crash&lt;/path&gt;
  &lt;path&gt;var/lock&lt;/path&gt;
  &lt;path&gt;var/run&lt;/path&gt;
  &lt;path&gt;var/tmp&lt;/path&gt;
  &lt;path&gt;var/spool&lt;/path&gt;
  ...
&lt;/subvolumes&gt;</screen>
                </entry>
                <entry>
                  <para/>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          lv_name
         </para>
                </entry>
                <entry>
                  <para>
          If this partition is in a logical volume in a volume group specify
          the logical volume name here (see the <literal>is_lvm_vg</literal>
          parameter in the drive configuration).
         </para>
                  <screen>&lt;lv_name&gt;opt_lv&lt;/lv_name&gt;</screen>
                </entry>
                <entry>
                  <para/>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          stripes
         </para>
                </entry>
                <entry>
                  <para>
          An integer that configures LVM striping. Specify across how many
          devices you want to stripe (spread data).
         </para>
                  <screen>&lt;stripes config:type="integer"&gt;2&lt;/stripes&gt;</screen>
                </entry>
                <entry>
                  <para/>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          stripesize
         </para>
                </entry>
                <entry>
                  <para>
          Specify the size of each block in kb.
         </para>
                  <screen>&lt;stripesize config:type="integer"
&gt;4&lt;/stripesize&gt;</screen>
                </entry>
                <entry>
                  <para/>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          lvm_group
         </para>
                </entry>
                <entry>
                  <para>
          If this is a physical partition used by (part of) a volume group
          (LVM), you have to specify the name of the volume group here.
         </para>
                  <screen>&lt;lvm_group&gt;system&lt;/lvm_group&gt;</screen>
                </entry>
                <entry>
                  <para/>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          pool
         </para>
                </entry>
                <entry>
                  <para><literal>pool</literal> must be set to <literal>true</literal> if
          the LVM logical volume should be an LVM thin pool.
         </para>
                  <screen>&lt;pool config:type="boolean"&gt;false&lt;/pool&gt;</screen>
                </entry>
                <entry>
                  <para/>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          used_pool
         </para>
                </entry>
                <entry>
                  <para>
          The name of the LVM thin pool that is used as a data store for
          this thin logical volume. If this is set to something non-empty,
          it implies that the volume is a so-called thin logical volume.
         </para>
                  <screen>&lt;used_pool&gt;my_thin_pool&lt;/used_pool&gt;</screen>
                </entry>
                <entry>
                  <para/>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          raid_name
         </para>
                </entry>
                <entry>
                  <para>
          If this physical volume is part of a RAID, specify the name of the
          RAID.
         </para>
                  <screen>&lt;raid_name&gt;/dev/md0&lt;/raid_name&gt;</screen>
                </entry>
                <entry>
                  <para/>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          raid_type
         </para>
                </entry>
                <entry>
                  <para>
          Specify the type of the RAID.
         </para>
                  <screen>&lt;raid_type&gt;raid1&lt;/raid_type&gt;</screen>
                </entry>
                <entry>
                  <para/>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          raid_options
         </para>
                </entry>
                <entry>
                  <para>
          Specify RAID options, see below.
         </para>
                  <screen>&lt;raid_options&gt;...&lt;/raid_options&gt;</screen>
                </entry>
                <entry>
                  <para/>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          resize
         </para>
                </entry>
                <entry>
                  <para>
          This boolean must be <literal>true</literal> if an existing
          partition should be resized. In this case, you want to set
          <literal>create</literal> to <literal>false</literal> and in most
          cases you don't want to <literal>format</literal> the partition.
          You need to tell AutoYaST the <literal>partition_nr</literal> and the
          <literal>size</literal>. The size can be in percentage of the
          original size or a number, like <literal>800M</literal>.
          <literal>max</literal> and <literal>auto</literal> do not work as
          size here.
         </para>
                  <screen>&lt;resize config:type="boolean"
&gt;false&lt;/resize&gt;</screen>
                </entry>
                <entry>
                  <para>
          Resizing only works with physical disks, not with LVM volumes.
         </para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </sect2>
      <sect2>
        <title>RAID Options</title>
        <para>
     The following elements must be placed within the following XML
     structure:
    </para>
        <screen>&lt;partition&gt;
  &lt;raid_options&gt;
    ...
  &lt;/raid_options&gt;
&lt;/partition&gt;</screen>
        <informaltable>
          <tgroup cols="3">
            <thead>
              <row>
                <entry>
                  <para>
          Attribute
         </para>
                </entry>
                <entry>
                  <para>
          Values
         </para>
                </entry>
                <entry>
                  <para>
          Description
         </para>
                </entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>
                  <para>
          chunk_size
         </para>
                </entry>
                <entry>
                  <para/>
                  <screen>&lt;chunk_size&gt;4&lt;/chunk_size&gt;</screen>
                </entry>
                <entry>
                  <para/>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          parity_algorithm
         </para>
                </entry>
                <entry>
                  <para>
          Possible values are:
         </para>
                  <para><literal>left_asymmetric</literal>, <literal>left_symmetric,
          right_asymmetric</literal>, <literal>right_symmetric</literal>.
         </para>
                  <para>
          For RAID6 and RAID10 the following values can be used:
         </para>
                  <para><literal>parity_first</literal>, <literal>parity_last</literal>,
          <literal>left_asymmetric_6, left_symmetric_6</literal>,
          <literal>right_asymmetric_6</literal>,
          <literal>right_symmetric_6</literal>,
          <literal>parity_first_6</literal>, <literal>n2</literal>,
          <literal>o2</literal>, <literal>f2</literal>,
          <literal>n3</literal>, <literal>o3</literal>,
          <literal>f3</literal> for RAID6 and RAID10.
         </para>
                  <screen>&lt;parity_algorithm
&gt;left_asymmetric&lt;/parity_algorithm&gt;</screen>
                </entry>
                <entry>
                  <para/>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          raid_type
         </para>
                </entry>
                <entry>
                  <para>
          Possible values are: <literal>raid0</literal>,
          <literal>raid1</literal> and <literal>raid5</literal>.
         </para>
                  <screen>&lt;raid_type&gt;raid1&lt;/raid_type&gt;</screen>
                </entry>
                <entry>
                  <para>
          The default is raid1.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          device_order
         </para>
                </entry>
                <entry>
                  <para>
          This list contains the optional order of the physical devices:
         </para>
                  <screen>&lt;device_order config:type="list"&gt;
   &lt;device&gt;/dev/sdb2&lt;/device&gt;
   &lt;device&gt;/dev/sda1&lt;/device&gt;
   ...
&lt;/device_order&gt;</screen>
                </entry>
                <entry>
                  <para>
          This is optional and the default is alphabetical order.
         </para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </sect2>
      <sect2 xml:id="ay.auto_partitioning">
        <title>Automated Partitioning</title>
        <para>
     For automated partitioning, you only need to provide the sizes and
     mount points of partitions. All other data needed for successful
     partitioning is calculated during installation—unless provided in the
     control file.
    </para>
        <para>
     If no partitions are defined and the specified drive is also the drive
     where the root partition should be created, the following partitions
     are created automatically:
    </para>
        <itemizedlist>
          <listitem>
            <para>
              <filename>/boot</filename>
            </para>
            <para>
       The size of the <filename>/boot</filename> partition is determined by
       the architecture of the target system.
      </para>
          </listitem>
          <listitem>
            <para>
              <filename>swap</filename>
            </para>
            <para>
       The size of the swap partition is determined by the amount of memory
       available in the system.
      </para>
          </listitem>
          <listitem>
            <para><filename>/</filename> (root partition)
      </para>
            <para>
       The size of the root partition is determined by the space left after
       creating <filename>swap</filename> and <filename>/boot</filename>.
      </para>
          </listitem>
        </itemizedlist>
        <para>
     Depending on the initial status of the drive and how it was previously
     partitioned, it is possible to create the default partitioning in the
     following ways:
    </para>
        <variablelist>
          <varlistentry>
            <term>Use Free Space</term>
            <listitem>
              <para>
        If the drive is already partitioned, it is possible to create the
        new partitions using the free space on the hard drive. This requires
        the availability of sufficient space for all selected packages in
        addition to swap.
       </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Reuse all available space</term>
            <listitem>
              <para>
        Use this option to delete all existing partitions (Linux and
        non-Linux).
       </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Reuse all available Linux partitions</term>
            <listitem>
              <para>
        This option deletes all existing Linux partitions. Other partitions
        (i.e. Windows) remain untouched. Note that this works only if the
        Linux partitions are at the end of the device.
       </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Reuse only specified partitions</term>
            <listitem>
              <para>
        This option allows you to select specific partitions to delete.
        Start the selection with the last available partition.
       </para>
            </listitem>
          </varlistentry>
        </variablelist>
        <para>
     Repartitioning only works if the selected partitions are neighbors and
     located at the end of the device.
    </para>
        <important>
          <title>Beware of Data Loss</title>
          <para>
      The value provided in the <literal>use</literal> property determines
      how existing data and partitions are treated. The value
      <literal>all</literal> means that the entire disk will be erased. Make
      backups and use the <literal>confirm</literal> property if you need to
      keep some partitions with important data. Otherwise, no pop-ups will
      notify you about partitions being deleted.
     </para>
        </important>
        <para>
     If multiple drives are present in the target system, identify all
     drives with their device names and specify how the partitioning should
     be performed.
    </para>
        <para>
     Partition sizes can be given in gigabytes, megabytes or can be set to a
     flexible value using the keywords <literal>auto</literal> and
     <literal>max</literal>. <literal>max</literal> uses all available space
     on a drive, therefore should only be set for the last partition on the
     drive. With <literal>auto</literal> the size of a
     <literal>swap</literal> or <literal>boot</literal> partition is
     determined automatically, depending on the memory available and the
     type of the system.
    </para>
        <para>
     A fixed size can be given as shown below:
    </para>
        <para><literal>1GB</literal>, <literal>1G</literal>,
     <literal>100MB</literal>, or <literal>1000M</literal> will all create a
     partition of the size 1 Gigabyte.
    </para>
        <example>
          <title>Automated Partitioning</title>
          <para>
      The following is an example of a single drive system, which is not
      pre-partitioned and should be automatically partitioned according to
      the described pre-defined partition plan. If you do not specify the
      device, it will be automatically detected.
     </para>
          <screen>&lt;partitioning  config:type="list"&gt;
  &lt;drive&gt;
    &lt;device&gt;/dev/sda&lt;/device&gt;       
    &lt;use&gt;all&lt;/use&gt;
  &lt;/drive&gt;
&lt;/partitioning&gt;
</screen>
        </example>
        <para>
     A more detailed example shows how existing partitions and multiple
     drives are handled.
    </para>
        <example>
          <title>Detailed Automated Partitioning</title>
          <screen>&lt;partitioning  config:type="list"&gt;
  &lt;drive&gt;
    &lt;device&gt;/dev/sda&lt;/device&gt;            
    &lt;partitions config:type="list"&gt;
      &lt;partition&gt;
	&lt;mount&gt;/&lt;/mount&gt;
	&lt;size&gt;10G&lt;/size&gt;
      &lt;/partition&gt;
      &lt;partition&gt;
	&lt;mount&gt;swap&lt;/mount&gt;
	&lt;size&gt;1G&lt;/size&gt;
      &lt;/partition&gt;
    &lt;/partitions&gt;
  &lt;/drive&gt;
  &lt;drive&gt;
    &lt;device&gt;/dev/sdb&lt;/device&gt;
    &lt;use&gt;all&lt;/use&gt;
    &lt;partitions config:type="list"&gt;
      &lt;partition&gt;
	&lt;filesystem  config:type="symbol"&gt;reiser&lt;/filesystem&gt;
	&lt;mount&gt;/data1&lt;/mount&gt;
	&lt;size&gt;15G&lt;/size&gt;	
      &lt;/partition&gt;
      &lt;partition&gt;
	&lt;filesystem  config:type="symbol"&gt;jfs&lt;/filesystem&gt;
	&lt;mount&gt;/data2&lt;/mount&gt;
	&lt;size&gt;auto&lt;/size&gt;	
      &lt;/partition&gt;
    &lt;/partitions&gt;
    &lt;use&gt;free&lt;/use&gt;
  &lt;/drive&gt;
&lt;/partitioning&gt;
</screen>
        </example>
      </sect2>
      <sect2>
        <title>Advanced Partitioning Features</title>
        <para>
          <remark role="fixme">Add a short description</remark>
        </para>
        <sect3>
          <title>Wipe out Partition Table</title>
          <para>
      In most cases this is not needed because AutoYaST can delete partitions
      one by one automatically, but you have the option to let AutoYaST clear
      the partition table instead of deleting partitions individually.
     </para>
          <para>
      Go to the <literal>drive</literal> section and add:
     </para>
          <screen>&lt;initialize config:type="boolean"&gt;true&lt;/initialize&gt;</screen>
          <para>
      With this setting AutoYaST will delete the partition table before it
      starts to analyse the actual partitioning and calculates its partition
      plan. Of course this means, that you cannot keep any of your existing
      partitions.
     </para>
        </sect3>
        <sect3>
          <title>Mount Options</title>
          <para>
      By default a file system to be mounted is identified in
      <filename>/etc/fstab</filename> by the device name. This
      identification can be changed so the file system is found by searching
      for a UUID or a volume label. Note that not all file systems can be
      mounted by UUID or a volume label. To specify how a partition is to be
      mounted, use the <literal>mountby</literal> property which has the
      <literal>symbol</literal> type. Possible options are:
     </para>
          <itemizedlist>
            <listitem>
              <para><literal>device</literal> (default)
       </para>
            </listitem>
            <listitem>
              <para>
                <literal>label</literal>
              </para>
            </listitem>
            <listitem>
              <para>
                <literal>UUID</literal>
              </para>
            </listitem>
          </itemizedlist>
          <para>
      If you choose to mount the partition using a label, the name entered
      for the <literal>label</literal> property is used as the volume label.
     </para>
          <para>
      Add any valid mount option in the fourth field of
      <filename>/etc/fstab</filename>. Multiple options are separated by
      commas. Possible fstab options:
     </para>
          <variablelist>
            <varlistentry>
              <term>Mount read-only (<literal>ro</literal>)</term>
              <listitem>
                <para>
         No write access to the file system. Default is
         <literal>false</literal>.
        </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>No access time (<literal>noatime</literal>)</term>
              <listitem>
                <para>
         Access times are not updated when a file is read. Default is
         <literal>false</literal>.
        </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>Mountable by User (<literal>user</literal>)</term>
              <listitem>
                <para>
         The file system can be mounted by a normal user. Default is
         <literal>false</literal>.
        </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	Data Journaling Mode (<literal>ordered</literal>,
        <literal>journal</literal>, <literal>writeback</literal>)
       </term>
              <listitem>
                <variablelist>
                  <varlistentry>
                    <term>
                      <literal>journal</literal>
                    </term>
                    <listitem>
                      <para>
            All data is committed to the journal prior to being written to
            the main file system.
           </para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term>
                      <literal>ordered</literal>
                    </term>
                    <listitem>
                      <para>
            All data is directly written to the main file system before its
            meta data is committed to the journal.
           </para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term>
                      <literal>writeback</literal>
                    </term>
                    <listitem>
                      <para>
            Data ordering is not preserved.
           </para>
                    </listitem>
                  </varlistentry>
                </variablelist>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>Access Control List (<literal>acl</literal>)</term>
              <listitem>
                <para>
         Enable access control lists on the file system.
        </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>Extended User Attributes (<literal>user_xattr</literal>)</term>
              <listitem>
                <para>
         Allow extended user attributes on the file system.
        </para>
              </listitem>
            </varlistentry>
          </variablelist>
          <example>
            <title>Mount Options</title>
            <screen>&lt;partitions config:type="list"&gt;
  &lt;partition&gt;   
    &lt;filesystem config:type="symbol"&gt;reiser&lt;/filesystem&gt;
    &lt;format config:type="boolean"&gt;true&lt;/format&gt;
    &lt;fstopt&gt;ro,noatime,user,data=ordered,acl,user_xattr&lt;/fstopt&gt;
    &lt;mount&gt;/local&lt;/mount&gt;
    &lt;mountby config:type="symbol"&gt;uuid&lt;/mountby&gt;
    &lt;partition_id config:type="integer"&gt;131&lt;/partition_id&gt;
    &lt;size&gt;10G&lt;/size&gt;
  &lt;/partition&gt;
&lt;/partitions&gt;
</screen>
          </example>
        </sect3>
        <sect3>
          <title>Keeping Specific Partitions</title>
          <para>
      In some cases you may want to leave partitions untouched and only
      format specific target partitions, rather than creating them from
      scratch. For example, if different Linux installations coexist, or you
      have another operating system installed, likely you do not want to
      wipe these out. Or you may want to leave data partitions untouched.
     </para>
          <para>
      Such scenarios require certain knowledge about the target systems and
      hard drives. Depending on the scenario, you might need to know the
      exact partition table of the target hard drive with partition ids,
      sizes and numbers. With this data you can tell AutoYaST to keep certain
      partitions, format others and create new partitions if needed.
     </para>
          <para>
      The following example will keep partitions 1, 2 and 5 and delete
      partition 6 to create two new partitions. All remaining partitions
      will only be formatted.
      <remark>emap 2011-11-05: Not the best example for the scenarios two paras up with coexisting operating systems or data partitions. Who'd want to format those?</remark></para>
          <example>
            <title>Keeping partitions</title>
            <screen>&lt;partitioning config:type="list"&gt;
  &lt;drive&gt;
    &lt;device&gt;/dev/sdc&lt;/device&gt;
      &lt;partitions config:type="list"&gt;
        &lt;partition&gt;
          &lt;create config:type="boolean"&gt;false&lt;/create&gt;
          &lt;format config:type="boolean"&gt;true&lt;/format&gt;
          &lt;mount&gt;/&lt;/mount&gt;
          &lt;partition_nr config:type="integer"&gt;1&lt;/partition_nr&gt;
        &lt;/partition&gt;
        &lt;partition&gt;
          &lt;create config:type="boolean"&gt;false&lt;/create&gt;
          &lt;format config:type="boolean"&gt;false&lt;/format&gt;
          &lt;partition_nr config:type="integer"&gt;2&lt;/partition_nr&gt;
          &lt;mount&gt;/space&lt;/mount&gt;
        &lt;/partition&gt;
        &lt;partition&gt;
          &lt;create config:type="boolean"&gt;false&lt;/create&gt;
          &lt;format config:type="boolean"&gt;true&lt;/format&gt;
          &lt;filesystem config:type="symbol"&gt;swap&lt;/filesystem&gt;
          &lt;partition_nr config:type="integer"&gt;5&lt;/partition_nr&gt;
          &lt;mount&gt;swap&lt;/mount&gt;
        &lt;/partition&gt;
        &lt;partition&gt;
          &lt;format config:type="boolean"&gt;true&lt;/format&gt;
          &lt;mount&gt;/space2&lt;/mount&gt;
          &lt;size&gt;5G&lt;/size&gt;
        &lt;/partition&gt;
        &lt;partition&gt;
          &lt;format config:type="boolean"&gt;true&lt;/format&gt;
          &lt;mount&gt;/space3&lt;/mount&gt;
          &lt;size&gt;max&lt;/size&gt;
        &lt;/partition&gt;
      &lt;/partitions&gt;
    &lt;use&gt;6&lt;/use&gt;
  &lt;/drive&gt;
&lt;/partitioning&gt;</screen>
          </example>
          <para>
      The last example requires exact knowledge of the existing partition
      table and the partition numbers of those partitions that should be
      kept. In some cases however, such data may not be available,
      especially in a mixed hardware environment with different hard drive
      types and configurations. The following scenario is for a system with
      a non-Linux OS with a designated area for a Linux installation.
     </para>
          <figure xml:id="partitioning-keep1">
            <title>Keeping partitions</title>
            <mediaobject>
              <imageobject role="html">
                <imagedata fileref="partitioning-keep1.png"/>
              </imageobject>
              <imageobject role="fo">
                <imagedata fileref="partitioning-keep1.png" width="75%"/>
              </imageobject>
            </mediaobject>
          </figure>
          <para>
      In this scenario, shown in figure
      <xref linkend="partitioning-keep1"/>, AutoYaST will not create new
      partitions. Instead it searches for certain partition types on the
      system and uses them according to the partitioning plan in the control
      file. No partition numbers are given in this case, only the mount
      points and the partition types (additional configuration data can be
      provided, for example file system options, encryption and filesystem
      type).
     </para>
          <example>
            <title>Auto-detection of partitions to be kept.</title>
            <screen>&lt;partitioning config:type="list"&gt;
  &lt;drive&gt;
    &lt;partitions config:type="list"&gt;
      &lt;partition&gt;
        &lt;create config:type="boolean"&gt;false&lt;/create&gt;
        &lt;format config:type="boolean"&gt;true&lt;/format&gt;
        &lt;mount&gt;/&lt;/mount&gt;
        &lt;partition_id config:type="integer"&gt;131&lt;/partition_id&gt;
      &lt;/partition&gt;
      &lt;partition&gt;
        &lt;create config:type="boolean"&gt;false&lt;/create&gt;
        &lt;format config:type="boolean"&gt;true&lt;/format&gt;
        &lt;filesystem config:type="symbol"&gt;swap&lt;/filesystem&gt;
        &lt;partition_id config:type="integer"&gt;130&lt;/partition_id&gt;
        &lt;mount&gt;swap&lt;/mount&gt;
      &lt;/partition&gt;
    &lt;/partitions&gt;
  &lt;/drive&gt;
&lt;/partitioning&gt;</screen>
          </example>
        </sect3>
      </sect2>
      <sect2>
        <title>Using an Existing Mount Table (fstab)</title>
        <para>
     This option will allow AutoYaST to use an existing
     <filename>/etc/fstab</filename> and use the partition data from a
     previous installation. All partitions are kept and no new partitions
     are created. The partitions will be formatted and mounted as specified
     in <filename>/etc/fstab</filename> on a Linux root partition.
    </para>
        <para>
     Although the default behaviour is to format all partitions, it is also
     possible to leave some partitions untouched and only mount them, for
     example data partitions. If multiple installations are found on the
     system (multiple root partitions with different
     <filename>fstab</filename> files, the installation will abort, unless
     the root partition is configured in the control file. The following
     example illustrates how this option can be used:
    </para>
        <example>
          <title>Reading an Existing <filename>/etc/fstab</filename></title>
          <screen>&lt;partitioning_advanced&gt;
  &lt;fstab&gt;
    &lt;!-- Read data from existing fstab. If multiple root partitions are
            found, use the one specified below. Otherwise the first root
	    partition is taken --&gt;
    &lt;!-- &lt;root_partition&gt;/dev/sda5&lt;/root_partition&gt; --&gt;
    &lt;use_existing_fstab config:type="boolean"&gt;true&lt;/use_existing_fstab&gt;
    &lt;!-- all partitions found in fstab will be formatted and mounted
            by default unless a partition is listed below with different
	    settings --&gt;
    &lt;partitions config:type="list"&gt;
      &lt;partition&gt;
        &lt;format config:type="boolean"&gt;false&lt;/format&gt;
        &lt;mount&gt;/bootmirror&lt;/mount&gt;
      &lt;/partition&gt;
    &lt;/partitions&gt;
  &lt;/fstab&gt;
&lt;/partitioning_advanced&gt;</screen>
        </example>
      </sect2>
      <sect2>
        <title>Logical Volume Manager (LVM)</title>
        <para>
     To configure LVM, first create a physical volume using the normal
     partitioning method described above.
    </para>
        <example>
          <title>Create LVM Physical Volume</title>
          <para>
      The following example shows how to prepare for LVM in the
      <literal>partitioning</literal> resource. A non-formatted partition is
      created on device <filename>/dev/sda1</filename> of the type
      <literal>LVM</literal> and with the volume group
      <literal>system</literal>. This partition will use all space available
      on the drive.
     </para>
          <screen>&lt;partitioning config:type="list"&gt;
  &lt;drive&gt;
    &lt;device&gt;/dev/sda&lt;/device&gt;         
    &lt;partitions config:type="list"&gt;
      &lt;partition&gt;	  
        &lt;lvm_group&gt;system&lt;/lvm_group&gt;
        &lt;partition_type&gt;primary&lt;/partition_type&gt;
        &lt;size&gt;max&lt;/size&gt;
      &lt;/partition&gt;
    &lt;/partitions&gt;
    &lt;use&gt;all&lt;/use&gt;
  &lt;/drive&gt;
&lt;/partitioning&gt;</screen>
        </example>
        <example>
          <title>LVM Logical Volumes</title>
          <screen>&lt;partitioning config:type="list"&gt;
  &lt;drive&gt;
    &lt;device&gt;/dev/sda&lt;/device&gt;             
    &lt;partitions config:type="list"&gt;
      &lt;partition&gt;	 
        &lt;lvm_group&gt;system&lt;/lvm_group&gt;
        &lt;partition_type&gt;primary&lt;/partition_type&gt;
        &lt;size&gt;max&lt;/size&gt;
      &lt;/partition&gt;
    &lt;/partitions&gt;
    &lt;use&gt;all&lt;/use&gt;
  &lt;/drive&gt;
  &lt;drive&gt;
    &lt;device&gt;/dev/system&lt;/device&gt;       
      &lt;is_lvm_vg config:type="boolean"&gt;true&lt;/is_lvm_vg&gt;
      &lt;partitions config:type="list"&gt;
	&lt;partition&gt;
	  &lt;filesystem config:type="symbol"&gt;reiser&lt;/filesystem&gt;
	  &lt;lv_name&gt;user_lv&lt;/lv_name&gt;
	  &lt;mount&gt;/usr&lt;/mount&gt;
	  &lt;size&gt;15G&lt;/size&gt;
	&lt;/partition&gt;
	&lt;partition&gt;
	  &lt;filesystem config:type="symbol"&gt;reiser&lt;/filesystem&gt;
	  &lt;lv_name&gt;opt_lv&lt;/lv_name&gt;
	  &lt;mount&gt;/opt&lt;/mount&gt;
	  &lt;size&gt;10G&lt;/size&gt;
	&lt;/partition&gt;
	&lt;partition&gt;
	  &lt;filesystem config:type="symbol"&gt;reiser&lt;/filesystem&gt;
	  &lt;lv_name&gt;var_lv&lt;/lv_name&gt;
	  &lt;mount&gt;/var&lt;/mount&gt;
	  &lt;size&gt;1G&lt;/size&gt;
	&lt;/partition&gt;
      &lt;/partitions&gt;
      &lt;pesize&gt;4M&lt;/pesize&gt;
    &lt;use&gt;all&lt;/use&gt;
  &lt;/drive&gt;
&lt;/partitioning&gt;
</screen>
        </example>
        <para>
     It is possible to set the <literal>size</literal> to
     <literal>max</literal> for the logical volumes. Of course, you can only
     use <literal>max</literal> for one(!) logical volume. You cannot set
     two logical volumes in one volume group to <literal>max</literal>.
    </para>
      </sect2>
      <sect2>
        <title>Software RAID</title>
        <para>
     Using AutoYaST, you can create and assemble software RAID devices. The
     supported RAID levels are the following:
    </para>
        <variablelist>
          <varlistentry>
            <term>RAID 0</term>
            <listitem>
              <para>
        This level increases your disk performance. There is
        <emphasis>no</emphasis> redundancy in this mode. If one of the
        drives crashes, data recovery will not be possible.
       </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>RAID 1</term>
            <listitem>
              <para>
        This mode offers the best redundancy. It can be used with two or
        more disks. An exact copy of all data is maintained on all disks. As
        long as at least one disk is still working, no data is lost. The
        partitions used for this type of RAID should have approximately the
        same size.
       </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>RAID 5</term>
            <listitem>
              <para>
        This mode combines management of a larger number of disks and still
        maintains some redundancy. This mode can be used on three disks or
        more. If one disk fails, all data is still intact. If two disks fail
        simultaneously, all data is lost.
       </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Multipath</term>
            <listitem>
              <para>
        This mode allows access to the same physical device via multiple
        controllers for redundancy against a fault in a controller card.
        This mode can be used with at least two devices.
       </para>
            </listitem>
          </varlistentry>
        </variablelist>
        <para>
     As with LVM, you need to create all RAID partitions first and assign
     them to the RAID device you want to create afterwards. Additionally you
     need to specify whether a partition or a device should be part of the
     RAID or if it should be a Spare device.
    </para>
        <para>
     The following example shows a simple RAID1 configuration:
    </para>
        <example>
          <title>RAID1 configuration</title>
          <screen>&lt;partitioning config:type="list"&gt;
  &lt;drive&gt;
    &lt;device&gt;/dev/sda&lt;/device&gt;
    &lt;partitions config:type="list"&gt;
      &lt;partition&gt;
        &lt;partition_id config:type="integer"&gt;253&lt;/partition_id&gt;
        &lt;format config:type="boolean"&gt;false&lt;/format&gt;
        &lt;raid_name&gt;/dev/md0&lt;/raid_name&gt;
        &lt;raid_type&gt;raid&lt;/raid_type&gt;
        &lt;size&gt;4G&lt;/size&gt;            
      &lt;/partition&gt;

	&lt;!-- Insert a configuration for the regular partitions located on
	        /dev/sda here (for example / and swap) --&gt;
        
    &lt;/partitions&gt;
    &lt;use&gt;all&lt;/use&gt;
  &lt;/drive&gt;
  &lt;drive&gt;
    &lt;device&gt;/dev/sdb&lt;/device&gt;
    &lt;partitions config:type="list"&gt;
      &lt;partition&gt;
        &lt;format config:type="boolean"&gt;false&lt;/format&gt;
        &lt;partition_id config:type="integer"&gt;253&lt;/partition_id&gt;
        &lt;raid_name&gt;/dev/md0&lt;/raid_name&gt;            
        &lt;raid_type&gt;raid&lt;/raid_type&gt;
        &lt;size&gt;4gb&lt;/size&gt;
      &lt;/partition&gt;
    &lt;/partitions&gt;
    &lt;use&gt;all&lt;/use&gt;
  &lt;/drive&gt;
  &lt;drive&gt;
    &lt;device&gt;/dev/md&lt;/device&gt;
    &lt;partitions config:type="list"&gt;
      &lt;partition&gt;
        &lt;filesystem config:type="symbol"&gt;reiser&lt;/filesystem&gt;
        &lt;format config:type="boolean"&gt;true&lt;/format&gt;
        &lt;mount&gt;/space&lt;/mount&gt;
        &lt;partition_id config:type="integer"&gt;131&lt;/partition_id&gt;
        &lt;partition_nr config:type="integer"&gt;0&lt;/partition_nr&gt;
        &lt;raid_options&gt;
          &lt;chunk_size&gt;4&lt;/chunk_size&gt;
          &lt;parity_algorithm&gt;left-asymmetric&lt;/parity_algorithm&gt;
          &lt;raid_type&gt;raid1&lt;/raid_type&gt;
        &lt;/raid_options&gt;
      &lt;/partition&gt;
    &lt;/partitions&gt;
    &lt;use&gt;all&lt;/use&gt;
  &lt;/drive&gt;
&lt;/partitioning&gt;</screen>
        </example>
        <para>
     Keep the the following in mind when configuring a RAID:
    </para>
        <itemizedlist>
          <listitem>
            <para>
       The device for raid is always <literal>/dev/md</literal></para>
          </listitem>
          <listitem>
            <para>
       The property <literal>partition_nr</literal> is used to determine the
       MD device number. If <literal>partition_nr</literal> is equal to 0,
       then <literal>/dev/md0</literal> is configured.
      </para>
          </listitem>
          <listitem>
            <para>
       All RAID-specific options are contained in the
       <literal>raid_options</literal> resource.
      </para>
          </listitem>
        </itemizedlist>
      </sect2>
      <sect2>
        <title>IBM System z Specific Configuration</title>
        <para/>
        <sect3>
          <title>Configuring DASD Disks</title>
          <para>
      The elements listed below must be placed within the following XML
      structure:
     </para>
          <screen>&lt;dasd&gt;
 &lt;devices config:type="list"&gt;
  &lt;listentry&gt;
   ...
  &lt;/listentry&gt;
 &lt;/devices&gt;
&lt;/dasd&gt;</screen>
          <para>
      tags in the &lt;profile&gt; section. Each disk needs to be configured
      in a separate &lt;listentry&gt; ... &lt;/listentry&gt; section.
     </para>
          <informaltable>
            <tgroup cols="3">
              <thead>
                <row>
                  <entry>
                    <para>
           Attribute
          </para>
                  </entry>
                  <entry>
                    <para>
           Values
          </para>
                  </entry>
                  <entry>
                    <para>
           Description
          </para>
                  </entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry>
                    <para>
           device
          </para>
                  </entry>
                  <entry>
                    <para><literal>DASD</literal> is the only value allowed
          </para>
                    <screen>&lt;device
&gt;DASD&lt;/dev_name&gt;</screen>
                  </entry>
                  <entry>
                    <para/>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>
           dev_name
          </para>
                  </entry>
                  <entry>
                    <para>
           The device (<literal>dasd<replaceable>n</replaceable></literal>)
           you want to configure in this section.
          </para>
                    <screen>&lt;dev_name
&gt;/dev/dasda&lt;/dev_name&gt;</screen>
                  </entry>
                  <entry>
                    <para>
           Optional but recommended. If left out, AutoYaST tries to guess the
           device.
          </para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>
           channel
          </para>
                  </entry>
                  <entry>
                    <para>
           Channel by which the disk is accessed.
          </para>
                    <screen>&lt;channel&gt;0.0.0150&lt;/channel&gt;</screen>
                  </entry>
                  <entry>
                    <para>
           Mandatory.
          </para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>
           diag
          </para>
                  </entry>
                  <entry>
                    <para>
           Enable or disable the use of <literal>DIAG</literal>. Possible
           values are <literal>true</literal> (enable) or
           <literal>false</literal> (disable).
          </para>
                    <screen>&lt;diag
config:type="boolean"&gt;true&lt;/diag&gt;</screen>
                  </entry>
                  <entry>
                    <para>
           Optional.
          </para>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </sect3>
        <sect3>
          <title>Configuring zFCP Disks</title>
          <para>
      The following elements must be placed within the following XML
      structure:
     </para>
          <screen>&lt;profile&gt;
  &lt;zfcp&gt;
    &lt;devices config:type="list"&gt;
      &lt;listentry&gt;
        ...
      &lt;/listentry&gt;
    &lt;/devices&gt;
  &lt;/zfcp&gt;
&lt;profile&gt;</screen>
          <para>
      Each disk needs to be configured in a separate
      <literal>listentry</literal> section.
     </para>
          <informaltable>
            <tgroup cols="2">
              <thead>
                <row>
                  <entry>
                    <para>
           Attribute
          </para>
                  </entry>
                  <entry>
                    <para>
           Values
          </para>
                  </entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry>
                    <para>
           controller_id
          </para>
                  </entry>
                  <entry>
                    <para>
           Channel number
          </para>
                    <screen>&lt;controller_id
&gt;0.0.fc00&lt;/controller_id&gt;</screen>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>
           fcp_lun
          </para>
                  </entry>
                  <entry>
                    <para>
           Logical unit number
          </para>
                    <screen>&lt;fcp_lun
&gt;0x4010400400000000&lt;/fcp_lun&gt;</screen>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>
           wwpn
          </para>
                  </entry>
                  <entry>
                    <para>
           World wide port number
          </para>
                    <screen>&lt;wwpn
&gt;0x500507630510473a&lt;/wwpn&gt;</screen>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </sect3>
      </sect2>
    </sect1>
    <sect1 xml:id="CreateProfile.Software">
      <title>Software</title>
      <para>
        <remark role="fixme">Add a short description</remark>
      </para>
      <sect2 xml:id="Software.Selections.sles10">
        <title>Package Selection with Patterns</title>
        <para>
     Patterns are configured like this:
    </para>
        <example>
          <title>Package Selection in the Control File with Patterns</title>
          <screen>&lt;software&gt;
  &lt;patterns config:type="list"&gt;
    &lt;pattern&gt;directory_server&lt;/pattern&gt;
  &lt;/patterns&gt;
  &lt;packages  config:type="list"&gt;
    &lt;package&gt;apache&lt;/package&gt;
    &lt;package&gt;postfix&lt;/package&gt;
  &lt;/packages&gt;
  &lt;do_online_update config:type="boolean"&gt;true&lt;/do_online_update&gt;
&lt;/software&gt;</screen>
        </example>
      </sect2>
      <sect2 os="osuse">
        <title>Deploying Images</title>
        <para>
     You can use images during installation to speed up the installation.
    </para>
        <example>
          <title>Activating Image Deployment</title>
          <screen>&lt;!-- note! this is not in the software section! --&gt;
&lt;deploy_image&gt;
  &lt;image_installation config:type="boolean"&gt;false&lt;/image_installation&gt;
&lt;/deploy_image&gt;</screen>
        </example>
      </sect2>
      <sect2>
        <title>Installing Additional and Customized Packages</title>
        <remark condition="clarity">
     2014-09-19 - fs: FIXME
     This section needs clarification. What is a provisioner file that is
     specified with -x, why only one data directory, etc.
    </remark>
        <para>
     In addition to the packages available for installation on the DVD-ROMs,
     you can add external packages including customized kernels. Customized
     kernel packages must be compatible to the SUSE packages and must
     install the kernel files to the same locations.
    </para>
        <para>
     Unlike in earlier in versions, you do not need a special resource in
     the control file to install custom and external packages. Instead you
     need to re-create the package database and update it with any new
     packages or new package versions in the source repository.
    </para>
        <para>
     A script is provided for this task which will query packages available
     in the repository and create the package database. Use the command
     <command>/usr/bin/create_package_descr</command>. When creating the
     database, all languages will be reset to English.
    </para>
        <example>
          <title>Creating Package Database</title>
          <screen>cd /usr/local/DVDs/LATEST/suse
create_package_descr -x PATH_TO_EXTRA_PROV -d /usr/local/CDs/LATEST/suse</screen>
        </example>
        <para>
     In the above example, the directory
     <filename>/usr/local/CDs/LATEST/suse</filename> contains the
     architecture dependent and independent packages, i.e.
     <literal>noarch</literal>. This might look different on other
     architectures.
    </para>
        <para>
     The advantage of this method is that you can keep an up-to-date
     repository with fixed and updated package. Additionally this method
     makes the creation of custom CD-ROMs easier.
    </para>
        <para>
     To add your own RPMs to an installation source (or add-on products like
     the SDK), add a file <filename>add_on_products</filename> to the
     installation source.
    </para>
        <screen>media_url [path_on_media [product_1 [product_2 [....]]]</screen>
        <para><literal>media_url</literal> is the URL of the media,
     <literal>path_on_media</literal> is the path to the catalog on the
     media. If not present, / (root) is assumed.
     <literal>product_1</literal> and following are the names of products,
     which should be marked for installation. If no product is specified,
     all products found on the media are selected for installation. For
     example:
    </para>
        <screen>http://192.168.66.6/SLES/sdk/DVD1
        http://192.168.66.6/SLES/DVD1/updates</screen>
        <para>
     As an alternative to adding the <filename>add_on_products</filename>
     file to the installation source, you can use the AutoYaST control file to
     specify add-on products. For example:
    </para>
        <screen>&lt;add-on&gt;
  &lt;add_on_products config:type="list"&gt;
    &lt;listentry&gt;
      &lt;media_url&gt;http://192.168.66.6/SLES/DVD1/updates&lt;/media_url&gt;
      &lt;product&gt;SLES_Updates&lt;/product&gt;
      &lt;product_dir&gt;/&lt;/product_dir&gt;
      &lt;ask_on_error config:type="boolean"&gt;false&lt;/ask_on_error&gt;
      &lt;name&gt;MyUpdates&lt;/name&gt; &lt;
    &lt;/listentry&gt;
  &lt;/add_on_products&gt;
&lt;/add-on&gt;</screen>
        <para>
     AutoYaST can ask the user to make add-on products available instead of
     reporting a time-out error when an add-on product cannot be found at
     the given location. Set ask_on_error to <literal>true</literal> (the
     default is <literal>false</literal>). Then your add-on product can be
     on a different CD/DVD than the installation source.
    </para>
        <para>
     If you want to use unsigned installation sources with AutoYaST, turn off
     the checks with the following configuration in your AutoYaST control file.
    </para>
        <para>
     The elements listed below must be placed within the following XML
     structure:
    </para>
        <screen>&lt;general&gt;
  &lt;signature-handling&gt;
    ...
  &lt;/signature-handling&gt;
&lt;/general&gt;</screen>
        <para>
     Default values for all options are <literal>false</literal>. If an
     option is set to <literal>false</literal> and a package or repository
     fails the respective test, it is silently ignored and will not be
     installed. Note that setting any of these options to
     <literal>true</literal> is a potential security risk. Never do it when
     using packages or repositories from third party sources.
    </para>
        <informaltable>
          <tgroup cols="2">
            <thead>
              <row>
                <entry>
                  <para>
          Attribute
         </para>
                </entry>
                <entry>
                  <para>
          Values
         </para>
                </entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>
                  <para>
          accept_unsigned_file
         </para>
                </entry>
                <entry>
                  <para>
          If set to <literal>true</literal>, AutoYaST will accept unsigned files
          like the content file.
         </para>
                  <screen>&lt;accept_unsigned_file config:type="boolean"
&gt;true&lt;/accept_unsigned_file&gt;</screen>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          accept_file_without_checksum
         </para>
                </entry>
                <entry>
                  <para>
          If set to <literal>true</literal>, AutoYaST will accept files without
          a checksum in the content file.
         </para>
                  <screen>&lt;accept_file_without_checksum config:type="boolean"
&gt;true&lt;/accept_file_without_checksum&gt;</screen>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          accept_verification_failed
         </para>
                </entry>
                <entry>
                  <para>
          If set to <literal>true</literal>, AutoYaST will accept signed files
          even when the verification of the signature failed.
         </para>
                  <screen>&lt;accept_verification_failed config:type="boolean"
&gt;true&lt;/accept_verification_failed&gt;</screen>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          accept_unknown_gpg_key
         </para>
                </entry>
                <entry>
                  <para>
          If set to <literal>true</literal>, AutoYaST will accept new gpg keys
          on the installation source, for example the key used to sign the
          content file.
         </para>
                  <screen>&lt;accept_unknown_gpg_key config:type="boolean"
&gt;true&lt;/accept_unknown_gpg_key&gt;</screen>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          accept_non_trusted_gpg_key
         </para>
                </entry>
                <entry>
                  <para>
          This means, the key is known, but is not trusted by you.
         </para>
                  <screen>&lt;accept_non_trusted_gpg_key config:type="boolean"
&gt;true&lt;/accept_non_trusted_gpg_key&gt;</screen>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          import_gpg_key
         </para>
                </entry>
                <entry>
                  <para>
          If set to <literal>true</literal>, AutoYaST will accept and import new
          gpg keys on the installation source in its database.
         </para>
                  <screen>&lt;import_gpg_key config:type="boolean"
&gt;true&lt;/import_gpg_key&gt;</screen>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
        <para>
     It is possible to configure the signature handling for each add-on
     product individually. The following elements must be between the
     <literal>signature-handling</literal> section of the individual add-on
     product. All settings are optional. If not configured, the global
     signature-handling from the <literal>general</literal> section is used.
    </para>
        <informaltable>
          <tgroup cols="2">
            <thead>
              <row>
                <entry>
                  <para>
          Attribute
         </para>
                </entry>
                <entry>
                  <para>
          Values
         </para>
                </entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>
                  <para>
          accept_unsigned_file
         </para>
                </entry>
                <entry>
                  <para>
          If set to <literal>true</literal>, AutoYaST will accept unsigned files
          like the content file for this add-on product.
         </para>
                  <screen>&lt;accept_unsigned_file config:type="boolean"
&gt;true&lt;/accept_unsigned_file&gt;</screen>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          accept_file_without_checksum
         </para>
                </entry>
                <entry>
                  <para>
          If set to <literal>true</literal>, AutoYaST will accept files without
          a checksum in the content file for this add-on.
         </para>
                  <screen>&lt;accept_file_without_checksum config:type="boolean"
&gt;true&lt;/accept_file_without_checksum&gt;</screen>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          accept_verification_failed
         </para>
                </entry>
                <entry>
                  <para>
          If set to <literal>true</literal>, AutoYaST will accept signed files
          even when the verification of the signature fails.
         </para>
                  <screen>&lt;accept_verification_failed config:type="boolean"
&gt;true&lt;/accept_verification_failed&gt;</screen>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          accept_unknown_gpg_key
         </para>
                </entry>
                <entry>
                  <para>
          If set to <literal>true</literal>, AutoYaST will accept new gpg keys
          on the installation source, for example the key used to sign the
          content file.
         </para>
                  <screen>&lt;accept_unknown_gpg_key&gt;
  &lt;all config:type="boolean"&gt;false&lt;/all&gt;
  &lt;keys config:type="list"&gt;
    &lt;keyid&gt;3B3011B76B9D6523&lt;/keyid&gt;
  &lt;/keys&gt;
&lt;/accept_unknown_gpg_key&gt;</screen>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          accept_non_trusted_gpg_key
         </para>
                </entry>
                <entry>
                  <para>
          This means, the key is known, but it is not trusted by you.
         </para>
                  <screen>&lt;accept_non_trusted_gpg_key&gt;
  &lt;all config:type="boolean"&gt;false&lt;/all&gt;
  &lt;keys config:type="list"&gt;
    &lt;keyid&gt;3B3011B76B9D6523&lt;/keyid&gt;
  &lt;/keys&gt;
&lt;/accept_non_trusted_gpg_key&gt;</screen>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          import_gpg_key
         </para>
                </entry>
                <entry>
                  <para>
          If set to <literal>true</literal>, AutoYaST will accept and import new
          gpg keys on the installation source into its database.
         </para>
                  <screen>&lt;import_gpg_key&gt;
  &lt;all config:type="boolean"&gt;false&lt;/all&gt;
  &lt;keys config:type="list"&gt;
    &lt;keyid&gt;3B3011B76B9D6523&lt;/keyid&gt;
  &lt;/keys&gt;
&lt;/import_gpg_key&gt;</screen>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </sect2>
      <sect2>
        <title>Kernel Packages</title>
        <para>
     Kernel packages are not part of any selection. The required kernel is
     determined during installation. If the kernel package is added to any
     selection or to the individual package selection, installation will
     mostly fail due to conflicts.
    </para>
        <para>
     To force the installation of a specific kernel, use the
     <literal>kernel</literal> property. The following is an example of
     forcing the installation of the default kernel. This kernel will be
     installed even if an SMP or other kernel is required.
    </para>
        <example>
          <title>Kernel Selection in the Control File</title>
          <screen>&lt;software&gt;        
  &lt;kernel&gt;kernel-default&lt;/kernel&gt;
  ...
&lt;/software&gt;</screen>
        </example>
      </sect2>
      <sect2>
        <title>Removing Automatically Selected Packages</title>
        <para>
     Some packages are selected automatically either because of a dependency
     or because it is available in a selection.
    </para>
        <para>
     Removing such packages might break the system consistency and it is not
     recommended to remove basic packages unless a replacement which
     provides the same services is provided. The best example for this case
     are mail transfer agent (MTA) packages. By default,
     <systemitem>postfix</systemitem> will be selected and installed. If you
     wish to use another MTA like <systemitem>sendmail</systemitem>, then
     postfix can be removed from the list of selected package using a list
     in the software resource. However, note that sendmail is not shipped
     with <phrase role="productname"><phrase os="osuse">openSUSE</phrase><phrase os="sles">SUSE Linux Enterprise Server</phrase><phrase os="sled">SUSE Linux Enterprise Desktop</phrase><phrase os="slerte">SUSE Linux Enterprise Real Time Extension</phrase></phrase>. The following example shows how this can be done:
    </para>
        <example>
          <title>Package Selection in Control File</title>
          <screen>&lt;software&gt;
  &lt;packages  config:type="list"&gt;
    &lt;package&gt;sendmail&lt;/package&gt;
  &lt;/packages&gt;
  &lt;remove-packages  config:type="list"&gt;
    &lt;package&gt;postfix&lt;/package&gt;
  &lt;/remove-packages&gt;
&lt;/software&gt;</screen>
        </example>
      </sect2>
      <sect2>
        <title>Installing Packages in Stage 2</title>
        <para>
     If you want to install packages after the reboot during stage two,
     instead of during the normal installation process in stage one, you can
     use the <literal>post-packages</literal> element for that:
    </para>
        <screen>&lt;software&gt;
  &lt;post-packages config:type="list"&gt;
    &lt;package&gt;yast2-cim&lt;/package&gt;
  &lt;/post-packages&gt;
&lt;/software&gt;</screen>
      </sect2>
      <sect2>
        <title>Installing Patterns in Stage 2</title>
        <para>
     You can also install patterns in stage 2. Use the
     <literal>post-patterns</literal> element for that:
    </para>
        <screen>&lt;software&gt;
  &lt;post-patterns config:type="list"&gt;
    &lt;pattern&gt;apparmor&lt;/pattern&gt;
  &lt;/post-patterns&gt;
&lt;/software&gt;</screen>
      </sect2>
      <sect2>
        <title>Online Update in Stage 2</title>
        <para>
     You can perform an online update at the end of the installation. Set
     the boolean <literal>do_online_update</literal> to
     <literal>true</literal>. Of course this only makes sense if you add an
     online update repository in the suse-register/customer-center section,
     for example, or in a post-script. If the online update repository was
     already available in stage one via add-on section, then AutoYaST has
     already installed the latest packages available. If a kernel update is
     done via online-update, a reboot at the end of stage two is triggered.
    </para>
        <screen>&lt;software&gt;
  &lt;do_online_update config:type="boolean"&gt;true&lt;/do_online_update&gt;
&lt;/software&gt;</screen>
      </sect2>
    </sect1>
    <sect1 xml:id="CreateProfile.Services">
      <title>Services and Targets</title>
      <para>
    With the <literal>services-manager</literal> resource you can set the
    default systemd target and specify in detail which system services you
    want to start or deactivate.
   </para>
      <para>
    The <literal>default-target</literal> property specifies the default
    systemd target into which the system boots. Valid options are
    <literal>graphical</literal> for a graphical login, or
    <literal>multi-user</literal> for a console login.
   </para>
      <para>
    The &lt;enable config:type="list"&gt; and &lt;disable
    config:type="list"&gt; let you explicitly enable or disable services.
   </para>
      <example>
        <title>Configuring Services and Targets</title>
        <screen>&lt;services-manager&gt;
  &lt;default_target&gt;multi-user&lt;/default_target&gt;
  &lt;services&gt;
    &lt;disable config:type="list"&gt;
      &lt;service&gt;cups&lt;/service&gt;
    &lt;/disable&gt;
    &lt;enable config:type="list"&gt;
      &lt;service&gt;sshd&lt;/service&gt;
    &lt;/enable&gt;
  &lt;/services&gt;
&lt;/services-manager&gt;</screen>
      </example>
    </sect1>
    <sect1 xml:id="CreateProfile.Network">
      <title>Network Configuration</title>
      <remark condition="clarity">
    2014-09-19 - fs: FIXME https://bugzilla.novell.com/show_bug.cgi?id=883393
   </remark>
      <para>
    Network configuration is used to connect a single workstation to an
    Ethernet-based LAN or to configure a dial-up connection. More complex
    configurations (multiple network cards, routing, etc.) are also
    provided.
   </para>
      <para>
    If the following setting is set to <literal>true</literal> YaST will
    keep network settings created during the installation (via Linuxrc)
    and/or merge it with network settings from the AutoYaST control file (if
    defined). AutoYaST settings have higher priority than already present
    configuration files. YaST will write ifcfg-* files based on the
    entries in the control file without removing old ones. If there is an
    empty or no dns and routing section, YaST will keep already existing
    values. Otherwise settings from the control file will be applied.
   </para>
      <screen>&lt;keep_install_network
config:type="boolean"&gt;true&lt;/keep_install_network&gt;</screen>
      <para>
    To configure network settings and activate networking automatically, one
    global resource is used to store the whole network configuration.
   </para>
      <example>
        <title>Network configuration</title>
        <screen>&lt;networking&gt;
  &lt;dns&gt;
    &lt;dhcp_hostname config:type="boolean"&gt;true&lt;/dhcp_hostname&gt;
    &lt;dhcp_resolv config:type="boolean"&gt;true&lt;/dhcp_resolv&gt;
    &lt;domain&gt;local&lt;/domain&gt;
    &lt;hostname&gt;linux&lt;/hostname&gt;
  &lt;/dns&gt;
  &lt;interfaces config:type="list"&gt;
    &lt;interface&gt;
      &lt;bootproto&gt;dhcp&lt;/bootproto&gt;
      &lt;device&gt;eth0&lt;/device&gt;        
      &lt;startmode&gt;onboot&lt;/startmode&gt;
    &lt;/interface&gt;
  &lt;/interfaces&gt;
  &lt;routing&gt;
    &lt;ip_forward config:type="boolean"&gt;false&lt;/ip_forward&gt;
    &lt;routes config:type="list"&gt;
      &lt;route&gt;
        &lt;destination&gt;default&lt;/destination&gt;
        &lt;device&gt;-&lt;/device&gt;
        &lt;gateway&gt;192.168.1.240&lt;/gateway&gt;
        &lt;netmask&gt;-&lt;/netmask&gt;
      &lt;/route&gt;
    &lt;/routes&gt;
  &lt;/routing&gt;
  &lt;modules config:type="list"&gt;
    &lt;module_entry&gt;
      &lt;device&gt;eth0&lt;/device&gt;
      &lt;module&gt;e100&lt;/module&gt;
      &lt;options&gt;&lt;/options&gt;
    &lt;/module_entry&gt;
  &lt;/modules&gt;
&lt;/networking&gt;</screen>
      </example>
      <tip>
        <title>IPv6 Address Support</title>
        <para>
     Using IPv6 addresses in AutoYaST is fully supported.
    </para>
      </tip>
      <sect2 xml:id="Configuration.Network.Proxy">
        <title>Proxy</title>
        <para>
     Configure your Internet proxy (caching) settings.
    </para>
        <para>
     Configure proxies for HTTP and FTP with <literal>http_proxy</literal>
     and <literal>ftp_proxy</literal>, respectively. Addresses or names that
     should be directly accessible need to be specified with
     <literal>no_proxy</literal> (space separated values). If you are using
     a proxy server with authorization, fill in
     <literal>proxy_user</literal> and <literal>proxy_password</literal>,
    </para>
        <example>
          <title>Network configuration: Proxy</title>
          <screen>&lt;proxy&gt;
  &lt;enabled config:type="boolean"&gt;true&lt;/enabled&gt;
  &lt;ftp_proxy&gt;http://192.168.1.240:3128&lt;/ftp_proxy&gt;
  &lt;http_proxy&gt;http://192.168.1.240:3128&lt;/http_proxy&gt;
  &lt;no_proxy&gt;localhost&lt;/no_proxy&gt;
  &lt;proxy_password&gt;testpw&lt;/proxy_password&gt;
  &lt;proxy_user&gt;testuser&lt;/proxy_user&gt;
&lt;/proxy&gt;</screen>
        </example>
      </sect2>
      <sect2 xml:id="Configuration.Network.Inetd">
        <title>(X)Inetd</title>
        <para>
     The control file has elements to specify which superserver should be
     used (netd_service), whether it should be enabled (netd_status) and how
     the services should be configured (netd_conf).
    </para>
        <para>
     A service description element has two parts: key and non-key. When
     writing the configuration, services are matched using the key fields;
     to the matching service, non-key fields are applied. If no service
     matches, it is created. If more services match, a warning is reported.
     The key fields are <emphasis>script, service, protocol and
     server.</emphasis></para>
        <para><emphasis>service</emphasis> and <emphasis>protocol</emphasis> are
     matched literally. <emphasis>script</emphasis> is the base name of the
     configuration file: usually a file in<filename>
     /etc/xinetd.d</filename>, for example "echo-udp", or "inetd.conf". For
     compatibility with 8.2, <emphasis>server</emphasis> is matched more
     loosely: if it is <filename>/usr/sbin/tcpd</filename>, the real server
     name is taken from <emphasis>server_args</emphasis>. After that, the
     basename of the first whitespace-separated word is taken and these
     values are compared.
    </para>
        <example>
          <title>Inetd Example</title>
          <screen>&lt;profile&gt;
  &lt;inetd&gt;
    &lt;netd_service config:type="symbol"&gt;xinetd&lt;/netd_service&gt;
    &lt;netd_status config:type="integer"&gt;0&lt;/netd_status&gt;
    &lt;netd_conf config:type="list"&gt;
      &lt;conf&gt;
	&lt;script&gt;imap&lt;/script&gt;
	&lt;service&gt;pop3&lt;/service&gt;
	&lt;enabled config:type="boolean"&gt;true&lt;/enabled&gt;
      &lt;/conf&gt;
      &lt;conf&gt;
	&lt;server&gt;in.ftpd&lt;/server&gt;
	&lt;server_args&gt;-A&lt;/server_args&gt;
	&lt;enabled config:type="boolean"&gt;true&lt;/enabled&gt;
      &lt;/conf&gt;
      &lt;conf&gt;
	&lt;service&gt;daytime&lt;/service&gt;
	&lt;protocol&gt;tcp&lt;/protocol&gt;
      &lt;/conf&gt;
      &lt;conf&gt;...&lt;/conf&gt;
    &lt;/netd_conf&gt;
  &lt;/inetd&gt;
&lt;/profile&gt;</screen>
        </example>
      </sect2>
    </sect1>
    <sect1 xml:id="Configuration.Network.NIS">
      <title>NIS</title>
      <para>
    Using the <literal>nis</literal> resource, you can configure the target
    machine as a NIS client. The following example shows a detailed
    configuration using multiple domains.
   </para>
      <example>
        <title>Network configuration: NIS</title>
        <screen> &lt;nis&gt;
  &lt;nis_broadcast config:type="boolean"&gt;true&lt;/nis_broadcast&gt;
  &lt;nis_broken_server config:type="boolean"&gt;true&lt;/nis_broken_server&gt;
  &lt;nis_by_dhcp config:type="boolean"&gt;false&lt;/nis_by_dhcp&gt;
  &lt;nis_domain&gt;test.com&lt;/nis_domain&gt;
  &lt;nis_local_only config:type="boolean"&gt;true&lt;/nis_local_only&gt;
  &lt;nis_options&gt;&lt;/nis_options&gt;
  &lt;nis_other_domains config:type="list"&gt;
    &lt;nis_other_domain&gt;
      &lt;nis_broadcast config:type="boolean"&gt;false&lt;/nis_broadcast&gt;
      &lt;nis_domain&gt;domain.com&lt;/nis_domain&gt;
      &lt;nis_servers config:type="list"&gt;
        &lt;nis_server&gt;10.10.0.1&lt;/nis_server&gt;
      &lt;/nis_servers&gt;
    &lt;/nis_other_domain&gt;
  &lt;/nis_other_domains&gt;
  &lt;nis_servers config:type="list"&gt;
    &lt;nis_server&gt;192.168.1.1&lt;/nis_server&gt;
  &lt;/nis_servers&gt;
  &lt;start_autofs config:type="boolean"&gt;true&lt;/start_autofs&gt;
  &lt;start_nis config:type="boolean"&gt;true&lt;/start_nis&gt;
&lt;/nis&gt;</screen>
      </example>
    </sect1>
    <!--
    <section id="Configuration.Network.NISplus">
    <title>
    NIS+
  </title>
    <para>
    If you activate NIS+, the data of the
    NIS+ Server will be added to <filename>/etc/hosts</filename>. Keyserv and the NIS+ cache manager
    will be started and the NSS and PAM configuration will be modified to use
    NIS+ and set the Secret Key of a user.
  </para>
    &example.nisplus;
  </section>
    -->
    <sect1 xml:id="Configuration.Network.Auth">
      <title>Authentication Client</title>
      <para>
    The following is a simple example for an LDAP user authentication. NSS
    and PAM will automatically be configured accordingly. Required data are
    the name of the search base (base DN, e.g,
    <literal>dc=mydomain,dc=com</literal>) and the IP address of the LDAP
    server.
   </para>
      <example>
        <title>Network configuration: Authentication Client</title>
        <screen>&lt;auth-client&gt;
  &lt;sssd&gt;yes&lt;/sssd&gt;
  &lt;nssldap&gt;no&lt;/nssldap&gt;
  &lt;sssd_conf&gt;
    &lt;sssd&gt;
      &lt;config_file_version&gt;2&lt;/config_file_version&gt;
      &lt;services&gt;nss, pam, sudo&lt;/services&gt;
      &lt;domains&gt;EXAMPLE&lt;/domains&gt;
    &lt;/sssd&gt;
    &lt;auth_domains&gt;
      &lt;domain&gt;
        &lt;domain_name&gt;EXAMPLE&lt;/domain_name&gt;
        &lt;id_provider&gt;ldap&lt;/id_provider&gt;
        &lt;sudo_provider&gt;ldap&lt;/sudo_provider&gt;
        &lt;ldap_uri&gt;ldap://example.com&lt;/ldap_uri&gt;
        &lt;ldap_sudo_search_base&gt;ou=sudoers,dc=example,dc=com&lt;/ldap_sudo_search_base&gt;
      &lt;/domain&gt;
    &lt;/auth_domains&gt;
  &lt;/sssd_conf&gt;
&lt;/auth-client&gt;</screen>
      </example>
      <tip>
        <title>Using ldaps://</title>
        <para>
     In order to use LDAP with native SSL (rather than TLS), add the
     <literal>ldaps</literal> resource:
    </para>
        <screen>&lt;auth-client&gt;
  &lt;sssd_conf&gt;
    &lt;auth_domains&gt;
      &lt;domain&gt;
        &lt;ldaps config:type="boolean"&gt;true&lt;/ldaps&gt;
      &lt;/domain&gt;
    &lt;/auth_domains&gt;
  &lt;/sssd_conf&gt;
&lt;/auth-client&gt;</screen>
      </tip>
    </sect1>
    <sect1>
      <title>NFS Client and Server</title>
      <para>
    Configuring a system as an NFS client or an NFS server is can be done
    using the configuration system. The following examples show how both NFS
    client and server can be configured.
   </para>
      <para>
    From SUSE Linux Enterprise 12 on, the structure of NFS client configuration has changed.
    Some global configuration options were introduced:
    <literal>enable_nfs4</literal> to switch NFS4 support on/off and
    <literal>idmapd_domain</literal> to define domain name for rpc.idmapd
    (this only makes sense when NFS4 is enabled). Attention: the old
    structure is not compatible with the new one and the control files with
    an NFS section created on older releases will not work with newer
    products.
   </para>
      <example>
        <title>Network Configuration: NFS Client</title>
        <screen>&lt;nfs&gt;
  &lt;enable_nfs4 config:type="boolean"&gt;true&lt;/enable_nfs4&gt;
  &lt;idmapd_domain&gt;suse.cz&lt;/idmapd_domain&gt;
  &lt;nfs_entries config:type="list"&gt;
    &lt;nfs_entry&gt;
      &lt;mount_point&gt;/home&lt;/mount_point&gt;
      &lt;nfs_options&gt;sec=krb5i,intr,rw&lt;/nfs_options&gt;
      &lt;server_path&gt;saurus.suse.cz:/home&lt;/server_path&gt;
      &lt;vfstype&gt;nfs4&lt;/vfstype&gt;
    &lt;/nfs_entry&gt;
    &lt;nfs_entry&gt;
      &lt;mount_point&gt;/work&lt;/mount_point&gt;
      &lt;nfs_options&gt;defaults&lt;/nfs_options&gt;
      &lt;server_path&gt;bivoj.suse.cz:/work&lt;/server_path&gt;
      &lt;vfstype&gt;nfs&lt;/vfstype&gt;
    &lt;/nfs_entry&gt;
    &lt;nfs_entry&gt;
      &lt;mount_point&gt;/mnt&lt;/mount_point&gt;
      &lt;nfs_options&gt;defaults&lt;/nfs_options&gt;
      &lt;server_path&gt;fallback.suse.cz:/srv/dist&lt;/server_path&gt;
      &lt;vfstype&gt;nfs&lt;/vfstype&gt;
    &lt;/nfs_entry&gt;
  &lt;/nfs_entries&gt;
&lt;/nfs&gt;</screen>
      </example>
      <example>
        <title>Network Configuration: NFS Server</title>
        <screen>&lt;nfs_server&gt;
  &lt;nfs_exports config:type="list"&gt;
    &lt;nfs_export&gt;
      &lt;allowed config:type="list"&gt;
        &lt;allowed_clients&gt;*(ro,root_squash,sync)&lt;/allowed_clients&gt;
      &lt;/allowed&gt;
      &lt;mountpoint&gt;/home&lt;/mountpoint&gt;
    &lt;/nfs_export&gt;
    &lt;nfs_export&gt;
      &lt;allowed config:type="list"&gt;
        &lt;allowed_clients&gt;*(ro,root_squash,sync)&lt;/allowed_clients&gt;
      &lt;/allowed&gt;
      &lt;mountpoint&gt;/work&lt;/mountpoint&gt;
    &lt;/nfs_export&gt;
  &lt;/nfs_exports&gt;
  &lt;start_nfsserver config:type="boolean"&gt;true&lt;/start_nfsserver&gt;
&lt;/nfs_server&gt;</screen>
      </example>
    </sect1>
    <sect1 xml:id="Configuration.Network.Ntp">
      <title>NTP Client</title>
      <para>
    Select whether to start the NTP daemon when booting the system. The NTP
    daemon resolves host names when initializing. The first synchronization
    of the clock is performed before the NTP daemon is started. To use this
    host for initial synchronization, configure the property
    <literal>initial_sync</literal>.
   </para>
      <para>
    To run NTP daemon in chroot jail, set
    <literal>start_in_chroot</literal>. Starting any daemon in a chroot jail
    is more secure and strongly recommended. To adjust NTP servers, peers,
    local clocks, and NTP broadcasting, add the appropriate entry to the
    control file. An example of various configuration options is shown
    below.
   </para>
      <example>
        <title>Network configuration: NTP Client</title>
        <screen>&lt;ntp-client&gt;
  &lt;configure_dhcp config:type="boolean"&gt;false&lt;/configure_dhcp&gt;
  &lt;peers config:type="list"&gt;
    &lt;peer&gt;
      &lt;address&gt;ntp.example.com&lt;/address&gt;
      &lt;initial_sync config:type="boolean"&gt;true&lt;/initial_sync&gt;
      &lt;options&gt;&lt;/options&gt;
      &lt;type&gt;server&lt;/type&gt;
    &lt;/peer&gt;
  &lt;/peers&gt;
  &lt;start_at_boot config:type="boolean"&gt;true&lt;/start_at_boot&gt;
  &lt;start_in_chroot config:type="boolean"&gt;true&lt;/start_in_chroot&gt;
&lt;/ntp-client&gt;</screen>
      </example>
    </sect1>
    <sect1 xml:id="Configuration.Network.Sendmail">
      <title>Mail Configuration</title>
      <para>
    For the mail configuration of the client, this module lets you create a
    detailed mail configuration. The module contains various options. We
    recommended you use it at least for the initial configuration.
   </para>
      <example>
        <title>Mail Configuration</title>
        <screen>&lt;mail&gt;
  &lt;aliases config:type="list"&gt;
    &lt;alias&gt;
      &lt;alias&gt;root&lt;/alias&gt;
      &lt;comment&gt;&lt;/comment&gt;
      &lt;destinations&gt;foo&lt;/destinations&gt;
    &lt;/alias&gt;
    &lt;alias&gt;
      &lt;alias&gt;test&lt;/alias&gt;
      &lt;comment&gt;&lt;/comment&gt;
      &lt;destinations&gt;foo&lt;/destinations&gt;
    &lt;/alias&gt;
  &lt;/aliases&gt;
  &lt;connection_type config:type="symbol"&gt;permanent&lt;/connection_type&gt;
  &lt;fetchmail config:type="list"&gt;
    &lt;fetchmail_entry&gt;
      &lt;local_user&gt;foo&lt;/local_user&gt;
      &lt;password&gt;bar&lt;/password&gt;
      &lt;protocol&gt;POP3&lt;/protocol&gt;
      &lt;remote_user&gt;foo&lt;/remote_user&gt;
      &lt;server&gt;pop.foo.com&lt;/server&gt;
    &lt;/fetchmail_entry&gt;
    &lt;fetchmail_entry&gt;
      &lt;local_user&gt;test&lt;/local_user&gt;
      &lt;password&gt;bar&lt;/password&gt;
      &lt;protocol&gt;IMAP&lt;/protocol&gt;
      &lt;remote_user&gt;test&lt;/remote_user&gt;
      &lt;server&gt;blah.com&lt;/server&gt;
    &lt;/fetchmail_entry&gt;
  &lt;/fetchmail&gt;
  &lt;from_header&gt;test.com&lt;/from_header&gt;
  &lt;listen_remote config:type="boolean"&gt;true&lt;/listen_remote&gt;
  &lt;local_domains config:type="list"&gt;
    &lt;domains&gt;test1.com&lt;/domains&gt;
  &lt;/local_domains&gt;
  &lt;masquerade_other_domains config:type="list"&gt;
      &lt;domain&gt;blah.com&lt;/domain&gt;
  &lt;/masquerade_other_domains&gt;
  &lt;masquerade_users config:type="list"&gt;
    &lt;masquerade_user&gt;
      &lt;address&gt;joe@test.com&lt;/address&gt;
      &lt;comment&gt;&lt;/comment&gt;
      &lt;user&gt;joeuser&lt;/user&gt;
    &lt;/masquerade_user&gt;
    &lt;masquerade_user&gt;
      &lt;address&gt;bar@test.com&lt;/address&gt;
      &lt;comment&gt;&lt;/comment&gt;
      &lt;user&gt;foo&lt;/user&gt;
    &lt;/masquerade_user&gt;
  &lt;/masquerade_users&gt;
  &lt;mta config:type="symbol"&gt;postfix&lt;/mta&gt;
  &lt;outgoing_mail_server&gt;test.com&lt;/outgoing_mail_server&gt;
  &lt;postfix_mda config:type="symbol"&gt;local&lt;/postfix_mda&gt;
  &lt;smtp_auth config:type="list"&gt;
    &lt;listentry&gt;
      &lt;password&gt;bar&lt;/password&gt;
      &lt;server&gt;test.com&lt;/server&gt;
      &lt;user&gt;foo&lt;/user&gt;
    &lt;/listentry&gt;
  &lt;/smtp_auth&gt;
  &lt;use_amavis config:type="boolean"&gt;true&lt;/use_amavis&gt;
  &lt;virtual_users config:type="list"&gt;
    &lt;virtual_user&gt;
      &lt;alias&gt;test.com&lt;/alias&gt;
      &lt;comment&gt;&lt;/comment&gt;
      &lt;destinations&gt;foo.com&lt;/destinations&gt;
    &lt;/virtual_user&gt;
    &lt;virtual_user&gt;
      &lt;alias&gt;geek.com&lt;/alias&gt;
      &lt;comment&gt;&lt;/comment&gt;
      &lt;destinations&gt;bar.com&lt;/destinations&gt;
    &lt;/virtual_user&gt;
  &lt;/virtual_users&gt;
&lt;/mail&gt;</screen>
      </example>
    </sect1>
    <sect1 xml:id="CreateProfile.Security">
      <title>Security Settings</title>
      <para>
    Using the features of this module, you will be able to change the local
    security settings on the target system. The local security settings
    include the boot configuration, login settings, password settings, user
    addition settings, and file permissions.
   </para>
      <para>
    Configuring the security settings automatically corresponds to the
    <literal>Custom Settings</literal> in the security module available in
    the running system which lets you create your own, customized
    configuration.
   </para>
      <example>
        <title>Security configuration</title>
        <para>
     See the reference for the meaning and the possible values of the
     settings in the following example.
    </para>
        <screen>&lt;security&gt;
  &lt;console_shutdown&gt;ignore&lt;/console_shutdown&gt;
  &lt;cwd_in_root_path&gt;no&lt;/cwd_in_root_path&gt;
  &lt;displaymanager_remote_access&gt;no&lt;/displaymanager_remote_access&gt;
  &lt;fail_delay&gt;3&lt;/fail_delay&gt;
  &lt;faillog_enab&gt;yes&lt;/faillog_enab&gt;
  &lt;gid_max&gt;60000&lt;/gid_max&gt;
  &lt;gid_min&gt;101&lt;/gid_min&gt;
  &lt;gdm_shutdown&gt;root&lt;/gdm_shutdown&gt;
  &lt;lastlog_enab&gt;yes&lt;/lastlog_enab&gt;
  &lt;encryption&gt;md5&lt;/encryption&gt;
  &lt;obscure_checks_enab&gt;no&lt;/obscure_checks_enab&gt;
  &lt;pass_max_days&gt;99999&lt;/pass_max_days&gt;
  &lt;pass_max_len&gt;8&lt;/pass_max_len&gt;
  &lt;pass_min_days&gt;1&lt;/pass_min_days&gt;
  &lt;pass_min_len&gt;6&lt;/pass_min_len&gt;
  &lt;pass_warn_age&gt;14&lt;/pass_warn_age&gt;
  &lt;passwd_use_cracklib&gt;yes&lt;/passwd_use_cracklib&gt;
  &lt;permission_security&gt;secure&lt;/permission_security&gt;
  &lt;run_updatedb_as&gt;nobody&lt;/run_updatedb_as&gt;
  &lt;uid_max&gt;60000&lt;/uid_max&gt;
  &lt;uid_min&gt;500&lt;/uid_min&gt;
&lt;/security&gt;</screen>
      </example>
      <sect2>
        <title>Password Settings Options</title>
        <para>
     Change various password settings. These settings are mainly stored in
     the <filename>/etc/login.defs</filename> file.
    </para>
        <para>
     Use this resource to activate one of the encryption methods currently
     supported. If not set, <literal>DES</literal> is configured.
    </para>
        <para><literal>DES</literal>, the Linux default method, works in all network
     environments, but it restricts you to passwords no longer than eight
     characters. <literal>MD5</literal> allows longer passwords, thus
     provides more security, but some network protocols don't support this,
     and you may have problems with NIS. <literal>Blowfish</literal> is also
     supported.
    </para>
        <para>
     Additionally, you can setup the system to check for password
     plausibility and length etc.
    </para>
      </sect2>
      <sect2>
        <title>Boot Settings</title>
        <para>
     Use the security resource, to change various boot settings.
    </para>
        <variablelist>
          <varlistentry>
            <term>
       How to interpret <keycombo><keycap function="control"/><keycap function="alt"/><keycap function="delete"/></keycombo>?
      </term>
            <listitem>
              <para>
        When someone at the console has pressed the
        <keycombo><keycap function="control"/><keycap function="alt"/><keycap function="delete"/></keycombo> key combination, the system
        usually reboots. Sometimes it is desirable to ignore this event, for
        example, when the system serves as both workstation and server.
       </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Shutdown behavior of GDM</term>
            <listitem>
              <para>
        Configure a list of users allowed to shut down the machine from GDM.
       </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </sect2>
      <sect2>
        <title>Login Settings</title>
        <para>
     Change various login settings. These settings are mainly stored in the
     <filename>/etc/login.defs</filename> file.
    </para>
      </sect2>
      <sect2>
        <title>New user settings (<command>useradd</command> settings)</title>
        <para>
     Set the minimum and maximum possible user and group ID
    </para>
      </sect2>
    </sect1>
    <sect1 xml:id="Configuration.Security.users">
      <title>Users</title>
      <para>
    The <systemitem class="username">root</systemitem> and at least one normal user can be added during install
    using data supplied in the control file. User data and passwords
    (encrypted or in clear text) are part of the
    <literal>configure</literal> resource in the control file.
   </para>
      <para>
    At least the <systemitem class="username">root</systemitem> should be configured during auto-installation so
    you can login after the installation is finished. It will also ensure
    nobody else can login to the system (in case the password is not set).
   </para>
      <para>
    The two users in the following example are added during system
    configuration.
   </para>
      <example>
        <title>User Configuration</title>
        <screen>&lt;users config:type="list"&gt;
  &lt;user&gt;
    &lt;username&gt;root&lt;/username&gt;
    &lt;user_password&gt;password&lt;/user_password&gt;
    &lt;encrypted config:type="boolean"&gt;true&lt;/encrypted&gt;
    &lt;forename/&gt;
    &lt;surname/&gt;
  &lt;/user&gt;
  &lt;user&gt;
    &lt;username&gt;tux&lt;/username&gt;
    &lt;user_password&gt;password&lt;/user_password&gt;
    &lt;encrypted config:type="boolean"&gt;true&lt;/encrypted&gt;
    &lt;forename&gt;Tux&lt;/forename&gt;
    &lt;surname&gt;Linux&lt;/surname&gt;	  	
  &lt;/user&gt;
&lt;/users&gt;</screen>
      </example>
      <para>
    The last example shows the minimal information required for adding
    users. Additional options are available for a more customized user
    account management. The data in
    <filename>/etc/default/useradd</filename> is used to determine the home
    directory of the user to be created as well as other parameters.
   </para>
    </sect1>
    <sect1 xml:id="createprofile.scripts">
      <title>Custom User Scripts</title>
      <para>
    By adding scripts to the auto-installation process you can customize the
    installation according to your needs and take control in different
    stages of the installation.
   </para>
      <para>
    In the auto-installation process, five types of scripts can be executed
    at different points in time during the installation:
   </para>
      <para>
    All scripts have to be in the &lt;scritps&gt; section.
   </para>
      <itemizedlist>
        <listitem>
          <para><literal>pre-scripts</literal> (very early, before anything else
      really happens)
     </para>
        </listitem>
        <listitem>
          <para><literal>postpartitioning-scripts</literal> (after partitioning and
      mounting to <filename>/mnt</filename> but before RPM installation)
     </para>
        </listitem>
        <listitem>
          <para><literal>chroot-scripts</literal> (after the package installation,
      before the first boot)
     </para>
        </listitem>
        <listitem>
          <para><literal>post-scripts</literal> (during the first boot of the
      installed system, no services running)
     </para>
        </listitem>
        <listitem>
          <para><literal>init-scripts</literal> (during the first boot of the
      installed system, all services up and running)
     </para>
        </listitem>
      </itemizedlist>
      <sect2 xml:id="pre-install.scripts">
        <title>Pre-Install Scripts</title>
        <para>
     Executed before YaST does any real change to the system (before
     partitioning and package installation but after the hardware
     detection).
    </para>
        <para>
     You can use a pre-script to modify your control file and let AutoYaST
     reread it. Find your control file in
     <filename>/tmp/profile/autoinst.xml</filename>. Adjust the file and
     store the modified version in
     <filename>/tmp/profile/modified.xml</filename>. AutoYaST will read the
     modified file after the pre-script finishes.
    </para>
        <para>
     It is also possible to change the partitioning in your pre-script.
    </para>
        <note>
          <title>Pre-Install Scripts with Confirmation</title>
          <para>
      Pre-scripts are executed at an early stage of the installation. This
      means if you have requested to confirm the installation, the
      pre-scripts will be executed before the confirmation screen shows up
      (<literal>profile/install/general/mode/confirm</literal>).
     </para>
        </note>
        <para>
     Pre-Install Script elements must be placed as follows:
    </para>
        <screen>&lt;scripts&gt;
  &lt;pre-scripts config:type="list"&gt;
    &lt;script&gt;
      ...
    &lt;/script&gt;
  &lt;/pre-scripts&gt;
&lt;/scripts&gt;</screen>
      </sect2>
      <sect2 xml:id="postpartitioning-install.scripts">
        <title>Postpartitioning Scripts</title>
        <para>
     Executed after YaST has done the partitioning and written the fstab.
     The empty system is already mounted to <filename>/mnt</filename>.
    </para>
        <para>
     Postpartitioning script elements must be placed as follows:
    </para>
        <screen>&lt;scripts&gt;
  &lt;postpartitioning-scripts config:type="list"&gt;
    &lt;script&gt;
      ...
    &lt;/script&gt;
  &lt;/postpartitioning-scripts&gt;
&lt;/scripts&gt;</screen>
      </sect2>
      <sect2 xml:id="chroot.scripts">
        <title>Chroot Environment Scripts</title>
        <para>
     Chroot scripts are executed before the machine reboots for the first
     time. You can execute chroot scripts before the installation chroots
     into the installed system and configures the boot loader or you can
     execute a script after the chroot into the installed system has
     happened (look at the <literal>chrooted</literal> parameter for that).
    </para>
        <para>
     Chroot Environment script elements must be placed as follows:
    </para>
        <screen>&lt;scripts&gt;
  &lt;chroot-scripts config:type="list"&gt;
    &lt;script&gt;
      ...
    &lt;/script&gt;
  &lt;/chroot-scripts&gt;
&lt;/scripts&gt;</screen>
      </sect2>
      <sect2 xml:id="post-install.scripts">
        <title>Post-Install Scripts</title>
        <para>
     These scripts are executed after AutoYaST has completed the system
     configuration and after it has booted the system for the first time.
    </para>
        <para>
     It is possible to execute post scripts in an earlier phase while the
     installation network is still up and before AutoYaST configures the system.
     To run network-enabled post scripts, the boolean property
     <literal>network_needed</literal> has to be set to
     <literal>true</literal>.
    </para>
        <para>
     Post-install script elements must be placed as follows:
    </para>
        <screen>&lt;scripts&gt;
    &lt;post-scripts config:type="list"&gt;
      &lt;script&gt;
        ...
      &lt;/script&gt;
    &lt;/post-scripts&gt;
  &lt;/scripts&gt;</screen>
      </sect2>
      <!--taroth 2014-03-07: commentining due to systemd, this section might need
    complete rewrite-->
      <!--<sect2 id="init.scripts">
    <title>Init Scripts</title>
    <para>
     These scripts are executed when &yast; has finished, during the initial
     boot process after the network has been initialized. These final
     scripts are executed using a special <emphasis>init.d</emphasis> script
     executed only once.
    </para>
    <para>
     Init scripts are configured using the tag
     <emphasis>init-scripts</emphasis> and are run using the special purpose
     <emphasis>init.d</emphasis> script
     <filename>/etc/init.d/autoyast</filename>.
    </para>
    <para>
     The following elements must be between the
     &lt;scripts&gt;&lt;init-scripts config:type="list"&gt;&lt;script&gt;
     ... &lt;/script&gt;&lt;/init-scripts&gt;...&lt;/scripts&gt; tags
    </para>
    <table>
     <title>Init script XML representation</title>
     <tgroup cols="3">
      <thead>
       <row>
        <entry>
         <para>
          Element
         </para>
        </entry>
        <entry>
         <para>
          Description
         </para>
        </entry>
        <entry>
         <para>
          Comment
         </para>
        </entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>
         <para>
          location
         </para>
        </entry>
        <entry>
         <para>
          Define a location from where the script gets fetched. Locations
          can be the same as for the profile (http, ftp, nfs, etc.).
         </para>
<screen>&lt;location
&gt;http://10.10.0.1/myInitScript.sh&lt;/location&gt;</screen>
        </entry>
        <entry>
         <para>
          Either &lt;location&gt; or &lt;source&gt; must be defined.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          source
         </para>
        </entry>
        <entry>
         <para>
          The script itself (source code), encapsulated in a CDATA tag. If
          you do not want to put the whole shell script into the XML
          profile, use the location parameter.
         </para>
<screen>&lt;source&gt;
&lt;![CDATA[ 
echo "Testing the init script" &gt;
/tmp/init_out.txt 
]]&gt;
&lt;/source&gt;</screen>
        </entry>
        <entry>
         <para>
          Either &lt;location&gt; or &lt;source&gt; must be defined.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          filename
         </para>
        </entry>
        <entry>
         <para>
          The filename of the script. It will be stored in a temporary
          directory under /tmp/...
         </para>
<screen>&lt;filename&gt;mynitScript5.sh&lt;/filename&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional, default is the type of the script (init-scripts in this
          case). If you have more than one script, set the filename to a
          reasonable value.
          <remark>emap 2011-11-06: Should this read: If you have more than one script, choose a reasonable filename? Or: select the correct file?</remark>
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          rerun
         </para>
        </entry>
        <entry>
         <para>
          A script is only run once. Even if you use ayast_setup to run a
          XML file multiple times, the script is only run once. Change this
          default behavior by setting this boolean to <literal>true</literal>.
         </para>
<screen>&lt;rerun config:type="boolean"&gt;true&lt;/rerun&gt;</screen>
        </entry>
        <entry>
         <para>
          Optional, default is <literal>false</literal> (scripts only run once).
         </para>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
    <para>
     When added to the control file manually, scripts have to be included in
     a <emphasis>CDATA</emphasis> element to avoid confusion with the file
     syntax and other tags defined in the control file.
    </para>
   </sect2>-->
      <sect2 xml:id="scripts.syntax">
        <title>Script XML Representation</title>
        <para>
     All XML elements described below can be used for each of the script
     types described above. The only exceptions are
     <literal>chrooted</literal> and
     <literal>network_needed</literal>—they are only valid for chroot
     and post-install srcipts.
    </para>
        <table>
          <title>Script XML Representation</title>
          <tgroup cols="3">
            <colspec colwidth="1*"/>
            <colspec colwidth="3*"/>
            <colspec colwidth="2*"/>
            <thead>
              <row>
                <entry>
                  <para>
          Element
         </para>
                </entry>
                <entry>
                  <para>
          Description
         </para>
                </entry>
                <entry>
                  <para>
          Comment
         </para>
                </entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>
                  <para>
          location
         </para>
                </entry>
                <entry>
                  <para>
          Define a location from where the script gets fetched. Locations
          can be the same as for the control file (HTTP, FTP, NFS, etc.).
         </para>
                  <screen>&lt;location
&gt;http://10.10.0.1/myPreScript.sh&lt;/location&gt;</screen>
                </entry>
                <entry>
                  <para>
          Either <literal>location</literal> or <literal>source</literal>
          must be defined.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          source
         </para>
                </entry>
                <entry>
                  <para>
          The script itself (source code), encapsulated in a CDATA tag. If
          you do not want to put the whole shell script into the XML control
          file, refer to the location parameter.
         </para>
                  <screen>&lt;source&gt;
&lt;![CDATA[ 
echo "Testing the pre script" &gt; /tmp/pre-script_out.txt 
]]&gt;
&lt;/source&gt;</screen>
                </entry>
                <entry>
                  <para>
          Either <literal>location</literal> or <literal>source</literal>
          must be defined.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          interpreter
         </para>
                </entry>
                <entry>
                  <para>
          Specify the interpreter that must be used for the script.
          Supported options are shell and perl.
         </para>
                  <screen>&lt;interpreter&gt;perl&lt;/interpreter&gt;</screen>
                </entry>
                <entry>
                  <para>
          Optional (default is <literal>shell</literal>).
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          filename
         </para>
                </entry>
                <entry>
                  <para>
          The filename of the script. It will be stored in a temporary
          directory under <filename>/tmp</filename>.
         </para>
                  <screen>&lt;filename&gt;myPreScript5.sh&lt;/filename&gt;</screen>
                </entry>
                <entry>
                  <para>
          Optional. Default is the type of the script (pre-scripts in this
          case). If you have more than one script, you should define
          different names for each script.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          feedback
         </para>
                </entry>
                <entry>
                  <para>
          If this boolean is <literal>true</literal>, output and error
          messages of the script (STDOUT and STDERR) will be shown in a
          pop-up, which the user has to confirm via the OK button. the
          pop-up will only be shown if the script produces any such output.
         </para>
                  <screen>&lt;feedback config:type="boolean"&gt;true&lt;/feedback&gt;</screen>
                </entry>
                <entry>
                  <para>
          Optional, default is <literal>false</literal>.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          feedback_type
         </para>
                </entry>
                <entry>
                  <para>
          This can be <literal>message</literal>, <literal>warning</literal>
          or <literal>error</literal>. Set the timeout for these pop-ups in
          the &lt;report&gt; section.
         </para>
                  <screen>&lt;feedback_type&gt;warning&lt;/feedback_type&gt;</screen>
                </entry>
                <entry>
                  <para>
          Optional, if missing, an always blocking pop-up is used.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          debug
         </para>
                </entry>
                <entry>
                  <para>
          If this is <literal>true</literal>, every single line of a shell
          script is logged. Perl scripts are run with warnings turned on.
         </para>
                  <screen>&lt;debug config:type="boolean"&gt;true&lt;/debug&gt;</screen>
                </entry>
                <entry>
                  <para>
          Optional, default is <literal>true</literal>.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          notification
         </para>
                </entry>
                <entry>
                  <para>
          This text will be shown in a pop-up for the time the script is
          running in the background.
         </para>
                  <screen>&lt;notification&gt;Please wait while script is running...&lt;/notification&gt;</screen>
                </entry>
                <entry>
                  <para>
          Optional, if not configured, no notification pop-up will be shown.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          param-list
         </para>
                </entry>
                <entry>
                  <para>
          It is possible to specifiy parameters given to the script being
          called. You may have more than one <literal>param</literal> entry.
          They are concatenated by a single space chracter on the script
          command line. If any shell quoting should be necessary (e.g. to
          protect embedded spaces) you need to include this.
         </para>
                  <screen>&lt;param-list&gt;
  &lt;param&gt;par1&lt;/param&gt;
  &lt;param&gt;par2 par3&lt;/param&gt;
  &lt;param&gt;"par4.1 par4.2"&lt;/param&gt;
&lt;/param-list&gt;</screen>
                </entry>
                <entry>
                  <para>
          Optional, if not configured, no parameters get passed to script.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          rerun
         </para>
                </entry>
                <entry>
                  <para>
          A script is only run once. Even if you use
          <literal>ayast</literal>_setup to run a XML file multiple times,
          the script is only run once. Change this default behavior by
          setting this boolean to <literal>true</literal>.
         </para>
                  <screen>&lt;rerun config:type="boolean"&gt;true&lt;/rerun&gt;</screen>
                </entry>
                <entry>
                  <para>
          Optional, default is <literal>false</literal> (scripts only run
          once).
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          chrooted
         </para>
                </entry>
                <entry>
                  <para>
          If set to <literal>false</literal>, the installed system remains
          mounted at <filename>/mnt</filename> and no chroot happens. The
          bootloader is not installed either at this stage. Setting it to
          <literal>true</literal> means, a chroot into
          <filename>/mnt</filename> is performed, where the installed system
          is mounted. The bootloader is installed, and if you want to change
          anything in the installed system, you don't have to use the
          <filename>/mnt</filename> prefix anymore.
         </para>
                  <screen>&lt;chrooted config:type="boolean"
&gt;true&lt;/chrooted&gt;</screen>
                </entry>
                <entry>
                  <para>
          Optional, default is <literal>false</literal>. This option is only
          available for chroot environment scripts.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          network_needed
         </para>
                </entry>
                <!-- FIXME: double check that. I'm very unsure if this is correct -->
                <entry>
                  <para>
          If set to <literal>false</literal> the script will run after the
          YaST modules like the user configuration and everything else are
          done. The network is configured but not up and running yet. With
          this value set to <literal>true</literal>, the script runs before
          all YaST modules are configured. So there is no local user and
          no network is configured but the installation network is still up
          and running (if you did a network installation)..
         </para>
                  <screen>&lt;network_needed config:type="boolean"
&gt;true&lt;/network_needed&gt;</screen>
                </entry>
                <entry>
                  <para>
          Optional, default is <literal>false</literal>. This option is only
          available for post-install scripts.
         </para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </sect2>
      <sect2 xml:id="script_examples">
        <title>Script Example</title>
        <example>
          <title>Script Configuration</title>
          <screen>&lt;?xml version="1.0"?&gt;
&lt;!DOCTYPE profile&gt;
&lt;profile xmlns="http://www.suse.com/1.0/yast2ns" xmlns:config="http://www.suse.com/1.0/configns"&gt;
&lt;scripts&gt;
  &lt;chroot-scripts config:type="list"&gt;
    &lt;script&gt;
      &lt;chrooted config:type="boolean"&gt;true&lt;/chrooted&gt;
      &lt;filename&gt;chroot.sh&lt;/filename&gt;
      &lt;interpreter&gt;shell&lt;/interpreter&gt;
      &lt;source&gt;&lt;![CDATA[
#!/bin/sh
echo "Testing chroot (chrooted) scripts"
ls
]]&gt;                    
      &lt;/source&gt;
    &lt;/script&gt;
    &lt;script&gt;
      &lt;filename&gt;chroot.sh&lt;/filename&gt;
        &lt;interpreter&gt;shell&lt;/interpreter&gt;
        &lt;source&gt;&lt;![CDATA[
#!/bin/sh
echo "Testing chroot scripts"
df
cd /mnt
ls
]]&gt;                    
        &lt;/source&gt;
      &lt;/script&gt;
    &lt;/chroot-scripts&gt;
    &lt;post-scripts config:type="list"&gt;
      &lt;script&gt;
        &lt;filename&gt;post.sh&lt;/filename&gt;
        &lt;interpreter&gt;shell&lt;/interpreter&gt;
        &lt;source&gt;&lt;![CDATA[
#!/bin/sh

echo "Running Post-install script"
systemctl start portmap.service
mount -a 192.168.1.1:/local /mnt
cp /mnt/test.sh /tmp
umount /mnt
]]&gt;
        &lt;/source&gt;
      &lt;/script&gt;
      &lt;script&gt;
        &lt;filename&gt;post.pl&lt;/filename&gt;
        &lt;interpreter&gt;perl&lt;/interpreter&gt;
        &lt;source&gt;&lt;![CDATA[
#!/usr/bin/perl
print "Running Post-install script";

]]&gt;
        &lt;/source&gt;
      &lt;/script&gt;
    &lt;/post-scripts&gt;
    &lt;pre-scripts config:type="list"&gt;
      &lt;script&gt;
        &lt;interpreter&gt;shell&lt;/interpreter&gt;
        &lt;location&gt;http://192.168.1.1/profiles/scripts/prescripts.sh&lt;/location&gt;
      &lt;/script&gt;
      &lt;script&gt;
        &lt;filename&gt;pre.sh&lt;/filename&gt;
        &lt;interpreter&gt;shell&lt;/interpreter&gt;
        &lt;source&gt;&lt;![CDATA[
#!/bin/sh
echo "Running pre-install script"
]]&gt;
        &lt;/source&gt;
      &lt;/script&gt;
    &lt;/pre-scripts&gt;
    &lt;postpartitioning-scripts config:type="list"&gt;
      &lt;script&gt;
        &lt;filename&gt;postpart.sh&lt;/filename&gt;
        &lt;interpreter&gt;shell&lt;/interpreter&gt;
        &lt;debug config:type="boolean"&gt;false&lt;/debug&gt;
        &lt;feedback config:type="boolean"&gt;true&lt;/feedback&gt;
        &lt;source&gt;&lt;![CDATA[
touch /mnt/testfile
echo Hi
]]&gt;
        &lt;/source&gt;
      &lt;/script&gt;
    &lt;/postpartitioning-scripts&gt;
  &lt;/scripts&gt;
&lt;/profile&gt;</screen>
        </example>
        <para>
     After installation is finished, the scripts and the output logs can be
     found in the directory <filename>/var/adm/autoinstall</filename>. The
     scripts are located in the subdirectory <filename>scripts</filename>
     and the output logs in the <filename>log</filename> directory.
    </para>
        <para>
     The log consists of the output produced when executing the shell
     scripts using the following command:
    </para>
        <screen>/bin/sh -x <replaceable>SCRIPT_NAME</replaceable> 2&amp;&gt;/var/adm/autoinstall/logs/<replaceable>SCRIPT_NAME</replaceable>.log</screen>
      </sect2>
    </sect1>
    <sect1 xml:id="createprofile.sysconfig">
      <title>System Variables (Sysconfig)</title>
      <para>
    Using the sysconfig resource, it is possible to define configuration
    variables in the sysconfig repository
    (<filename>/etc/sysconfig</filename>) directly. Sysconfig variables,
    offer the possibility to fine-tune many system components and
    environment variables exactly to your needs.
   </para>
      <para>
    The following example shows how a variable can be set using the
    sysconfig resource.
   </para>
      <example>
        <title>Sysconfig Configuration</title>
        <screen>&lt;sysconfig config:type="list" &gt;
  &lt;sysconfig_entry&gt;
    &lt;sysconfig_key&gt;XNTPD_INITIAL_NTPDATE&lt;/sysconfig_key&gt;
    &lt;sysconfig_path&gt;/etc/sysconfig/xntp&lt;/sysconfig_path&gt;
    &lt;sysconfig_value&gt;ntp.host.com&lt;/sysconfig_value&gt;
  &lt;/sysconfig_entry&gt;
  &lt;sysconfig_entry&gt;
    &lt;sysconfig_key&gt;HTTP_PROXY&lt;/sysconfig_key&gt;
    &lt;sysconfig_path&gt;/etc/sysconfig/proxy&lt;/sysconfig_path&gt;
    &lt;sysconfig_value&gt;proxy.host.com:3128&lt;/sysconfig_value&gt;
  &lt;/sysconfig_entry&gt;
  &lt;sysconfig_entry&gt;
    &lt;sysconfig_key&gt;FTP_PROXY&lt;/sysconfig_key&gt;
    &lt;sysconfig_path&gt;/etc/sysconfig/proxy&lt;/sysconfig_path&gt;
    &lt;sysconfig_value&gt;proxy.host.com:3128&lt;/sysconfig_value&gt;
  &lt;/sysconfig_entry&gt;
&lt;/sysconfig&gt;</screen>
        <para>
     Both relative and absolute paths can be provided. If no absolute path
     is given, it is treated as a sysconfig file under the
     <filename>/etc/sysconfig</filename> directory.
    </para>
      </example>
    </sect1>
    <sect1 xml:id="createprofile.completeconf">
      <title>Adding Complete Configurations</title>
      <para>
    For many applications and services you might have prepared a
    configuration file which should be copied to the appropriate location in
    the installed system, for example if you are installing a Web server and
    have a <literal>ready to go</literal> server configuration file
    (<filename>httpd.conf</filename>).
   </para>
      <para>
    Using this resource, you can embed the file into the control file by
    specifying the final path on the installed system. YaST will copy this
    file to the specified location.
   </para>
      <para>
    This feature requires the autoyast2 package to be installed. If the
    package is missing, AutoYaST will automatically install the package if it is
    missing.
   </para>
      <para>
    You can specify the <literal>file_location</literal> where the file
    should be retrieved from. This can also be a location on the newtork
    such as an HTTP server:
    <literal>&lt;file_location&gt;http://my.server.site/issue&lt;/file_location&gt;</literal>.
   </para>
      <para>
    You can create directories by specifying a <literal>file_path</literal>
    that ends with a slash.
   </para>
      <example>
        <title>Dumping files into the installed system</title>
        <screen>&lt;files config:type="list"&gt;
  &lt;file&gt;
    &lt;file_path&gt;/etc/apache2/httpd.conf&lt;/file_path&gt;
    &lt;file_contents&gt;

&lt;![CDATA[
some content
]]&gt;

    &lt;/file_contents&gt;
  &lt;/file&gt;
  &lt;file&gt;
    &lt;file_path&gt;/mydir/a/b/c/&lt;/file_path&gt; &lt;!-- create directory --&gt;
  &lt;/file&gt;
&lt;/files&gt;</screen>
      </example>
      <para>
    A more advanced example is shown below. This configuration will create a
    file using the content supplied in <literal>file_contents</literal> and
    change the permissions and ownership of the file. After the file has
    been copied to the system, a script is executed, which can be used to
    manipulate the file and prepare it for the environment of the client.
   </para>
      <example>
        <title>Dumping files into the installed system</title>
        <screen>&lt;files config:type="list"&gt;
  &lt;file&gt;
    &lt;file_path&gt;/etc/someconf.conf&lt;/file_path&gt;
    &lt;file_contents&gt;

&lt;![CDATA[
some content
]]&gt;

    &lt;/file_contents&gt;
    &lt;file_owner&gt;tux.users&lt;/file_owner&gt;
    &lt;file_permissions&gt;444&lt;/file_permissions&gt;
    &lt;file_script&gt;
      &lt;interpreter&gt;shell&lt;/interpreter&gt;
      &lt;source&gt;

&lt;![CDATA[
#!/bin/sh

echo "Testing file scripts" &gt;&gt; /etc/someconf.conf
df
cd /mnt
ls
]]&gt;

      &lt;/source&gt;
    &lt;/file_script&gt;
  &lt;/file&gt;
&lt;/files&gt;</screen>
      </example>
    </sect1>
    <sect1 xml:id="CreateProfile.Ask">
      <title>Ask the User for Values during Installation</title>
      <para>
    You have the option to let the user decide the values of specific parts
    of the control file during the installation. If you use this feature, a
    pop-up will ask the user to enter a specific part of the control file
    during installation. If you want a full auto installation, but the user
    should set the password of the local account, you can do this via the
    <literal>ask</literal> directive in the control file.
   </para>
      <para>
    The elements listed below must be placed within the following XML
    structure:
   </para>
      <screen>&lt;general&gt;
  &lt;ask-list config:type="list"&gt;
    &lt;ask&gt;
      ...
    &lt;/ask&gt;
  &lt;/ask-list&gt; tags
&lt;/general&gt;</screen>
      <table>
        <title>Ask the User for Values: XML representation</title>
        <tgroup cols="3">
          <thead>
            <row>
              <entry>
                <para>
         Element
        </para>
              </entry>
              <entry>
                <para>
         Description
        </para>
              </entry>
              <entry>
                <para>
         Comment
        </para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
                <para>
         question
        </para>
              </entry>
              <entry>
                <para>
         The question you want to ask the user.
        </para>
                <screen>&lt;question&gt;Enter the LDAP server&lt;/question&gt;</screen>
              </entry>
              <entry>
                <para>
         The default value is the path to the element (the path often looks
         strange, so we recommend entering a question).
        </para>
                <remark>emap 2011-11-04: not sure I understand this.</remark>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         default
        </para>
              </entry>
              <entry>
                <para>
         Set a pre-selection for the user. A text entry will be filled out
         with this value. A checkbox will be true or false and a selection
         will have the given value pre-selected.
        </para>
                <screen>&lt;default&gt;dc=suse,dc=de&lt;/default&gt;</screen>
              </entry>
              <entry>
                <para>
         Optional.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         help
        </para>
              </entry>
              <entry>
                <para>
         An optional helptext that is shown on the left side of the
         question.
        </para>
                <screen>&lt;help&gt;Enter the LDAP server address.&lt;/help&gt;</screen>
              </entry>
              <entry>
                <para>
         Optional.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         title
        </para>
              </entry>
              <entry>
                <para>
         An optional title that is shown above the questions.
        </para>
                <screen>&lt;title&gt;LDAP server&lt;/title&gt;</screen>
              </entry>
              <entry>
                <para>
         Optional.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         type
        </para>
              </entry>
              <entry>
                <para>
         The type of the element you want to change. Possible values are
         <literal>symbol</literal>, <literal>boolean</literal>,
         <literal>string</literal> and <literal>integer</literal>. The
         filesystem in the partition section is a symbol, while the
         <literal>encrypted</literal> element in the user configuration is a
         boolean. You can see the type of that element if you look in your
         control file at the <literal>config:type="...."</literal>
         attribute. You can also use <literal>static_text</literal> as type.
         A <literal>static_text</literal> is just a text that does not
         require any user input and can be used to show information if it's
         not wanted in the help text.
        </para>
                <screen>&lt;type&gt;symbol&lt;/type&gt;</screen>
              </entry>
              <entry>
                <para>
         Optional. The default is <literal>string</literal>. If type is
         <literal>symbol</literal>, you must provide the selection element
         too (see below).
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         password
        </para>
              </entry>
              <entry>
                <para>
         If this boolean is set to <literal>true</literal>, a password
         dialog pops up instead of a simple text entry. Setting this to
         <literal>true</literal> only makes sense if <literal>type</literal>
         is string.
        </para>
                <screen>&lt;password config:type="boolean"&gt;true&lt;/password&gt;</screen>
              </entry>
              <entry>
                <para>
         Optional. The default is <literal>false</literal>.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         pathlist
        </para>
              </entry>
              <entry>
                <para>
         A list of <literal>path</literal> elements. A path is a comma
         separated list of elements that describes the path to the element
         you want to change. For example, the ldap server element can be
         found in the control file in the &lt;ldap&gt;&lt;ldap_server&gt;
         section. So if you want to change that value, you have to set the
         path to <literal>ldap,ldap_server</literal>. If you want to change
         the password of the first user in the control file, you have to set
         the path to <literal>users,0,user_password</literal>. The
         <literal>0</literal> indicates the first user in the &lt;users
         config:type="list"&gt; list of users in the control file.
        </para>
                <screen>&lt;pathlist config:type="list"&gt;
  &lt;path&gt;networking,dns,hostname&lt;/path&gt;
  &lt;path&gt;...&lt;/path&gt;
&lt;/pathlist&gt;</screen>
              </entry>
              <entry>
                <para>
         This information is optional but you should at least provide
         <literal>path</literal> or <literal>file</literal>.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         file
        </para>
              </entry>
              <entry>
                <para>
         You can store the answer to a question in a file, to use it in one
         of your scripts later. If you ask during
         <literal>stage=inital</literal> and you want to use the answer in
         stage2, then you have to copy the answer-file in a chroot script
         that is running as <literal>chrooted=false</literal>. Use the
         commnad: <command>cp /tmp/my_answer /mnt/tmp/</command>. The reason
         is that <filename>/tmp</filename> in stage1 is just in the RAM disk
         and will get lost after the reboot, but the installed system is
         already mounted at <filename>/mnt/</filename>.
        </para>
                <screen>&lt;file&gt;/tmp/answer_hostname&lt;/file&gt;</screen>
              </entry>
              <entry>
                <para>
         This information is optional, but you should at least provide
         <literal>path</literal> or <literal>file</literal>.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         password
        </para>
              </entry>
              <entry>
                <para>
         If this boolean is set to <literal>true</literal>, a password
         dialog pops up instead of a simple text entry. Setting this to
         <literal>true</literal> only makes sense if <literal>type</literal>
         is string.
        </para>
                <screen>&lt;password config:type="boolean"&gt;true&lt;/password&gt;</screen>
              </entry>
              <entry>
                <para>
         Optional. The default is <literal>false</literal>.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         stage
        </para>
              </entry>
              <entry>
                <para>
         Stage configures the installation stage in which the question pops
         up. You can set this value to <literal>cont</literal> or
         <literal>initial</literal>. <literal>initial</literal> means the
         pop-up comes up very early in the installation, shortly after the
         pre-script has run. <literal>cont</literal> means, that the dialog
         with the question comes after the first reboot when the system
         boots for the very first time. Questions you answer during the
         <literal>inital</literal> stage will write their answer into the
         control file on the harddisk. You should know that if you enter
         cleartext passwords during <literal>initial</literal>. Of course it
         does not make sense to ask for the filesystem to use during the
         <literal>cont</literal> phase. The harddisk is already partitioned
         at that stage and the question will have no effect.
        </para>
                <screen>&lt;stage&gt;cont&lt;/stage&gt;</screen>
              </entry>
              <entry>
                <para>
         Optional. The default is <literal>initial</literal>.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         selection
        </para>
              </entry>
              <entry>
                <para>
         The selection element contains a list of <literal>entry</literal>
         elements. Each entry represents a possible option for the user to
         choose. The user cannot enter a value in a textfield, but he can
         choose from a list of values.
        </para>
                <screen>&lt;selection config:type="list"&gt;
  &lt;entry&gt;
    &lt;value&gt;
        reiser
    &lt;/value&gt;
    &lt;label&gt;
        Reiser Filesystem
    &lt;/label&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;value&gt;
        ext3
    &lt;/value&gt;
    &lt;label&gt;
        Extended3 Filesystem
    &lt;/label&gt;
  &lt;/entry&gt;
&lt;/selection&gt;</screen>
              </entry>
              <entry>
                <para>
         Optional for <literal>type=string</literal>, not possible for
         <literal>type=boolean</literal> and mandatory for
         <literal>type=symbol</literal>.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         dialog
        </para>
              </entry>
              <entry>
                <para>
         You can ask more than one question per dialog. To do so, specifiy
         the dialog-id with an integer. All questions with the same
         dialog-id belong to the same dialog. The dialogs are sorted by the
         id too.
        </para>
                <screen>&lt;dialog config:type="integer"&gt;3&lt;/dialog&gt;</screen>
              </entry>
              <entry>
                <para>
         Optional.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         element
        </para>
              </entry>
              <entry>
                <para>
         you can have more than one question per dialog. To make that
         possible you have to specifiy the element-id with an integer. The
         questions in a dialog are sorted by id.
        </para>
                <screen>&lt;element config:type="integer"&gt;1&lt;/element&gt;</screen>
              </entry>
              <entry>
                <para>
         Optional (see dialog).
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         width
        </para>
              </entry>
              <entry>
                <para>
         You can increase the default width of dialog. If there are multiple
         width specifications per dialog, the largest one is used. The
         number is roughly equivalent to the number of characters.
        </para>
                <screen>&lt;width config:type="integer"&gt;50&lt;/width&gt;</screen>
              </entry>
              <entry>
                <para>
         Optional.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         height
        </para>
              </entry>
              <entry>
                <para>
         You can increase default height of dialog. If there are multiple
         height specifications per dialog, largest one is used. The number
         is roughly equivalent to number of lines.
        </para>
                <screen>&lt;height config:type="integer"&gt;15&lt;/height&gt;</screen>
              </entry>
              <entry>
                <para>
         Optional.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         frametitle
        </para>
              </entry>
              <entry>
                <para>
         You can have more than one question per dialog. Each question on a
         dialog has a frame that can have a frame title, a small caption for
         each question. You can put multiple elements into one frame. They
         have to have the same frame title.
        </para>
                <screen>&lt;frametitle&gt;User data&lt;/frametitle&gt;</screen>
              </entry>
              <entry>
                <para>
         Optional. Default is no frame title.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         script
        </para>
              </entry>
              <entry>
                <para>
         You can run scripts after a question has been answered (see the
         table below for detailed instructions about scripts).
        </para>
                <screen>&lt;script&gt;...&lt;/script&gt;</screen>
              </entry>
              <entry>
                <para>
         Optional (default is no script).
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         ok_label
        </para>
              </entry>
              <entry>
                <para>
         You can change the label on the <guimenu>Ok</guimenu> button. The
         last element that specifies the label for a dialog wins.
        </para>
                <screen>&lt;ok_label&gt;Finish&lt;/ok_label&gt;</screen>
              </entry>
              <entry>
                <para>
         Optional.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         back_label
        </para>
              </entry>
              <entry>
                <para>
         You can change the label on the <guimenu>Back</guimenu> button. The
         last element that specifies the label for a dialog wins.
        </para>
                <screen>&lt;back_label&gt;change values&lt;/back_label&gt;</screen>
              </entry>
              <entry>
                <para>
         Optional.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         timeout
        </para>
              </entry>
              <entry>
                <para>
         You can specify an integer here that is used as timeout in seconds.
         If the user does not answer the question before the timeout, the
         default value is taken as answer. When the user touches or changes
         any widget in the dialog, the timeout is turned off and the dialog
         has to be confirmed via the ok-button.
        </para>
                <screen>&lt;timeout config:type="integer"&gt;30&lt;/timeout&gt;</screen>
              </entry>
              <entry>
                <para>
         Optional. A missing value is interpreted as <literal>0</literal>,
         which means that there is no timeout.
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         default_value_script
        </para>
              </entry>
              <entry>
                <para>
         You can run scripts to set the default value for a question (see
         <xref linkend="CreateProfile.Ask.default_value"/> for detailed
         instructions about default value scripts). This feature is useful
         if you can <literal>calculate</literal> a default value, especially
         in combination with the <literal>timeout</literal> option.
        </para>
                <screen>&lt;default_value_script&gt;...&lt;/default_value_script&gt;</screen>
              </entry>
              <entry>
                <para>
         Optional. Default is no script.
        </para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </table>
      <sect2 xml:id="CreateProfile.Ask.default_value">
        <title>Default Value Scripts</title>
        <para>
     You can run scripts to set the default value for a question. This
     feature is useful if you can <literal>calculate</literal> a default
     value, especially in combination with the <literal>timeout</literal>
     option.
    </para>
        <para>
     The elements listed below must be placed within the following XML
     structure:
    </para>
        <screen>&lt;general&gt;
  &lt;ask-list config:type="list"&gt;
    &lt;ask&gt;
      &lt;default_value_script&gt;
        ...
      &lt;/default_value_script&gt;
    &lt;/ask&gt;
  &lt;/ask-list&gt;
&lt;/general&gt;</screen>
        <table>
          <title>Default Value Scripts: XML representation</title>
          <tgroup cols="3">
            <thead>
              <row>
                <entry>
                  <para>
          Element
         </para>
                </entry>
                <entry>
                  <para>
          Description
         </para>
                </entry>
                <entry>
                  <para>
          Comment
         </para>
                </entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>
                  <para>
          source
         </para>
                </entry>
                <entry>
                  <para>
          The source code of the script. Whatever you
          <command>echo</command> to STDOUT will be used as default value
          for the ask-dialog. If your script has an exit code other than 0,
          the normal default element is used. Take care you use
          <command>echo -n</command> to suppress the <literal>\n</literal>
          and that you echo reasonable values and not <quote>okay</quote>
          for a boolean
         </para>
                  <screen>&lt;source&gt;...&lt;/source&gt;</screen>
                </entry>
                <entry>
                  <para>
          This value is required, otherwise nothing would be executed.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          interpreter
         </para>
                </entry>
                <entry>
                  <para>
          The interpreter to use.
         </para>
                  <screen>&lt;interpreter&gt;perl&lt;/interpreter&gt;</screen>
                </entry>
                <entry>
                  <para>
          The default value is <literal>shell</literal>. You can also set
          <filename>/bin/myinterpreter</filename> as value.
         </para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </sect2>
      <sect2 xml:id="CreateProfile.Ask.script">
        <title>Scripts</title>
        <para>
     You can run scripts after a question has been answered.
    </para>
        <para>
     The elements listed below must be placed within the following XML
     structure:
    </para>
        <screen>&lt;general&gt;
  &lt;ask-list config:type="list"&gt;
    &lt;ask&gt;
      &lt;script&gt;
        ...
      &lt;/script&gt;
    &lt;/ask&gt;
  &lt;/ask-list&gt;
&lt;/general&gt;</screen>
        <table>
          <title>Scripts: XML representation</title>
          <tgroup cols="3">
            <thead>
              <row>
                <entry>
                  <para>
          Element
         </para>
                </entry>
                <entry>
                  <para>
          Description
         </para>
                </entry>
                <entry>
                  <para>
          Comment
         </para>
                </entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>
                  <para>
          filename
         </para>
                </entry>
                <entry>
                  <para>
          The filename of the script.
         </para>
                  <screen>&lt;filename&gt;my_ask_script.sh&lt;/filename&gt;</screen>
                </entry>
                <entry>
                  <para>
          The default is ask_script.sh
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          source
         </para>
                </entry>
                <entry>
                  <para>
          The source code of the script. Together with
          <literal>rerun_on_error</literal> activated, you check the value
          that was entered for sanity. Your script can create a file
          <filename>/tmp/next_dialog</filename> with a dialog id specifying
          the next dialog AutoYaST will raise. A value of -1 terminates the ask
          sequence. If that file is not created, AutoYaST will run the dialogs
          in the normal order (since 11.0 only).
         </para>
                  <screen>&lt;source&gt;...&lt;/source&gt;</screen>
                </entry>
                <entry>
                  <para>
          This value is required, otherwise nothing would be executed.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          environment
         </para>
                </entry>
                <entry>
                  <para>
          A boolean that passes the value of the answer to the question as
          an environment variable to the script. The variable is named
          <envar>VAL</envar>.
         </para>
                  <screen>&lt;environment config:type="boolean"&gt;true&lt;/environment&gt;</screen>
                </entry>
                <entry>
                  <para>
          Optional. Default is <literal>false</literal>.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          feedback
         </para>
                </entry>
                <entry>
                  <para>
          A boolean that turns on feedback for the script execution. STDOUT
          will be displayed in a pop-up window that must be confirmed after
          the script execution.
         </para>
                  <screen>&lt;feedback config:type="boolean"&gt;true&lt;/feedback&gt;</screen>
                </entry>
                <entry>
                  <para>
          Optional, default is <literal>false</literal>.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          debug
         </para>
                </entry>
                <entry>
                  <para>
          A boolean that turns on debugging for the script execution.
         </para>
                  <screen>&lt;debug config:type="boolean"&gt;true&lt;/debug&gt;</screen>
                </entry>
                <entry>
                  <para>
          Optional, default is <literal>true</literal>. This value needs
          <literal>feedback</literal> to be turned on, too.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          rerun_on_error
         </para>
                </entry>
                <entry>
                  <para>
          A boolean that keeps the dialog open until the script has an exit
          code of 0 (zero). So you can parse and check the answers the user
          gave in the script and display an error with the
          <literal>feedback</literal> option.
         </para>
                  <screen>&lt;rerun_on_error config:type="boolean"&gt;true&lt;/rerun_on_error&gt;</screen>
                </entry>
                <entry>
                  <para>
          Optional, default is <literal>false</literal>. This value should
          be used together with the feedback option.
         </para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </table>
        <para>
     Below you can see an example of the usage of the <literal>ask</literal>
     feature.
    </para>
        <screen>&lt;general&gt;
  &lt;ask-list config:type="list"&gt;
    &lt;ask&gt;
      &lt;pathlist config:type="list"&gt;
        &lt;path&gt;ldap,ldap_server&lt;/path&gt;
      &lt;/pathlist&gt;
      &lt;stage&gt;cont&lt;/stage&gt;
      &lt;help&gt;Choose your server depending on your department&lt;/help&gt;
      &lt;selection config:type="list"&gt;
        &lt;entry&gt;
          &lt;value&gt;ldap1.mydom.de&lt;/value&gt;
          &lt;label&gt;LDAP for development&lt;/label&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
          &lt;value&gt;ldap2.mydom.de&lt;/value&gt;
          &lt;label&gt;LDAP for sales&lt;/label&gt;
        &lt;/entry&gt;
      &lt;/selection&gt;
      &lt;default&gt;ldap2.mydom.de&lt;/default&gt;
      &lt;default_value_script&gt;
        &lt;source&gt; &lt;![CDATA[
echo -n "ldap1.mydom.de"
]]&gt;
        &lt;/source&gt;
      &lt;/default_value_script&gt;
    &lt;/ask&gt;
    &lt;ask&gt;
      &lt;pathlist config:type="list"&gt;
        &lt;path&gt;networking,dns,hostname&lt;/path&gt;
      &lt;/pathlist&gt;
      &lt;question&gt;Enter Hostname&lt;/question&gt;
      &lt;stage&gt;initial&lt;/stage&gt;
      &lt;default&gt;enter your hostname here&lt;/default&gt;
    &lt;/ask&gt;
    &lt;ask&gt;
      &lt;pathlist config:type="list"&gt;
        &lt;path&gt;partitioning,0,partitions,0,filesystem&lt;/path&gt;
      &lt;/pathlist&gt;
      &lt;question&gt;Filesystem&lt;/question&gt;
      &lt;type&gt;symbol&lt;/type&gt;
      &lt;selection config:type="list"&gt;
        &lt;entry&gt;
          &lt;value config:type="symbol"&gt;reiser&lt;/value&gt;
          &lt;label&gt;default Filesystem (recommended)&lt;/label&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
          &lt;value config:type="symbol"&gt;ext3&lt;/value&gt;
          &lt;label&gt;Fallback Filesystem&lt;/label&gt;
        &lt;/entry&gt;
      &lt;/selection&gt;
    &lt;/ask&gt;
  &lt;/ask-list&gt;
&lt;/general&gt;</screen>
        <para>
     The following example shows a to choose between AutoYaST control files.
     AutoYaST will read the <filename>modified.xml</filename> file again after
     the ask-dialogs are done. This way you can fetch a complete new control
     file.
    </para>
        <screen>&lt;general&gt;
  &lt;ask-list config:type="list"&gt;
    &lt;ask&gt;
      &lt;selection config:type="list"&gt;
        &lt;entry&gt;
          &lt;value&gt;part1.xml&lt;/value&gt;
          &lt;label&gt;Simple partitioning&lt;/label&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
          &lt;value&gt;part2.xml&lt;/value&gt;
          &lt;label&gt;encrypted /tmp&lt;/label&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
          &lt;value&gt;part3.xml&lt;/value&gt;
          &lt;label&gt;LVM&lt;/label&gt;
        &lt;/entry&gt;
      &lt;/selection&gt;
      &lt;title&gt;XML Profile&lt;/title&gt;
      &lt;question&gt;Choose a profile&lt;/question&gt;
      &lt;stage&gt;initial&lt;/stage&gt;
      &lt;default&gt;part1.xml&lt;/default&gt;
      &lt;script&gt;
        &lt;filename&gt;fetch.sh&lt;/filename&gt;
        &lt;environment config:type="boolean"&gt;true&lt;/environment&gt;
        &lt;source&gt;
&lt;![CDATA[
wget http://10.10.0.162/$VAL -O /tmp/profile/modified.xml 2&gt;/dev/null
]]&gt;
        &lt;/source&gt;
        &lt;debug config:type="boolean"&gt;false&lt;/debug&gt;
        &lt;feedback config:type="boolean"&gt;false&lt;/feedback&gt;
      &lt;/script&gt;
    &lt;/ask&gt;tion&gt;
  &lt;/ask-list&gt;
&lt;/general&gt;</screen>
        <para>
     You can verify the answer of a question with a script like this:
    </para>
        <screen>&lt;general&gt;
  &lt;ask-list config:type="list"&gt;
    &lt;ask&gt;
      &lt;script&gt;
        &lt;filename&gt;my.sh&lt;/filename&gt;
        &lt;rerun_on_error config:type="boolean"&gt;true&lt;/rerun_on_error&gt;
        &lt;environment config:type="boolean"&gt;true&lt;/environment&gt;
        &lt;source&gt;&lt;![CDATA[
if [ "$VAL" = "myhost" ]; then
    echo "Illegal Hostname!";
    exit 1;
fi
exit 0
]]&gt;
        &lt;/source&gt;
        &lt;debug config:type="boolean"&gt;false&lt;/debug&gt;
        &lt;feedback config:type="boolean"&gt;true&lt;/feedback&gt;
      &lt;/script&gt;
      &lt;dialog config:type="integer"&gt;0&lt;/dialog&gt;
      &lt;element config:type="integer"&gt;0&lt;/element&gt;
      &lt;pathlist config:type="list"&gt;
        &lt;path&gt;networking,dns,hostname&lt;/path&gt;
      &lt;/pathlist&gt;
      &lt;question&gt;Enter Hostname&lt;/question&gt;
      &lt;default&gt;enter your hostname here&lt;/default&gt;
    &lt;/ask&gt;
  &lt;/ask-list&gt;
&lt;/general&gt;</screen>
      </sect2>
    </sect1>
    <!-- {{{ Kdump -->
    <sect1 xml:id="CreateProfile.kdump">
      <title>Kernel Dumps</title>
      <note>
        <title>Availability</title>
        <para>
     This feature is not available on the IBM System z (s390x)
     architecture.
    </para>
      </note>
      <para>
    With Kdump the system is able to create crashdump files if the whole
    system (i.e., the kernel) crashes. Crash dump files contain the memory
    contents while the system crashed. Such core files can be analyzed later
    by support or a (kernel) developer to find the reason for the system
    crash. Kdump is mostly useful for servers where you cannot easily
    reproduce such crashes but it is important to get the problem fixed.
   </para>
      <para>
    The only downside: enabling Kdump costs you between 64 MiB and 128 MiB
    of system RAM (on <quote>normal</quote> sized systems), reserved for
    Kdump in case the system crashes and the dump needs to be generated.
   </para>
      <para>
    This section only describes how to set up Kdump with AutoYaST. It does not
    describe how Kdump works. For details, refer to the kdump(7) manual
    page.
   </para>
      <para>
    The following example shows a general Kdump configuration.
   </para>
      <example>
        <title>Kdump configuration</title>
        <screen>&lt;kdump&gt;
  &lt;!-- memory reservation --&gt;
  &lt;add_crash_kernel config:type="boolean"&gt;true&lt;/add_crash_kernel&gt;
  &lt;crash_kernel&gt;256M-:64M&lt;/crash_kernel&gt;
  &lt;general&gt;

    &lt;!-- dump target settings --&gt;
    &lt;KDUMP_SAVEDIR&gt;ftp://stravinsky.suse.de/incoming/dumps&lt;/KDUMP_SAVEDIR&gt;
    &lt;KDUMP_COPY_KERNEL&gt;true&lt;/KDUMP_COPY_KERNEL&gt;
    &lt;KDUMP_FREE_DISK_SIZE&gt;64&lt;/KDUMP_FREE_DISK_SIZE&gt;
    &lt;KDUMP_KEEP_OLD_DUMPS&gt;5&lt;/KDUMP_KEEP_OLD_DUMPS&gt;

    &lt;!-- filtering and compression --&gt;
    &lt;KDUMP_DUMPFORMAT&gt;compressed&lt;/KDUMP_DUMPFORMAT&gt;
    &lt;KDUMP_DUMPLEVEL&gt;1&lt;/KDUMP_DUMPLEVEL&gt;

    &lt;!-- notification --&gt;
    &lt;KDUMP_NOTIFICATION_TO&gt;tux@example.com&lt;/KDUMP_NOTIFICATION_TO&gt;
    &lt;KDUMP_NOTIFICATION_CC&gt;&lt;/KDUMP_NOTIFICATION_CC&gt;
    &lt;KDUMP_SMTP_SERVER&gt;mail.example.com&lt;/KDUMP_SMTP_SERVER&gt;
    &lt;KDUMP_SMTP_USER&gt;&lt;/KDUMP_SMTP_USER&gt;
    &lt;KDUMP_SMTP_PASSWORD&gt;&lt;/KDUMP_SMTP_PASSWORD&gt;

    &lt;!-- kdump kernel --&gt;
    &lt;KDUMP_KERNELVER&gt;&lt;/KDUMP_KERNELVER&gt;
    &lt;KDUMP_COMMANDLINE&gt;&lt;/KDUMP_COMMANDLINE&gt;
    &lt;KDUMP_COMMANDLINE_APPEND&gt;&lt;/KDUMP_COMMANDLINE_APPEND&gt;

    &lt;!-- expert settings --&gt;
    &lt;KDUMP_IMMEDIATE_REBOOT&gt;yes&lt;/KDUMP_IMMEDIATE_REBOOT&gt;
    &lt;KDUMP_VERBOSE&gt;15&lt;/KDUMP_VERBOSE&gt;
    &lt;KEXEC_OPTIONS&gt;&lt;/KEXEC_OPTIONS&gt;
  &lt;/general&gt;
&lt;/kdump&gt; </screen>
      </example>
      <!-- {{{ Memory Reservation -->
      <sect2 xml:id="CreateProfile.kdump.reservation">
        <title>Memory Reservation</title>
        <para>
     The first step is to reserve memory for Kdump at boot-up. Because the
     memory must be reserved very early during the boot process, the
     configuration is done via a kernel command line parameter called
     <literal>crashkernel</literal>. The reserved memory will be used to
     load a second kernel which will be executed without rebooting if the
     first kernel crashes. This second kernel has a special initrd, which
     contains all programs necessary to save the dump over the network or to
     disk, send a notification e-mail, and finally reboot.
    </para>
        <para>
     To reserve memory for Kdump, specify the <literal>amount</literal>
     (such as <literal>64M</literal> to reserve 64 MiB of memory from the
     RAM) and the <literal>offset</literal>. The syntax is
     <literal>crashkernel=AMOUNT@OFFSET</literal>. The kernel can
     auto-detect the right offset (with the exception of the Xen hypervisor,
     where you have to specify <literal>16M</literal> as offset). The amount
     of memory that needs to be reserved depends on architecture and main
     memory—refer to <xref linkend="cha.tuning.kdump.basic.manual"/>
     for recommendations on the amount of memory to reserve for Kdump.
    </para>
        <para>
     You can also use the extended command line syntax to specify the amount
     of reserved memory depending on the System RAM. That is useful if you
     share one AutoYaST control file for multiple installations or if you often
     remove or install memory on one machine. The syntax is:
    </para>
        <screen>BEGIN_RANGE_1-END_RANGE_1:AMOUNT_1,BEGIN_RANGE_2-END_RANGE_2:AMOUNT_2@OFFSET</screen>
        <para><literal>BEGIN_RANGE_1</literal> is the start of the first memory range
     (for example: <literal>0M</literal>) and <literal>END_RANGE_1</literal>
     is the end of the first memory range (can be empty in case
     <literal>infinity</literal> should be assumed) and so on. For example
     <literal>256M-2G:64M,2G-:128M</literal> means to reserve 64 MiB of
     crashkernel memory if the system has between 256 MiB and 2 GiB RAM
     and to reserve 128 MiB of crashkernel memory if the system has more
     than 2 GiB RAM.
    </para>
        <para>
     The following table shows the settings necessary to reserve memory:
    </para>
        <table>
          <title>Kdump Memory Reservation Settings:XML Representation</title>
          <tgroup cols="3">
            <thead>
              <row>
                <entry>
                  <para>
          Element
         </para>
                </entry>
                <entry>
                  <para>
          Description
         </para>
                </entry>
                <entry>
                  <para>
          Comment
         </para>
                </entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>
                  <para>
          add_crash_kernel
         </para>
                </entry>
                <entry>
                  <para>
          Set to <literal>true</literal> if memory should be reserved and
          Kdump enabled.
         </para>
                  <screen>&lt;add_crash_kernel config:type="boolean"&gt;true&lt;/add_crash_kernel&gt;</screen>
                </entry>
                <entry>
                  <para>
          required
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          crash_kernel
         </para>
                </entry>
                <entry>
                  <para>
          Use the syntax of the crashkernel command line as discussed above.
         </para>
                  <screen>&lt;crash_kernel&gt;256M:64M&lt;/crash_kernel&gt;</screen>
                </entry>
                <entry>
                  <para>
          required
         </para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </sect2>
      <sect2 xml:id="CreateProfile.kdump.saving">
        <title>Dump Saving</title>
        <para>
          <remark role="fixme">Add a short description</remark>
        </para>
        <sect3 xml:id="CreateProfile.kdump.saving.target">
          <title>Target</title>
          <para>
      The element <literal>KDUMP_SAVEDIR</literal> specifies the URL to
      where the dump is saved. The following methods are possible:
     </para>
          <itemizedlist>
            <listitem>
              <para><literal>file</literal> to save to the local disk,
       </para>
            </listitem>
            <listitem>
              <para><literal>ftp</literal> to save to an FTP server (without
        encryption),
       </para>
            </listitem>
            <listitem>
              <para><literal>sftp</literal> to save to an SSH2 SFTP server,
       </para>
            </listitem>
            <listitem>
              <para><literal>nfs</literal> to save to an NFS location and
       </para>
            </listitem>
            <listitem>
              <para><literal>cifs</literal> to save the dump to a CIFS/SMP export from
        Samba or Microsoft Windows.
       </para>
            </listitem>
          </itemizedlist>
          <para>
      For details see the kdump(5) manual page. Two examples are:
      <literal>file:///var/crash</literal> (which is the default location
      according to FHS) and
      <literal>ftp://user:password@host:port/incoming/dumps</literal>. A
      subdirectory, with the time stamp contained in the name, will be
      created and the dumps saved there.
     </para>
          <para>
      When the dump is saved to the local disk,
      <literal>KDUMP_KEEP_OLD_DUMPS</literal> can be used to delete old
      dumps automatically. Set it to the number of old dumps that should be
      kept. If the target partition would end up with less free disk space
      than specified in <literal>KDUMP_FREE_DISK_SIZE</literal>, the dump is
      not saved.
     </para>
          <para>
      If you want to save the whole kernel and the debug information (if
      installed) to the same directory, set
      <literal>KDUMP_COPY_KERNEL</literal> to <literal>true</literal>.
      You'll have everything you need to analyze the dump in one directory
      (except kernel modules and their debugging information).
     </para>
        </sect3>
        <sect3 xml:id="CreateProfile.kdump.saving.compression">
          <title>Filtering and Compression</title>
          <para>
      The kernel dump is uncompressed and unfiltered. It can get as large as
      your system RAM. To get smaller files, compress the dump file
      afterwards. The dump has to be decompressed before opening.
     </para>
          <para>
      To use page compression, which compresses every page and allows
      dynamic decompression with the crash(8) debugging tool, set
      <literal>KDUMP_DUMPFORMAT</literal> to <literal>compressed</literal>
      (default).
     </para>
          <para>
      You may not want to save all memory pages, for example those filled
      with zeroes. To filter the dump, set the
      <literal>KDUMP_DUMPLEVEL</literal>. 0 produces a full dump and 31 is
      the smallest dump. The manual pages kdump(5) and makedumpfile(8) list
      for each value which pages will be saved.
     </para>
        </sect3>
        <sect3 xml:id="CreateProfile.kdump.saving.summary">
          <title>Summary</title>
          <table>
            <title>Dump Target Settings: XML Representation</title>
            <tgroup cols="3">
              <thead>
                <row>
                  <entry>
                    <para>
           Element
          </para>
                  </entry>
                  <entry>
                    <para>
           Description
          </para>
                  </entry>
                  <entry>
                    <para>
           Comment
          </para>
                  </entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry>
                    <para>
           KDUMP_SAVEDIR
          </para>
                  </entry>
                  <entry>
                    <para>
           An URL that specifies the target to which the dump and related
           files will be saved.
          </para>
                    <screen>&lt;KDUMP_SAVEDRIR
&gt;file:///var/crash/&lt;/KDUMP_SAVEDIR&gt;</screen>
                  </entry>
                  <entry>
                    <para>
           required
          </para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>
           KDUMP_COPY_KERNEL
          </para>
                  </entry>
                  <entry>
                    <para>
           Set to <literal>true</literal>, if not only the dump should be
           saved to <literal>KDUMP_SAVEDIR</literal> but also the kernel and
           its debugging information (if installed).
          </para>
                    <screen>&lt;KDUMP_COPY_KERNEL
&gt;false&lt;/KDUMP_COPY_KERNEL&gt;</screen>
                  </entry>
                  <entry>
                    <para>
           optional
          </para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>
           KDUMP_FREE_DISK_SIZE
          </para>
                  </entry>
                  <entry>
                    <para>
           Disk space in megabytes that must remain free after saving the
           dump. If not enough space is available, the dump will not be
           saved.
          </para>
                    <screen>&lt;KDUMP_FREE_DISK_SIZE
&gt;64&lt;/KDUMP_FREE_DISK_SIZE&gt;</screen>
                  </entry>
                  <entry>
                    <para>
           optional
          </para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>
           KDUMP_KEEP_OLD_DUMPS
          </para>
                  </entry>
                  <entry>
                    <para>
           The number of dumps that are kept (i.e., not deleted) if
           <literal>KDUMP_SAVEDIR</literal> points to a local directory.
           Specify 0 if you do not want any dumps to be automatically
           deleted, specify -1 if all dumps except the current one should be
           deleted.
          </para>
                    <screen>&lt;KDUMP_KEEP_OLD_DUMPS
&gt;4&lt;/KDUMP_KEEP_OLD_DUMPS&gt;</screen>
                  </entry>
                  <entry>
                    <para>
           optional
          </para>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </sect3>
      </sect2>
      <sect2 xml:id="CreateProfile.kdump.notification">
        <title>E-Mail Notification</title>
        <para>
     Configure e-mail notification if you want to be informed when a machine
     crashes and a dump is saved.
    </para>
        <para>
     Because Kdump runs in the initrd, a local mail server cannot send the
     notification e-mail. An SMTP server needs to be specified (see below).
    </para>
        <para>
     You have to provide exactly one address in
     <literal>KDUMP_NOTIFICATION_TO</literal>. More addresses can be
     specified in in <literal>KDUMP_NOTIFICATION_CC</literal>. Only use
     e-mail addresses in both cases, not a real name.
    </para>
        <para>
     Specify <literal>KDUMP_SMTP_SERVER</literal> and (if the server needs
     authentication) <literal>KDUMP_SMTP_USER</literal> and
     <literal>KDUMP_SMTP_PASSWORD</literal>. Support for TSL or SSL is not
     available but may be added in the future.
    </para>
        <!-- {{{ Table: XML representation of the e-mail notification settings -->
        <table>
          <title>E-Mail Notification Settings: XML Representation</title>
          <tgroup cols="3">
            <thead>
              <row>
                <entry>
                  <para>
          Element
         </para>
                </entry>
                <entry>
                  <para>
          Description
         </para>
                </entry>
                <entry>
                  <para>
          Comment
         </para>
                </entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>
                  <para>
          KDUMP_NOTIFICATION_TO
         </para>
                </entry>
                <entry>
                  <para>
          Exactly one e-mail address to which the e-mail should be sent.
          Additional recipients can be specified in
          <literal>KDUMP_NOTIFICATION_CC</literal>.
         </para>
                  <screen>&lt;KDUMP_NOTIFICATION_TO
&gt;tux@example.com&lt;/KDUMP_NOTIFICATION_TO&gt;</screen>
                </entry>
                <entry>
                  <para>
          optional (notification disabled if empty)
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          KDUMP_NOTIFICATION_CC
         </para>
                </entry>
                <entry>
                  <para>
          Zero, one or more recipients that are in the cc line of the
          notification e-mail.
         </para>
                  <screen>&lt;KDUMP_NOTIFICATION_CC
&gt;wilber@example.com geeko@example.com&lt;/KDUMP_NOTIFICATION_CC&gt;</screen>
                </entry>
                <entry>
                  <para>
          optional
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          KDUMP_SMTP_SERVER
         </para>
                </entry>
                <entry>
                  <para>
          Host name of the SMTP server used for mail delivery. SMTP
          authentication is supported (see
          <literal>KDUMP_SMTP_USER</literal> and
          <literal>KDUMP_SMTP_PASSWORD</literal>) but TSL and SSL are not&gt;.
         </para>
                  <screen>&lt;KDUMP_SMTP_SERVER
&gt;email.suse.de&lt;/KDUMP_SMTP_SERVER&gt;</screen>
                </entry>
                <entry>
                  <para>
          optional (notification disabled if empty)
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          KDUMP_SMTP_USER
         </para>
                </entry>
                <entry>
                  <para>
          User name used together with
          <literal>KDUMP_SMTP_PASSWORD</literal> for SMTP authentication.
         </para>
                  <screen>&lt;KDUMP_SMTP_USER
&gt;bwalle&lt;/KDUMP_SMTP_USER&gt;</screen>
                </entry>
                <entry>
                  <para>
          optional
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          KDUMP_SMTP_PASSWORD
         </para>
                </entry>
                <entry>
                  <para>
          Password used together with <literal>KDUMP_SMTP_USER</literal> for
          SMTP authentication.
         </para>
                  <screen>&lt;KDUMP_SMTP_PASSWORD
&gt;geheim&lt;/KDUMP_SMTP_PASSWORD&gt;</screen>
                </entry>
                <entry>
                  <para>
          optional
         </para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </sect2>
      <sect2 xml:id="CreateProfile.kdump.kernel">
        <title>Kdump Kernel Settings</title>
        <para>
     As already mentioned, a special kernel is booted to save the dump. If
     you don't want to use the auto-detection mechanism to find out which
     kernel is used (see the kdump(5) manual page that describes the
     algorithm which is used to find the kernel), you can specify the
     version of a custom kernel in <literal>KDUMP_KERNELVER</literal>. If
     you set it to <literal>foo</literal>, then the kernel located in
     <filename>/boot/vmlinuz-foo</filename> or
     <filename>/boot/vmlinux-foo</filename> (in that order on platforms that
     have a <filename>vmlinuz</filename> file) will be used.
    </para>
        <para>
     You can specify the command line used to boot the Kdump kernel.
     Normally the boot command line is used minus some settings that make no
     sense with Kdump (like the <literal>crashkernel</literal> parameter)
     plus some settings needed by Kdump (see the manual page kdump(5)). If
     you just want some additional parameters like a overwritten console
     setting then use <literal>KDUMP_COMMANDLINE_APPEND</literal>. If you
     know what you're doing and you want to specify the whole command line,
     set <literal>KDUMP_COMMANDLINE</literal>.
    </para>
        <table>
          <title>Kernel Settings: XML Representation</title>
          <tgroup cols="3">
            <thead>
              <row>
                <entry>
                  <para>
          Element
         </para>
                </entry>
                <entry>
                  <para>
          Description
         </para>
                </entry>
                <entry>
                  <para>
          Comment
         </para>
                </entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>
                  <para>
          KDUMP_KERNELVER
         </para>
                </entry>
                <entry>
                  <para>
          Version string for the kernel used for Kdump. Leave it empty to
          use the auto-detection mechanism (strongly recommended).
         </para>
                  <screen>&lt;KDUMP_KERNELVER
&gt;2.6.27-default&lt;/KDUMP_KERNELVER&gt;</screen>
                </entry>
                <entry>
                  <para>
          optional (auto-detection if empty)
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          KDUMP_COMMANDLINE_APPEND
         </para>
                </entry>
                <entry>
                  <para>
          Additional command line parameters for the Kdump kernel.
         </para>
                  <screen>&lt;KDUMP_COMMANDLINE_APPEND
&gt;console=ttyS0,57600&lt;/KDUMP_COMMANDLINE_APPEND&gt;</screen>
                </entry>
                <entry>
                  <para>
          optional
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          KDUMP_COMMANDLINE
         </para>
                </entry>
                <entry>
                  <para>
          Overwrite the automatically generated Kdump command line. Use with
          care. In most cases, <literal>KDUMP_COMMANDLINE_APPEND</literal>
          should suffice.
         </para>
                  <screen>&lt;KDUMP_COMMANDLINE_APPEND
&gt;root=/dev/sda5 maxcpus=1 irqpoll&lt;/KDUMP_COMMANDLINE&gt;</screen>
                </entry>
                <entry>
                  <para>
          optional
         </para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </sect2>
      <sect2 xml:id="CreateProfile.kdump.expert">
        <title>Expert Settings</title>
        <table>
          <title>Expert Settings: XML Representations</title>
          <tgroup cols="3">
            <thead>
              <row>
                <entry>
                  <para>
          Element
         </para>
                </entry>
                <entry>
                  <para>
          Description
         </para>
                </entry>
                <entry>
                  <para>
          Comment
         </para>
                </entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>
                  <para>
          KDUMP_IMMEDIATE_REBOOT
         </para>
                </entry>
                <entry>
                  <para><literal>true</literal> if the system should be rebooted
          automatically after the dump has been saved,
          <literal>false</literal> otherwise. The default is to reboot the
          system automatically.
         </para>
                  <screen>&lt;KDUMP_IMMEDIATE_REBOOT
&gt;true&lt;/KDUMP_IMMEDIATE_REBOOT&gt;</screen>
                </entry>
                <entry>
                  <para>
          optional
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          KDUMP_VERBOSE
         </para>
                </entry>
                <entry>
                  <para>
          Bitmask that specifies how verbose the Kdump process should be.
          Read kdump(5) for details.
         </para>
                  <screen>&lt;KDUMP_VERBOSE&gt;3&lt;/KDUMP_VERBOSE&gt;</screen>
                </entry>
                <entry>
                  <para>
          optional
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          KEXEC_OPTIONS
         </para>
                </entry>
                <entry>
                  <para>
          Additional options that are passed to kexec when loading the Kdump
          kernel. Normally empty.
         </para>
                  <screen>&lt;KEXEC_OPTIONS&gt;--noio&lt;/KEXEC_OPTIONS&gt;</screen>
                </entry>
                <entry>
                  <para>
          optional
         </para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </sect2>
    </sect1>
    <sect1 xml:id="CreateProfile.Hardware">
      <title>Miscellaneous Hardware and System Components</title>
      <para>
    In addition to the core component configuration, like network
    authentication and security, AutoYaST offers a wide range of hardware and
    system configuration options, the same as available by default on any
    system installed manually and in an interactive way. For example, it is
    possible to configure printers, sound devices, TV cards and any other
    hardware components which have a module within YaST.
   </para>
      <para>
    Any new configuration options added to YaST will be automatically
    available in AutoYaST.
   </para>
      <sect2 xml:id="CreateProfile.Hardware.Printer">
        <title>Printer</title>
        <para>
     AutoYaST support for printing is limited to basic settings defining how the
     CUPS printing system is used on a client for printing via the network.
    </para>
        <para>
     There is no AutoYaST support for setting up local print queues. Modern
     printers are usually connected via USB. CUPS accesses USB printers by a
     model-specific device URI like
     <literal>usb://ACME/FunPrinter?serial=1a2b3c</literal>. Usually it is
     not possible to predict the correct USB device URI in advance, because
     it is determined by the CUPS backend <literal>usb</literal> during
     runtime. Therefore it is not possible to set up local print queues with
     AutoYaST.
    </para>
        <para>
     Basics on how CUPS is used on a client workstation to print via
     network:
    </para>
        <para>
     On client workstations application programs submit print jobs to the
     CUPS daemon process (<systemitem>cupsd</systemitem>).
     <systemitem>cupsd</systemitem> forwards the print jobs to a CUPS print
     server in the network where the print jobs are processed. The server
     sends the printer specific data to the printer device.
    </para>
        <para>
     If there is only a single CUPS print server in the network, there is no
     need to have a CUPS daemon running on each client workstation. Instead
     it is simpler to specify the CUPS server in
     <filename>/etc/cups/client.conf</filename> and access it directly (only
     one CUPS server entry can be set). In this case application programs
     that run on client workstations submit print jobs directly to the
     specified CUPS print server.
    </para>
        <para><xref linkend="printer.conf"/> shows a <literal>printer</literal>
     configuration section. The <literal>cupsd_conf_content</literal> entry
     contains the whole verbatim content of the
     <systemitem class="daemon">cupsd</systemitem> configuration file
     <filename>/etc/cups/cupsd.conf</filename>. The
     <literal>client_conf_content</literal> entry contains the whole
     verbatim content of <filename>/etc/cups/client.conf</filename>. The
     <literal>printer</literal> section contains the
     <systemitem class="daemon">cupsd</systemitem> configuration but it
     does not specify whether or not the cupsd should run.
    </para>
        <example xml:id="printer.conf">
          <title>Printer configuration</title>
          <screen>  &lt;printer&gt;
    &lt;client_conf_content&gt;
      &lt;file_contents&gt;&lt;![CDATA[
... verbatim content of /etc/cups/client.conf ...
]]&gt;&lt;/file_contents&gt;
    &lt;/client_conf_content&gt;
    &lt;cupsd_conf_content&gt;
      &lt;file_contents&gt;&lt;![CDATA[
... verbatim content of /etc/cups/cupsd.conf ...
]]&gt;&lt;/file_contents&gt;
    &lt;/cupsd_conf_content&gt;
  &lt;/printer&gt;</screen>
        </example>
        <note>
          <title>
            <filename>/etc/cups/cups-files.conf</filename>
          </title>
          <para>
      With release 1.6 the CUPS configuration file has been split into two
      files: <filename>cupsd.conf</filename> and
      <filename>cups-files.conf</filename>. As of <phrase role="productname"><phrase os="osuse">openSUSE</phrase><phrase os="sles">SUSE Linux Enterprise Server</phrase><phrase os="sled">SUSE Linux Enterprise Desktop</phrase><phrase os="slerte">SUSE Linux Enterprise Real Time Extension</phrase></phrase> 12, AutoYaST
      only supports modifying <filename>cupsd.conf</filename> since the
      default settings in <filename>cups-files.conf</filename> are
      sufficient for usual printing setups.
     </para>
        </note>
      </sect2>
      <sect2 xml:id="CreateProfile.Hardware.Sound">
        <title>Sound devices</title>
        <para>
     An example of the sound configuration created using the configuration
     system is shown below.
    </para>
        <example>
          <title>Sound configuration</title>
          <screen>&lt;sound&gt;
  &lt;autoinstall config:type="boolean"&gt;true&lt;/autoinstall&gt;
  &lt;modules_conf config:type="list"&gt;
    &lt;module_conf&gt;
      &lt;alias&gt;snd-card-0&lt;/alias&gt;
      &lt;model&gt;M5451, ALI&lt;/model&gt;
      &lt;module&gt;snd-ali5451&lt;/module&gt;
      &lt;options&gt;
        &lt;snd_enable&gt;1&lt;/snd_enable&gt;
        &lt;snd_index&gt;0&lt;/snd_index&gt;
        &lt;snd_pcm_channels&gt;32&lt;/snd_pcm_channels&gt;
      &lt;/options&gt;         
    &lt;/module_conf&gt;
  &lt;/modules_conf&gt;
  &lt;volume_settings config:type="list"&gt;
    &lt;listentry&gt;
      &lt;Master config:type="integer"&gt;75&lt;/Master&gt;
    &lt;/listentry&gt;
  &lt;/volume_settings&gt;
&lt;/sound&gt;</screen>
        </example>
      </sect2>
    </sect1>
  </chapter>
  <!-- fs 2014-09-24:
     Commenting since this short chapter does not provide new information
     This is already covered in greater detail in the Deployment Guide

 <chapter id="Bootmanagement">
  <title>Network-based Installation</title>
  <para>
   &ay; provides a method to automatically and identically install
   groups of systems. The first step when preparing a &ay; installation
   is to decide how you want to install the target systems. The following
   scenario is a good example for how to set up and perform automated
   installations:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     You need to install &sle; on 50 new systems.
    </para>
   </listitem>
   <listitem>
    <para>
     The development department owns 30 out of the 50 new dual processor and
     SCSI systems, and these systems must be installed as clients with
     development software.
    </para>
   </listitem>
   <listitem>
    <para>
     The sales department owns 20 out of the 50 new, uni-processor IDE based
     systems and its systems must be installed as clients with end user
     software and office tools.
    </para>
    <remark>emap 2011-11-07: What about the remaining new systems? Will they be needed in this example? If not better let R&amp;D buy 30 new machines and Sales 20 new ones with different hardware. Um, reading to the end of this file, I wonder if we need this example at all? It's not being used to explain anything. It rather gets in the way. We don't even explain how the different hardware is handled.</remark>
   </listitem>
  </itemizedlist>
  <para>
   Prerequisites:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     a boot server on the same Ethernet segment,
    </para>
   </listitem>
   <listitem>
    <para>
     an installation server with the SuSE Linux OS,
    </para>
    <remark>emap 2011-11-07: Rather with the installation sources? </remark>
   </listitem>
   <listitem>
    <para>
     an &ay; configuration server that defines rules and control files.
     <remark>emap 2011-11-07: This is the first mention of a config server. Is it really needed?</remark>
    </para>
   </listitem>
  </itemizedlist>

  <sect1>
   <title>Configuration Server</title>

   <para>
    A configuration repository holds the control files for multiple
    machines. The control files can have any file names, which have to be
    specified at the boot time of a target client. To avoid supplying the
    control file name for every client, you can define the directory of the
    control files. If a directory is specified, then the target client tries
    to load a file with a name matching its IP address in HEX mode. This has
    the advantage that you will be dealing with consistent file names rather
    than IPs as file names which might lead to some confusion.
    <remark>emap 2011-11-07: Sounds like no dedicated server is needed, only a repository.</remark>
   </para>

   <para>
    The configuration repository is the same directory you specify when
    using the configuration system for creating control files.
   </para>

   <sect2>
    <title>HTTP Repository</title>
    <para>
     To be able to use the HTTP protocol to
     retrieve control files while auto-installing, you need a working
     HTTP server on the server side. Install
     <emphasis>Apache</emphasis> or another Web server and enable it
     using &yast;. Normally the Web server root directory resides in
     <filename>/srv/www/htdocs</filename> so you need to create a
     subdirectory which will serve your configuration repository.
    </para>
   </sect2>

   <sect2>
    <title>NFS Repository</title>
    <para>
     Create a directory and export it via
     NFS to the target clients. This
     directory may the same location where you have copied the CDs. (i.e.
     <filename>/usr/local/SuSE</filename>).
     <remark>emap 2011-11-07: Change CDs to installation source/repository?</remark>
    </para>
   </sect2>

   <sect2>
    <title>TFTP Repository</title>
    <para>
     By default the TFTP directory is
     available under <filename>/tftpboot</filename> which can also contain
     boot images if you are booting over network. Do not forget to enable
     TFTP in the Inetd configuration file
     (<filename>/etc/inetd.conf</filename>). <emphasis>Inetd</emphasis>
     configuration can be done via &yast;.
    </para>
   </sect2>
  </sect1>
 </chapter>
-->
  <chapter xml:id="rulesandclass">
    <title>Rules and Classes</title>
    <para/>
    <sect1 xml:id="rules">
      <title>Rules-based Automatic Installation</title>
      <para>
    Rules offer the possibility to configure a system depending on system
    attributes by merging multiple control files during installation. The
    rules-based installation is controlled by a rules file. This is useful
    to install, for example, systems in two departments in one go. Assume a
    scenario where machines in department A need to be installed as office
    desktops, whereas machines in department B need to be installed as
    developer workstations. You would create a rules file with two different
    rules. For each rule, you could use different system parameters to
    distinguish the installations from one another. Each rule would also
    contain a link to an appropriate profile for each department.
   </para>
      <para>
    The rules file is an XML file containing rules for each group of systems
    (or single systems) that you want to automatically install. A set of
    rules distinguish a group of systems based on one or more system
    attributes. After passing all rules, each group of systems is linked to
    a control file. Both the rules file and the control files must be
    located in a pre-defined and accessible location.
   </para>
      <para>
    The rules file is retrieved only if no specific control file is supplied
    using the <literal>autoyast</literal> keyword. For example, if the
    following is used, the rules file will not be evaluated:
   </para>
      <screen>autoyast=http://10.10.0.1/profile/myprofile.xml
autoyast=http://10.10.0.1/profile/rules/rules.xml</screen>
      <para>
    Instead use:
   </para>
      <screen>autoyast=http://10.10.0.1/profile/</screen>
      <para>
    which will load
    <literal>http://10.10.0.1/profile/rules/rules.xml</literal> (the slash
    at the end of the directory name is important).
   </para>
      <figure xml:id="rules_fig1">
        <title>Rules</title>
        <mediaobject>
          <imageobject role="html">
            <imagedata fileref="autoyast_rules.png"/>
          </imageobject>
          <imageobject role="fo">
            <imagedata fileref="autoyast_rules.svg" width="75%"/>
          </imageobject>
        </mediaobject>
      </figure>
      <para>
    If more than one rule applies, the final control file for each group is
    generated on the fly using a merge script. The merging process is based
    on the order of the rules and later rules override configuration data in
    earlier rules. Note that the names of the top sections in the merged xml
    files need to be in alphabetical order for the merge to succeed.
   </para>
      <para>
    The use of a rules file is optional. If the rules file is not found,
    system installation proceeds in the classic way by only using the
    supplied control file or by searching for the control file depending on
    the MAC or the IP address of the system.
   </para>
      <sect2 xml:id="rulesfile">
        <title>Rules File Explained</title>
        <example>
          <title>Simple Rules File</title>
          <para>
      The following simple example illustrates how the rules file is used to
      retrieve the configuration for a client with known hardware.
     </para>
          <screen>&lt;?xml version="1.0"?&gt;
&lt;!DOCTYPE autoinstall&gt;
&lt;autoinstall xmlns="http://www.suse.com/1.0/yast2ns" xmlns:config="http://www.suse.com/1.0/configns"&gt;
  &lt;rules config:type="list"&gt;
    &lt;rule&gt;
       &lt;disksize&gt;
            &lt;match&gt;/dev/sdc 1000&lt;/match&gt;
            &lt;match_type&gt;greater&lt;/match_type&gt;
       &lt;/disksize&gt;
       &lt;result&gt;
            &lt;profile&gt;department_a.xml&lt;/profile&gt;
            &lt;continue config:type="boolean"&gt;false&lt;/continue&gt;
        &lt;/result&gt;
    &lt;/rule&gt;
    &lt;rule&gt;
       &lt;disksize&gt;
            &lt;match&gt;/dev/sda 1000&lt;/match&gt;
            &lt;match_type&gt;greater&lt;/match_type&gt;
       &lt;/disksize&gt;
       &lt;result&gt;
            &lt;profile&gt;department_b.xml&lt;/profile&gt;
            &lt;continue config:type="boolean"&gt;false&lt;/continue&gt;
        &lt;/result&gt;
    &lt;/rule&gt;
  &lt;/rules&gt;
&lt;/autoinstall&gt;</screen>
        </example>
        <para>
     The last example defines two rules and provides a different control
     file for every rule. The rule used in this case is
     <literal>disksize</literal>. After parsing the rules file, YaST
     attempts to match the target system with the rules in the
     <filename>rules.xml</filename> file. A rule match occurs when the
     target system matches all system attributes defined in the rule. As
     soon as the system matches a rule, the respective resource is added to
     the stack of control files AutoYaST will use to create the final control
     file. The <literal>continue</literal> property tells AutoYaST whether it
     should continue with other rules after a match has been found.
    </para>
        <para>
     If the first rule does not match, the next rule in the list is examined
     until a match is found.
    </para>
        <para>
     Using the <literal>disksize</literal> attribute, you can provide
     different configurations for systems with hard drives of different
     sizes. The first rule checks if the device
     <filename>/dev/sdc</filename> is available and if it is greater than 1
     GB in size using the <literal>match</literal> property.
    </para>
        <para>
     A rule must have at least one attribute to be matched. If you need to
     check more attributes, i.e. memory or architectures, you can add more
     attributes in the rule resource as shown in the next example.
    </para>
        <example>
          <title>Simple Rules File</title>
          <para>
      The following example illustrates how the rules file is used to
      retrieve the configuration for a client with known hardware.
     </para>
          <screen>&lt;?xml version="1.0"?&gt;
&lt;!DOCTYPE autoinstall&gt; 
&lt;autoinstall xmlns="http://www.suse.com/1.0/yast2ns" xmlns:config="http://www.suse.com/1.0/configns"&gt;
  &lt;rules config:type="list"&gt;
    &lt;rule&gt;
       &lt;disksize&gt;
            &lt;match&gt;/dev/sdc 1000&lt;/match&gt;
            &lt;match_type&gt;greater&lt;/match_type&gt;
       &lt;/disksize&gt;
       &lt;memsize&gt;	    
            &lt;match&gt;1000&lt;/match&gt;
            &lt;match_type&gt;greater&lt;/match_type&gt;
       &lt;/memsize&gt;
       &lt;result&gt;
            &lt;profile&gt;department_a.xml&lt;/profile&gt;
            &lt;continue config:type="boolean"&gt;false&lt;/continue&gt;
        &lt;/result&gt;
    &lt;/rule&gt;
    &lt;rule&gt;
       &lt;disksize&gt;
            &lt;match&gt;/dev/shda 1000&lt;/match&gt;
            &lt;match_type&gt;greater&lt;/match_type&gt;
       &lt;/disksize&gt;
       &lt;memsize&gt;	    
            &lt;match&gt;256&lt;/match&gt;
            &lt;match_type&gt;greater&lt;/match_type&gt;
       &lt;/memsize&gt;
       &lt;result&gt;
            &lt;profile&gt;department_b.xml&lt;/profile&gt;
            &lt;continue config:type="boolean"&gt;false&lt;/continue&gt;
        &lt;/result&gt;
    &lt;/rule&gt;
  &lt;/rules&gt;
&lt;/autoinstall&gt;</screen>
        </example>
        <para>
     The rules directory must be located in the same directory specified via
     the <literal>autoyast</literal> keyword at boot time. If the client was
     booted using <literal>autoyast=http://10.10.0.1/profiles/</literal>,
     AutoYaST will search for the rules file at
     http://10.10.0.1/profiles/rules/rules.xml.
    </para>
      </sect2>
      <sect2 xml:id="customrules">
        <title>Custom Rules</title>
        <para>
     If the attributes AutoYaST provides for rules are not enough for your
     purposes, use custom rules. Custom rules contain a shell script. The
     output of the script (STDOUT, STDERR is ignored) can be evaluated.
    </para>
        <para>
     Here is an example for the use of custom rules:
    </para>
        <screen>&lt;rule&gt;
  &lt;custom1&gt;
    &lt;script&gt;
if grep -i intel /proc/cpuinfo &gt; /dev/null; then
echo -n "intel"
else
echo -n "non_intel"
fi;
    &lt;/script&gt;
    &lt;match&gt;*&lt;/match&gt;
    &lt;match_type&gt;exact&lt;/match_type&gt;
  &lt;/custom1&gt;
  &lt;result&gt;
    &lt;profile&gt;@custom1@.xml&lt;/profile&gt;
    &lt;continue config:type="boolean"&gt;true&lt;/continue&gt;
  &lt;/result&gt;
&lt;/rule&gt;</screen>
        <para>
     The script in this rule can echo either <literal>intel</literal> or
     <literal>non_intel</literal> to STDOUT (the output of the grep command
     must be directed to /dev/null in this case). The output of the rule
     script will be filled between the two '@' characters, to determine the
     filename of the control file to fetch. AutoYaST will read the output and
     fetch a file with the name <filename>intel.xml</filename> or
     <filename>non_intel.xml</filename>. This file can contain the AutoYaST
     profile part for the software selection, for example, in case you want
     a different software selection on intel hardware than on others.
    </para>
        <para>
     The number of custom rules is limited to five. So you can use
     <literal>custom1</literal> to <literal>custom5</literal>.
    </para>
      </sect2>
      <sect2 xml:id="matchtypes">
        <title>Match Types for Rules</title>
        <para>
     You can use five different match_types:
    </para>
        <itemizedlist>
          <listitem>
            <para><literal>exact</literal> (default)
      </para>
          </listitem>
          <listitem>
            <para>
              <literal>greater</literal>
            </para>
          </listitem>
          <listitem>
            <para>
              <literal>lower</literal>
            </para>
          </listitem>
          <listitem>
            <para>
              <literal>range</literal>
            </para>
          </listitem>
          <listitem>
            <para><literal>regex</literal> (a simple <literal>=~</literal> operator
       like in Bash)
      </para>
          </listitem>
        </itemizedlist>
        <para>
     If using <literal>exact</literal>, the string must match exactly as
     specified. <literal>regex</literal> can be used to match substrings
     like <literal>ntel</literal> will match Intel, intel and intelligent.
     <literal>greater</literal> and <literal>lower</literal> can be used for
     memsize or totaldisk for example. They can match only with rules that
     return an integer value. A range is only possible for integer values
     too and has the form of <literal>value1-value2</literal>, for example
     <literal>512-1024</literal>.
    </para>
      </sect2>
      <sect2 xml:id="rulescombination">
        <title>Combine Attributes</title>
        <para>
     Multiple attributes can be combined via a logical operator. It is
     possible to let a rule match if disksize is greater than 1GB or memsize
     is exactly 512MB.
    </para>
        <para>
     You can do this with the <literal>operator</literal> element in the
     rules.xml file. <literal>and</literal> and <literal>or</literal> are
     possible operators, <literal>and</literal> being the default. Here is
     an example:
    </para>
        <screen>&lt;rule&gt;
  &lt;disksize&gt;
    &lt;match&gt;/dev/sda 1000&lt;/match&gt;
    &lt;match_type&gt;greater&lt;/match_type&gt;
  &lt;/disksize&gt;
  &lt;memsize&gt;	    
    &lt;match&gt;256&lt;/match&gt;
    &lt;match_type&gt;greater&lt;/match_type&gt;
  &lt;/memsize&gt;
  &lt;result&gt;
    &lt;profile&gt;machine2.xml&lt;/profile&gt;
    &lt;continue config:type="boolean"&gt;false&lt;/continue&gt;
  &lt;/result&gt;
  &lt;operator&gt;or&lt;/operator&gt;
&lt;/rule&gt;</screen>
      </sect2>
      <sect2 xml:id="rulesstructure">
        <title>Rules File Structure</title>
        <para>
     The <filename>rules.xml</filename> file needs to:
    </para>
        <itemizedlist>
          <listitem>
            <para>
       have at least one rule,
      </para>
          </listitem>
          <listitem>
            <para>
       have the name <filename>rules.xml</filename>,
      </para>
          </listitem>
          <listitem>
            <para>
       be located in the directory <filename>rules</filename> in the profile
       repository,
      </para>
          </listitem>
          <listitem>
            <para>
       have at least one attribute to match in the rule.
      </para>
          </listitem>
        </itemizedlist>
      </sect2>
      <sect2 xml:id="ruleattributes">
        <title>Predefined System Attributes</title>
        <para>
     The following table lists the predefined system attributes you can
     match in the rules file.
    </para>
        <para>
     If you are unsure about a value on your system, run
     <command>/usr/lib/YaST/bin/y2base ayast_probe ncurses</command>. The
     text box displaying the detected values can be scrolled. Note that this
     command will not work while another YaST process that requires a lock
     (for example the installer) is running. Therefore you cannot run it
     during the installation.
    </para>
        <table>
          <title>System Attributes</title>
          <tgroup cols="3">
            <thead>
              <row>
                <entry>
                  <para>
          Attribute
         </para>
                </entry>
                <entry>
                  <para>
          Values
         </para>
                </entry>
                <entry>
                  <para>
          Description
         </para>
                </entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>
                  <para>
          hostaddress
         </para>
                </entry>
                <entry>
                  <para>
          IP address of the host
         </para>
                </entry>
                <entry>
                  <para>
          This attribute must always match exactly.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          hostname
         </para>
                </entry>
                <entry>
                  <para>
          The name of the host
         </para>
                </entry>
                <entry>
                  <para>
          This attribute must always match exactly.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          domain
         </para>
                </entry>
                <entry>
                  <para>
          Domain name of host
         </para>
                </entry>
                <entry>
                  <para>
          This attribute must always match exactly.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          installed_product
         </para>
                </entry>
                <entry>
                  <para>
          The name of the product to be installed.
         </para>
                </entry>
                <entry>
                  <para>
          This attribute must always match exactly.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          installed_product_version
         </para>
                </entry>
                <entry>
                  <para>
          The version of the product to be installed.
         </para>
                </entry>
                <entry>
                  <para>
          This attribute must always match exactly.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          network
         </para>
                </entry>
                <entry>
                  <para>
          network address of host
         </para>
                </entry>
                <entry>
                  <para>
          This attribute must always match exactly.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          mac
         </para>
                </entry>
                <entry>
                  <para>
          MAC address of host
         </para>
                </entry>
                <entry>
                  <para>
          This attribute must always match exactly (the MAC addresses should
          have the form <literal>0080c8f6484c</literal>).
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          linux
         </para>
                </entry>
                <entry>
                  <para>
          Number of installed Linux partitions on the system
         </para>
                </entry>
                <entry>
                  <para>
          This attribute can be 0 or more.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          others
         </para>
                </entry>
                <entry>
                  <para>
          Number of installed non-Linux partitions on the system
         </para>
                </entry>
                <entry>
                  <para>
          This attribute can be 0 or more.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          xserver
         </para>
                </entry>
                <entry>
                  <para>
          X Server needed for graphic adapter
         </para>
                </entry>
                <entry>
                  <para>
          This attribute must always match exactly.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          memsize
         </para>
                </entry>
                <entry>
                  <para>
          Memory available on host in MBytes
         </para>
                </entry>
                <entry>
                  <para>
          All match types are available.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          totaldisk
         </para>
                </entry>
                <entry>
                  <para>
          Total disk space available on host in MBytes
         </para>
                </entry>
                <entry>
                  <para>
          All match types are available.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          haspcmcia
         </para>
                </entry>
                <entry>
                  <para>
          System has PCMCIA (i.e Laptops)
         </para>
                </entry>
                <entry>
                  <para>
          Exact match required, <literal>1</literal> for having PCMCIA or
          <literal>0</literal> for not having it.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          hostid
         </para>
                </entry>
                <entry>
                  <para>
          Hex representation of the IP address
         </para>
                </entry>
                <entry>
                  <para>
          Exact match required
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          arch
         </para>
                </entry>
                <entry>
                  <para>
          Architecture of host
         </para>
                </entry>
                <entry>
                  <para>
          Exact match required
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          karch
         </para>
                </entry>
                <entry>
                  <para>
          Kernel Architecture of host (i.e. SMP kernel, Xen Kernel)
         </para>
                </entry>
                <entry>
                  <para>
          Exact match required
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          disksize
         </para>
                </entry>
                <entry>
                  <para>
          Drive device and size
         </para>
                </entry>
                <entry>
                  <para>
          All match types are available.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          product
         </para>
                </entry>
                <entry>
                  <para>
          The hardware product name as specified in SMBIOS
         </para>
                </entry>
                <entry>
                  <para>
          Exact match required
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          product_vendor
         </para>
                </entry>
                <entry>
                  <para>
          The hardware vendor as specified in SMBIOS
         </para>
                </entry>
                <entry>
                  <para>
          Exact match required
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          board
         </para>
                </entry>
                <entry>
                  <para>
          The system board name as specified in SMBIOS
         </para>
                </entry>
                <entry>
                  <para>
          Exact match required
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          board_vendor
         </para>
                </entry>
                <entry>
                  <para>
          The system board vendor as specified in SMBIOS
         </para>
                </entry>
                <entry>
                  <para>
          Exact match required
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          custom1-5
         </para>
                </entry>
                <entry>
                  <para>
          Custom rules using shell scripts
         </para>
                </entry>
                <entry>
                  <para>
          All match types are available.
         </para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </sect2>
      <sect2 xml:id="rules_dialogs">
        <title>Rules with Dialogs</title>
        <para>
     You can use dialog pop-ups with checkboxes to select rules you want
     matched.
    </para>
        <para>
     The elements listed below must be placed within the following XML
     structure in the <filename>rules.xml</filename> file:
    </para>
        <screen>&lt;rules config:type="list"&gt;
  &lt;rule&gt;
    &lt;dialog&gt;
      ...
    &lt;/dialog&gt;
  &lt;/rule&gt;
&lt;/rules&gt;</screen>
        <informaltable>
          <tgroup cols="3">
            <thead>
              <row>
                <entry>
                  <para>
          Attribute
         </para>
                </entry>
                <entry>
                  <para>
          Values
         </para>
                </entry>
                <entry>
                  <para>
          Description
         </para>
                </entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>
                  <para>
          dialog_nr
         </para>
                </entry>
                <entry>
                  <para>
          All rules with the same <literal>dialog_nr</literal> are presented
          in the same pop-up dialog. The same <literal>dialog_nr</literal>
          can appear in multiple rules.
         </para>
                  <screen>&lt;dialog_nr config:type="integer"&gt;3&lt;/dialog_nr&gt;</screen>
                </entry>
                <entry>
                  <para>
          This element is optional and the default for a missing dialog_nr
          is always <literal>0</literal>. If you want to use one pop-up for
          all rules, you don't need to specify the
          <literal>dialog_nr</literal>.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          element
         </para>
                </entry>
                <entry>
                  <para>
          Specify a unique ID. Even if you have more than one dialog, you
          must not use the same id twice. Using id <literal>1</literal> on
          dialog 1 and and id <literal>1</literal> on dialog 2 is not
          supported. (This behavior is contrary to the
          <literal>ask</literal> dialog, where you can have the same ID for
          multiple dialogs.)
         </para>
                  <screen>&lt;element config:type="integer"&gt;3&lt;/element&gt;</screen>
                </entry>
                <entry>
                  <para>
          Optional. If left out, AutoYaST adds its own ids internally. Then you
          cannot specify conflicting rules (see below).
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          title
         </para>
                </entry>
                <entry>
                  <para>
          Caption of the pop-up dialog
         </para>
                  <screen>&lt;title&gt;Desktop Selection&lt;/title&gt;</screen>
                </entry>
                <entry>
                  <para>
          Optional
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          question
         </para>
                </entry>
                <entry>
                  <para>
          Question shown in the pop-up behind the checkbox.
         </para>
                  <screen>&lt;question&gt;GNOME Desktop&lt;/question&gt;</screen>
                </entry>
                <entry>
                  <para>
          Optional. If you don't configure a text here, the name of the XML
          file that is triggered by this rule will be shown instead.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          timeout
         </para>
                </entry>
                <entry>
                  <para>
          Timeout in seconds after which the dialog will automatically
          <quote>press</quote> the okay button. Useful for a non-blocking
          installation in combination with rules dialogs.
         </para>
                  <screen>&lt;timeout config:type="integer"&gt;30&lt;/timeout&gt;</screen>
                </entry>
                <entry>
                  <para>
          Optional. A missing timeout will stop the installation process
          until the dialog is confirmed by the user.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          conflicts
         </para>
                </entry>
                <entry>
                  <para>
          A list of element ids (rules) that conflict with this rule. If
          this rule matches or is selected by the user, all conflicting
          rules are deselected and disabled in the pop-up. Take care that
          you do not create deadlocks.
         </para>
                  <screen>&lt;conflicts config:type="list"&gt;
  &lt;element config:type="integer"&gt;1&lt;/element&gt;
  &lt;element config:type="integer"&gt;5&lt;/element&gt;
  ...
&lt;/conflicts&gt;</screen>
                </entry>
                <entry>
                  <para>
          optional
         </para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
        <para>
     Here is an example of how to use dialogs with rules:
    </para>
        <screen>&lt;rules config:type="list"&gt;
  &lt;rule&gt;
    &lt;custom1&gt;
      &lt;script&gt;
echo -n 100
      &lt;/script&gt;
      &lt;match&gt;100&lt;/match&gt;
      &lt;match_type&gt;exact&lt;/match_type&gt;
    &lt;/custom1&gt;
    &lt;result&gt;
      &lt;profile&gt;rules/gnome.xml&lt;/profile&gt;
      &lt;continue config:type="boolean"&gt;true&lt;/continue&gt;
    &lt;/result&gt;
    &lt;dialog&gt;
      &lt;element config:type="integer"&gt;0&lt;/element&gt;
      &lt;question&gt;GNOME Desktop&lt;/question&gt;
      &lt;title&gt;Desktop Selection&lt;/title&gt;
      &lt;conflicts config:type="list"&gt;
        &lt;element config:type="integer"&gt;1&lt;/element&gt;
      &lt;/conflicts&gt;
      &lt;dialog_nr config:type="integer"&gt;0&lt;/dialog_nr&gt;
    &lt;/dialog&gt;
  &lt;/rule&gt;
  &lt;rule&gt;
    &lt;custom1&gt;
      &lt;script&gt;
echo -n 100
      &lt;/script&gt;
      &lt;match&gt;101&lt;/match&gt;
      &lt;match_type&gt;exact&lt;/match_type&gt;
    &lt;/custom1&gt;
    &lt;result&gt;
      &lt;profile&gt;rules/gnome.xml&lt;/profile&gt;
      &lt;continue config:type="boolean"&gt;true&lt;/continue&gt;
    &lt;/result&gt;
    &lt;dialog&gt;
      &lt;element config:type="integer"&gt;1&lt;/element&gt;
      &lt;dialog_nr config:type="integer"&gt;0&lt;/dialog_nr&gt;
      &lt;question&gt;Gnome Desktop&lt;/question&gt;
      &lt;conflicts config:type="list"&gt;
        &lt;element config:type="integer"&gt;0&lt;/element&gt;
      &lt;/conflicts&gt;
    &lt;/dialog&gt;
  &lt;/rule&gt;
  &lt;rule&gt;
    &lt;custom1&gt;
      &lt;script&gt;
echo -n 100
      &lt;/script&gt;
      &lt;match&gt;100&lt;/match&gt;
      &lt;match_type&gt;exact&lt;/match_type&gt;
    &lt;/custom1&gt;
    &lt;result&gt;
      &lt;profile&gt;rules/all_the_rest.xml&lt;/profile&gt;
      &lt;continue config:type="boolean"&gt;false&lt;/continue&gt;
    &lt;/result&gt;
  &lt;/rule&gt;
&lt;/rules&gt;</screen>
      </sect2>
    </sect1>
    <sect1 xml:id="classes">
      <title>Classes</title>
      <para>
    Classes represent configurations for groups of target systems. Unlike
    rules, classes have to be configured in the control file. Then classes
    can be assigned to target systems.
   </para>
      <para>
    Here is an example of a class definition:
   </para>
      <screen>&lt;classes config:type="list"&gt;
  &lt;class&gt;
    &lt;class_name&gt;TrainingRoom&lt;/class_name&gt;
    &lt;configuration&gt;Software.xml&lt;/configuration&gt;
  &lt;/class&gt;
&lt;/classes&gt;</screen>
      <para>
    In the example abaopve, the file <filename>Software.xml</filename> must
    be placed in the subdirectory <filename>classes/TrainingRoom/</filename>
    It will get fetched from the same place the AutoYaST control file and rules
    were fetched from.
   </para>
      <para>
    If you have multiple control files and those control files share parts,
    better use classes for common parts.
<!--You just have to change the class and all profiles using that class are fixed too.--><remark>emap 2011-11-07: Sentence doesn't make sense.</remark>
    You can also use XIncludes.
   </para>
      <para>
    Using the configuration management system, you can define a set of
    classes. A class definition consists of the following variables:
   </para>
      <itemizedlist>
        <listitem>
          <para>
      Name: class name
     </para>
        </listitem>
        <listitem>
          <para>
      Description:
     </para>
        </listitem>
        <listitem>
          <para>
      Order: order (or priority) of the class in the stack of migration
      <remark>emap 2011-11-07: What migration?</remark></para>
        </listitem>
      </itemizedlist>
      <figure>
        <title>Defining Classes</title>
        <mediaobject>
          <imageobject role="html">
            <imagedata fileref="cms-class-definitions.png"/>
          </imageobject>
          <imageobject role="fo">
            <imagedata fileref="cms-class-definitions.png" width="75%"/>
          </imageobject>
        </mediaobject>
      </figure>
      <para>
    You can create as many classes as you need, however it is recommended to
    keep the set of classes as small as possible to keep the configuration
    system concise. For example, the following sets of classes can be used:
   </para>
      <itemizedlist>
        <listitem>
          <para>
      site: classes describing a physical location or site,
     </para>
        </listitem>
        <listitem>
          <para>
      machine: classes describing a type of machine,
     </para>
        </listitem>
        <listitem>
          <para>
      role: classes describing the function of the machine,
     </para>
        </listitem>
        <listitem>
          <para>
      group: classes describing a department or a group within a site or a
      location.
     </para>
        </listitem>
      </itemizedlist>
      <para>
    A file saved in a class directory can have the same syntax and format as
    a regular control file but represents a subset of the configuration. For
    example, to create a new control file for a special computer with a
    specific network interface, only the control file resource which
    controls the configuration of the network is needed. Having multiple
    network types, you can merge the one needed for a special type of
    hardware with other class files and create a new control file which
    suits the system being installed.
    <remark>emap 2011-11-07: Not very clear.</remark></para>
    </sect1>
    <sect1 xml:id="mixinfrulesclasses">
      <title>Mixing Rules and Classes</title>
      <para>
    It is possible to mix rules and classes during an auto-installation
    session. For example you can identify a system using rules which contain
    class definitions in them. The process is described in the figure
    <quote><xref linkend="rulesflow"/></quote>.
   </para>
      <para>
    After retrieving the rules and merging them, the generated control file
    is parsed and checked for class definitions. If classes are defined,
    then the class files are retrieved from the original repository and a
    new merge process is initiated.
   </para>
    </sect1>
    <sect1 xml:id="merging">
      <title>Merging of Rules and Classes</title>
      <para>
    With classes and with rules, multiple XML files get merged into one
    resulting XML file. This merging process is often confusing for people,
    because it behaves different than one would expect. First of all it is
    important to note that the names of the top sections in the merged XML
    files need to be in alphabetical order for the merge to succeed.
   </para>
      <para>
    For example, the following two XML parts should be merged:
   </para>
      <screen>&lt;partitioning config:type="list"&gt;
  &lt;drive&gt;
    &lt;partitions config:type="list"&gt;
      &lt;partition&gt;
        &lt;filesystem config:type="symbol"&gt;swap&lt;/filesystem&gt;
        &lt;format config:type="boolean"&gt;true&lt;/format&gt;
        &lt;mount&gt;swap&lt;/mount&gt;
        &lt;partition_id config:type="integer"&gt;130&lt;/partition_id&gt;
        &lt;size&gt;2000mb&lt;/size&gt;
      &lt;/partition&gt;
      &lt;partition&gt;
        &lt;filesystem config:type="symbol"&gt;xfs&lt;/filesystem&gt;
        &lt;partition_type&gt;primary&lt;/partition_type&gt;
        &lt;size&gt;4Gb&lt;/size&gt;
        &lt;mount&gt;/data&lt;/mount&gt;
      &lt;/partition&gt;
    &lt;/partitions&gt;
  &lt;/drive&gt;
&lt;/partitioning&gt;</screen>
      <screen>&lt;partitioning config:type="list"&gt;
  &lt;drive&gt;
    &lt;initialize config:type="boolean"&gt;false&lt;/initialize&gt;
    &lt;partitions config:type="list"&gt;
      &lt;partition&gt;
        &lt;format config:type="boolean"&gt;true&lt;/format&gt;
        &lt;filesystem config:type="symbol"&gt;xfs&lt;/filesystem&gt;
        &lt;mount&gt;/&lt;/mount&gt;
        &lt;partition_id config:type="integer"&gt;131&lt;/partition_id&gt;
        &lt;partition_type&gt;primary&lt;/partition_type&gt;
        &lt;size&gt;max&lt;/size&gt;
      &lt;/partition&gt;
    &lt;/partitions&gt;
    &lt;use&gt;all&lt;/use&gt;
  &lt;/drive&gt;
&lt;/partitioning&gt;</screen>
      <para>
    You might expect the control file to contain 3 partitions. This is not
    the case. You'll end up with two partitions and the first partition is a
    mixup of the swap and the root partition. Settings configured in both
    partitions, like <literal>mount</literal> or <literal>size</literal>,
    will be used from the second file. Settings that only exist in the first
    or second partition, will be copied to the merged partition too.
    <remark>emap 2011-11-07: A little confusing, why not put the merged file here.</remark></para>
      <para>
    In this example, you do not want a second <literal>drive</literal>. The
    two drives should be merged into one. With regard to partitions, three
    separate ones should be defined. Using the <literal>dont_merge</literal>
    method solves the merging problem:
   </para>
      <screen>&lt;classes config:type="list"&gt;
  &lt;class&gt;
    &lt;class_name&gt;swap&lt;/class_name&gt;
    &lt;configuration&gt;largeswap.xml&lt;/configuration&gt;
    &lt;dont_merge config:type="list"&gt;
      &lt;element&gt;partition&lt;/element&gt;
    &lt;/dont_merge&gt;
  &lt;/class&gt;
&lt;/classes&gt;</screen>
      <screen>&lt;rule&gt;
  &lt;board_vendor&gt;
    &lt;match&gt;ntel&lt;/match&gt;
    &lt;match_type&gt;regex&lt;/match_type&gt;
  &lt;/board_vendor&gt;
  &lt;result&gt;
    &lt;profile&gt;classes/largeswap.xml&lt;/profile&gt;
    &lt;continue config:type="boolean"&gt;true&lt;/continue&gt;
    &lt;dont_merge config:type="list"&gt;
      &lt;element&gt;partition&lt;/element&gt;
    &lt;/dont_merge&gt;
  &lt;/result&gt;
  &lt;board_vendor&gt;
    &lt;match&gt;PowerEdge [12]850&lt;/match&gt;
    &lt;match_type&gt;regex&lt;/match_type&gt;
  &lt;/board_vendor&gt;
  &lt;result&gt;
    &lt;profile&gt;classes/smallswap.xml&lt;/profile&gt;
    &lt;continue config:type="boolean"&gt;true&lt;/continue&gt;
    &lt;dont_merge config:type="list"&gt;
      &lt;element&gt;partition&lt;/element&gt;
    &lt;/dont_merge&gt;
  &lt;/result&gt;
&lt;/rule&gt;</screen>
    </sect1>
  </chapter>
  <chapter xml:id="Invoking">
    <title>The Auto-Installation Process</title>
    <para/>
    <sect1 xml:id="Installation.process">
      <title>Introduction</title>
      <para>
    After the system has booted into an automatic installation and the
    control file has been retrieved, YaST configures the system according
    to the information provided in the control file. All configuration
    settings are summarized in a window that is shown by default and should
    be deactivated if a fully automatic installation is needed.
   </para>
      <para>
    By the time YaST displays the summary of the configuration, YaST has
    only probed hardware and prepared the system for auto-installation.
    Nothing has been changed in the system yet. In case of any error, you
    can still abort the process.
   </para>
      <para>
    A system should be automatically installable without the need to have
    any graphic adaptor or monitor. Having a monitor attached to the client
    machine is nevertheless recommended so you can supervise the process and
    to get feedback in case of errors. Choose between the graphical and the
    text-based Ncurses interfaces. For headless clients, system messages can
    be monitored using the serial console.
   </para>
      <sect2 xml:id="Installation.Interface.X11">
        <title>X11 Interface (graphical)</title>
        <para>
     This is the default interface while auto-installing. No special
     variables are required to activate it.
    </para>
      </sect2>
      <sect2 xml:id="Installation.Interface.SerialConsole">
        <title>Serial console</title>
        <para>
     Start installing a system using the serial console by adding the
     keyword <literal>console</literal> (i.e.
     <literal>console=ttyS0</literal>) to the command line of the kernel.
     This starts linuxrc in console mode and later YaST in serial console
     mode.
    </para>
      </sect2>
      <sect2 xml:id="Installation.Interface.Ncurses">
        <title>Text-based YaST Installation</title>
        <para>
     This option can also be activated on the command line. To start YaST
     in text mode, add <literal>textmode=1</literal> on the command line.
    </para>
        <para>
     Starting YaST in text mode is recommended when installing a client
     with less than 64 MB or when X11 should not being configured at all,
     especially on headless machines.
    </para>
      </sect2>
    </sect1>
    <sect1 xml:id="bootmedium">
      <title>Choosing the Right Boot Medium</title>
      <para>
    There are different methods for booting the client. The computer can
    boot from its network interface card (NIC) to receive the boot images
    via DHCP or TFTP. Alternatively a suitable kernel and initrd image can
    be loaded from a flash disk or a bootable DVD-ROM.
   </para>
      <para>
    YaST will check for <filename>autoinst.xml</filename> in the root
    directory of the boot medium or the initrd upon start-up and switch to
    an automated installation if it was found. In case the control file is
    named differently or located elsewhere, specify its location on the
    Kernel command line with the parameter
    <literal>AutoYaST=<replaceable>URL</replaceable></literal>.
   </para>
      <sect2>
        <title>Booting from a Flash Disk</title>
        <para>
     For testing/rescue purposes or because the NIC does not have a PROM or
     PXE you can build a bootable flash disk to use with AutoYaST. Flash disks
     can also store the control file.
    </para>
        <tip>
          <title>Creating a Bootable Flash Disk</title>
          <para>
      To create a bootable flash disk, you need to copy either the
      <phrase role="productname"><phrase os="osuse">openSUSE</phrase><phrase os="sles">SUSE Linux Enterprise Server</phrase><phrase os="sled">SUSE Linux Enterprise Desktop</phrase><phrase os="slerte">SUSE Linux Enterprise Real Time Extension</phrase></phrase> iso image of DVD1 or the Mini CD iso image to the disk
      using the dd command (the flash disk must not be mounted, all data on
      the device will be erased):
     </para>
          <screen>dd if=PATH_TO_ISO_IMAGE of=USB_STORAGE_DEVICE bs=4M</screen>
        </tip>
      </sect2>
      <sect2>
        <title>Booting from DVD-ROM</title>
        <para>
     You can use the original <phrase role="productname"><phrase os="osuse">openSUSE</phrase><phrase os="sles">SUSE Linux Enterprise Server</phrase><phrase os="sled">SUSE Linux Enterprise Desktop</phrase><phrase os="slerte">SUSE Linux Enterprise Real Time Extension</phrase></phrase> DVD-ROM number one in
     combination with other media. For example, the control file can be
     provided via a flash disk or a specified location on the network.
     Alternatively, create a customized DVD-ROM that includes the control
     file.
    </para>
      </sect2>
      <sect2>
        <title>Booting via PXE over the Network</title>
        <para>
     Booting via PXE requires a DHCP and a TFTP server in your network. The
     computer will then boot then without a physical medium. Refer to
     <xref linkend="cha.deployment.remoteinst"/> for instructions on
     how to set up the required infrastructure.
    </para>
        <para>
     A problem you might run into if you do installation via PXE is that the
     installation will run into an endless loop, because after the first
     reboot, the machine is doing PXE boot again and restarts the
     installation instead of booting from hard disk for the second stage of
     the installation.
    </para>
        <para>
     This problem can be solved in different ways. One way is to use an http
     server to provide the AutoYaST control file. And, instead of a static
     control file, run a CGI script on the Web server that provides the
     control file and changes the TFTP server configuration for your target
     host. Then the next PXE boot of the machine will be from hard disk by
     default.
    </para>
        <para>
     Another way is to use AutoYaST to upload a new PXE boot configuration for
     the target host via the control file:
    </para>
        <screen>&lt;pxe&gt;
  &lt;pxe_localboot config:type="boolean"&gt;true&lt;/pxe_localboot&gt;
  &lt;pxelinux-config&gt;
    DEFAULT linux
    LABEL linux
    localboot 0
  &lt;/pxelinux-config&gt;
  &lt;tftp-server&gt;192.168.1.115&lt;/tftp-server&gt;
  &lt;pxelinux-dir&gt;/pxelinux.cfg&lt;/pxelinux-dir&gt;
  &lt;filename&gt;__MAC__&lt;/filename&gt;
&lt;/pxe&gt;</screen>
        <para>
     This entry will upload a new configuration for the target host to the
     TFTP server shortly before the first reboot happens. In most
     installations the TFTP daemon runs as user
     <systemitem class="username">nobody</systemitem>. You have to make
     sure this user has write permissions to the
     <filename>pxelinux.cfg</filename> directory. You can also configure the
     filename that will be uploaded. If you use the <quote>magic</quote><literal>__MAC__</literal> filename, the file name will be the MAC
     address of your machine like, for example
     <literal>01-08-00-27-79-49-ee</literal>. If the filename setting is
     missing, the IP address will be used for the filename.
    </para>
        <para>
     If you want to do another auto-installation on the same machine, you
     have to remove the file from the TFTP server.
    </para>
      </sect2>
    </sect1>
    <sect1 xml:id="invoking_autoinst">
      <title>Invoking the Auto-Installation Process</title>
      <para>
        <remark role="fixme">Add a short description</remark>
      </para>
      <sect2>
        <title>Command Line Options</title>
        <para>
     Adding the command line variable <literal>autoyast</literal> causes
     linuxrc to start in automated mode. linuxrc searches for a
     configuration file, which should be distinguished from the main control
     file in the following places:
    </para>
        <itemizedlist>
          <listitem>
            <para>
       in the root directory of the initial RAM disk used for booting the
       system,
      </para>
          </listitem>
          <listitem>
            <para>
       in the root directory of the boot medium
      </para>
          </listitem>
        </itemizedlist>
        <para>
     The configuration file used by linuxrc can have the following keywords
     (for a detailed description of how linuxrc works and other keywords,
     see <xref linkend="appendix.linuxrc"/>):
    </para>
        <table>
          <title>Keywords for linuxrc</title>
          <tgroup cols="2">
            <thead>
              <row>
                <entry>
                  <para>
          Keyword
         </para>
                </entry>
                <entry>
                  <para>
          Value
         </para>
                </entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>
                  <para>
          netdevice
         </para>
                </entry>
                <entry>
                  <para>
          Network device to use for network setup (for BOOTP and DHCP
          requests)
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          server
         </para>
                </entry>
                <entry>
                  <para>
          Server (NFS) to contact for source directory
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          serverdir
         </para>
                </entry>
                <entry>
                  <para>
          Directory on NFS Server
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          hostip
         </para>
                </entry>
                <entry>
                  <para>
          When empty, client sends BOOTP request, otherwise client is
          configured with entered IP configuration.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          netmask
         </para>
                </entry>
                <entry>
                  <para>
          Netmask
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          gateway
         </para>
                </entry>
                <entry>
                  <para>
          Gateway
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          nameserver
         </para>
                </entry>
                <entry>
                  <para>
          Nameserver
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          insmod
         </para>
                </entry>
                <entry>
                  <para>
          Kernel modules to load
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          autoyast
         </para>
                </entry>
                <entry>
                  <para>
          Location of the the control file for automatic installation, i.e.
          <literal>autoyast=http://192.168.2.1/profiles/</literal>.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          install
         </para>
                </entry>
                <entry>
                  <para>
          Location of the installation directory, i.e.
          <literal>install=nfs://192.168.2.1/CDs/</literal>.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          instmode
         </para>
                </entry>
                <entry>
                  <para>
          Installation mode, i.e. nfs, http etc. (not needed if
          <literal>install</literal> is set).
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          y2confirm
         </para>
                </entry>
                <entry>
                  <para>
          Even with &lt;confirm&gt;no&lt;/confirm&gt; in the control file,
          the confirm proposal comes up.
         </para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </table>
        <note>
          <title>No 802.1q tagged VLAN Support</title>
          <para><remark condition="clarity">
       2014-02-20 - fs: FIXME for SLE 11 SP4, see Fate 316140
                        What about SLE 12?
      </remark>
      linuxrc currently supports no 802.1q tagged VLANs. It is planned to
      provide support in upcoming <phrase role="productname"><phrase os="osuse">openSUSE</phrase><phrase os="sles">SUSE Linux Enterprise Server</phrase><phrase os="sled">SUSE Linux Enterprise Desktop</phrase><phrase os="slerte">SUSE Linux Enterprise Real Time Extension</phrase></phrase> versions.
     </para>
        </note>
        <para>
     These variables and keywords will bring the system up to the point
     where YaST can take over with the main control file. Currently, the
     source medium is automatically discovered, which in some cases makes it
     possible to initiate the auto-install process without giving any
     instructions to linuxrc.
    </para>
        <para>
     The traditional linuxrc configuration file (<filename>info</filename>)
     has the function of giving the client enough information about the
     installation server and the location of the sources. In most cases,
     this file is not needed; it is however needed in special network
     environments where DHCP and BOOTP are not used or when special kernel
     modules have to be loaded.
    </para>
        <para>
     All linuxrc keywords can be passed to linuxrc using the kernel command
     line. The command line can also be set when creating network bootable
     images or it can be passed to the kernel using a specially configured
     DHCP server in combination with Etherboot or PXE.
     <remark>emap 2011-11-07:Obscure paragraph. What is set in the command
     line? And what is the 'it' that can be passed to the kernel? Probably not
     the command line itself.</remark></para>
        <para>
     The command line variable <literal>autoyast</literal> can be used in
     the format described in table
     <quote><xref linkend="commandLineAutoYaST"/></quote></para>
        <table xml:id="commandLineAutoYaST">
          <title>Command Line Variables for AutoYaST</title>
          <tgroup cols="2">
            <thead>
              <row>
                <entry>
                  <para>
          Command line variable
         </para>
                </entry>
                <entry>
                  <para>
          Description
         </para>
                </entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>
                  <para>
          autoyast=default
         </para>
                </entry>
                <entry>
                  <para>
          Default auto-installation option.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          autoyast=file:///<replaceable>PATH</replaceable></para>
                </entry>
                <entry>
                  <para>
          Looks for control file in specified path (relative to source root
          directory, i.e. <literal>file:///autoinst.xml</literal> if in the
          top directory of a CD-ROM and you did an installation from CD).
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          autoyast=device://<replaceable>DEVICE</replaceable>/<replaceable>FILENAME</replaceable></para>
                </entry>
                <entry>
                  <para>
          Looks for control file on a storage device. Do not specify the
          full path to the device, but rather the device name only, for
          example You may also omit specifying the device and trigger AutoYaST
          to search all devices
          (<literal>autoyast=device:///<replaceable>FILENAME</replaceable></literal>).
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          autoyast=nfs://<replaceable>SERVER</replaceable>/<replaceable>PATH</replaceable></para>
                </entry>
                <entry>
                  <para>
          Looks for control file on an NFS server.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          autoyast=http://[user:password@]<replaceable>SERVER</replaceable>/<replaceable>PATH</replaceable></para>
                </entry>
                <entry>
                  <para>
          Retrieves the control file from a Web server using the HTTP
          protocol. Specifying a user name and a password is optional.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          autoyast=https://[user:password@]<replaceable>SERVER</replaceable>/<replaceable>PATH</replaceable></para>
                </entry>
                <entry>
                  <para>
          Retrieves the control file from a Web server using HTTPS.
          Specifying a user name and a password is optional.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          autoyast=tftp://<replaceable>SERVER</replaceable>/<replaceable>PATH</replaceable></para>
                </entry>
                <entry>
                  <para>
          Retrieve the control file via TFTP.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          autoyast=ftp://[user:password@]<replaceable>SERVER</replaceable>/<replaceable>PATH</replaceable></para>
                </entry>
                <entry>
                  <para>
          Retrieve the control file via FTP. Specifying a user name and a
          password is optional.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          autoyast=usb://<replaceable>PATH</replaceable></para>
                </entry>
                <entry>
                  <para>
          Retrieve the control file from USB devices (AutoYaST will search all
          connected USB devices).
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          autoyast=relurl://<replaceable>PATH</replaceable></para>
                </entry>
                <entry>
                  <para>
          Retrieve the control file from the installation source
          (install=....).
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          autoyast=slp
         </para>
                </entry>
                <entry>
                  <para>
          Query the location of the control file from an SLP server
          (service:autoyast:...). Optionally you may add a
          <literal>description=</literal> attribute so you can
          <quote>translate</quote> the URL into something more readable.
          (<literal>autoyast=slp:/?descr=*SLES*</literal></para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          autoyast=cifs://<replaceable>SERVER</replaceable>/<replaceable>PATH</replaceable></para>
                </entry>
                <entry>
                  <para>
          Looks for control file on a CIFS server.
         </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
          autoyast=label://<replaceable>LABEL</replaceable>/<replaceable>PATH</replaceable></para>
                </entry>
                <entry>
                  <para>
          Searches for a control file on a device with the specified label
         </para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </table>
        <para>
     Several scenarios for auto-installation are possible using different
     types of infrastructure and source media. The simplest way is to use
     the source media (DVD number one) of <phrase role="productname"><phrase os="osuse">openSUSE</phrase><phrase os="sles">SUSE Linux Enterprise Server</phrase><phrase os="sled">SUSE Linux Enterprise Desktop</phrase><phrase os="slerte">SUSE Linux Enterprise Real Time Extension</phrase></phrase>. To initiate the
     auto-installation process however, the auto-installation command line
     variable should be entered at system boot-up and the control file
     should be accessible for YaST. The following list of scenarios
     explains how the control file can be supplied as well as the setup
     needed for the auto-installation process to succeed.
    </para>
        <variablelist>
          <varlistentry>
            <term>Using the Original <phrase role="productname"><phrase os="osuse">openSUSE</phrase><phrase os="sles">SUSE Linux Enterprise Server</phrase><phrase os="sled">SUSE Linux Enterprise Desktop</phrase><phrase os="slerte">SUSE Linux Enterprise Real Time Extension</phrase></phrase> DVD-ROM</term>
            <listitem>
              <para>
        When using the original DVD-ROM (DVD #1 is needed), the control file
        needs to be accessible via USB flash disk or network:
       </para>
              <formalpara>
                <title>Flash Disk</title>
                <para>
         Access the control file via the
         <literal>autoyast=usb://<replaceable>PATH</replaceable></literal>
         option.
        </para>
              </formalpara>
              <formalpara>
                <title>Network</title>
                <para>
         Access the control file via the following commands:
         <literal>autoyast=nfs://..</literal>,
         <literal>autoyast=ftp://..</literal>,
         <literal>autoyast=http://..</literal>,
         <literal>autoyast=https://..</literal>,
         <literal>autoyast=tftp://..</literal>, or
         <literal>autoyast=cifs://..</literal>.
        </para>
              </formalpara>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Using a Custom DVD-ROM</term>
            <listitem>
              <para>
        In this case, you can include the control file directly on the
        DVD-ROM. When placing it in the root directory and naming it
        <filename>autoinst.xml</filename>, it will automatically be found
        and used for the installation. Otherwise use
        <literal>autoyast=file:///<replaceable>PATH</replaceable></literal>
        to specify the path to the control file.
       </para>
              <para>
        When using a DVD-ROM for auto-installation, it is necessary to
        instruct the installer to use the DVD-ROM for installation and not
        try to find the installation files on the network. This can be
        accomplished by adding the <literal>instmode=cd</literal> option to
        the kernel command line (this can be automated done by adding the
        option to the <filename>isolinux.cfg</filename> file on the DVD).
       </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Using a Network Installation Source</term>
            <listitem>
              <para>
        This option is the most important one due to the fact that
        installations of multiple machines is usually done using SLP or NFS
        servers and other network services like BOOTP and DHCP. The easiest
        way to make the control file available is to place it in the root
        directory of the installation source naming it
        <filename>autoinst.xml</filename>. In this case it will
        automatically be found and used for the installation. The control
        file can also reside in the following places:
       </para>
              <formalpara>
                <title>Flash Disk</title>
                <para>
         Access the control file via the
         <literal>autoyast=usb://<replaceable>PATH</replaceable></literal>
         option.
        </para>
              </formalpara>
              <formalpara>
                <title>Network</title>
                <para>
         Access the control file via the following commands:
         <literal>autoyast=nfs://..</literal>,
         <literal>autoyast=ftp://..</literal>,
         <literal>autoyast=http://..</literal>,
         <literal>autoyast=https://..</literal>,
         <literal>autoyast=tftp://..</literal>, or
         <literal>autoyast=cifs://..</literal>.
        </para>
              </formalpara>
            </listitem>
          </varlistentry>
        </variablelist>
        <note>
          <title>Disabling Network and DHCP</title>
          <para>
      To disable the network during installations where it is not needed or
      unavailable, for example when auto-installing from DVD-ROMs, use the
      linuxrc option <literal>netsetup=0</literal> to disable the network
      setup.
     </para>
        </note>
        <para>
     If <literal>autoyast=default</literal> is defined, YaST will look for
     a file named <filename>autoinst.xml</filename> in the following three
     places:
    </para>
        <orderedlist>
          <listitem>
            <para>
       the root directory of the flash disk,
      </para>
          </listitem>
          <listitem>
            <para>
       the root directory of the installation medium,
      </para>
          </listitem>
          <listitem>
            <para>
       the root directory of the initial RAM disk used to boot the system.
      </para>
          </listitem>
        </orderedlist>
        <para>
     With all AutoYaST invocation options, excluding <literal>default</literal>,
     it is possible to specify the location of the control file in the
     following ways:
    </para>
        <!-- numeration="arabic" -->
        <orderedlist>
          <listitem>
            <para>
       Specify the exact location of the control file:
      </para>
            <screen>autoyast=http://192.168.1.1/control-files/client01.xml</screen>
          </listitem>
          <listitem>
            <para>
       Specify a directory where several control files are located:
      </para>
            <screen>autoyast=http://192.168.1.1/control-files/</screen>
            <para>
       In this case the relevant control file is retrieved using the hex
       digit representation of the IP as described below.
      </para>
          </listitem>
        </orderedlist>
        <para>
     If only the path prefix variable is defined, YaST will fetch the
     control file from the specified location in the following way:
    </para>
        <!-- numeration="arabic" -->
        <orderedlist>
          <listitem>
            <para>
       First, it will search for the control file using its own IP address
       in upper case hexadecimal, e.g. <literal>192.0.2.91 -&gt;
       C000025B</literal>.
      </para>
          </listitem>
          <listitem>
            <para>
       If this file is not found, YaST will remove one hex digit and try
       again. This action is repeated until the file with the correct name
       is found. Ultimately, it will try looking for a file with the MAC
       address of the client as the file name (mac should have the following
       syntax: <literal>0080C8F6484C</literal>) and if not found a file
       named <filename>default</filename> (in lower case).
      </para>
          </listitem>
        </orderedlist>
        <para>
     As an example, for 192.0.2.91, the HTTP client will try:
    </para>
        <!-- role="literallayout" -->
        <screen>      
C000025B
C000025
C00002
C0000
C000
C00
C0
C
0080C8F6484C
default
    </screen>
        <para>
     in that order.
    </para>
        <para>
     To determine the hex representation of the IP address of the client,
     use the utility called <command>/usr/bin/gethostip</command> available
     with the <systemitem class="resource">syslinux</systemitem> package.
    </para>
        <example>
          <title>Determine HEX code for an IP address</title>
          <screen># /usr/bin/gethostip 10.10.0.1
10.10.0.1 10.10.0.1 0A0A0001</screen>
        </example>
      </sect2>
      <sect2 xml:id="autoinstall.singlesystem">
        <title>Auto-installing a Single System</title>
        <para>
     The easiest way to auto-install a system without any network connection
     is to use the original <phrase role="productname"><phrase os="osuse">openSUSE</phrase><phrase os="sles">SUSE Linux Enterprise Server</phrase><phrase os="sled">SUSE Linux Enterprise Desktop</phrase><phrase os="slerte">SUSE Linux Enterprise Real Time Extension</phrase></phrase> DVD-ROMs and a flash disk. You do
     not need to set up an installation server nor the network environment.
    </para>
        <para>
     Create the control file and name it <filename>autoinst.xml</filename>.
     Copy the file <filename>autoinst.xml</filename> to the flash disk.
    </para>
      </sect2>
      <sect2>
        <title>Combining the linuxrc <filename>info</filename> file with the AutoYaST control file</title>
        <para>
     If you choose to pass information to linuxrc using the
     <filename>info</filename> file, it is possible to integrate the
     keywords in the XML control file. In this case the file has to be
     accessible to linuxrc and has to be named <filename>info</filename>.
    </para>
        <para>
     Linuxrc will look for a string (<literal>start_linuxrc_conf</literal>
     in the control file which represents the beginning of the file. If it
     is found, it will parse the content starting from that string and will
     finish when the string <literal>end_linuxrc_conf</literal> is found.
     The options are stored in the control file in the following way:
    </para>
        <example>
          <title>Linuxrc options in the control file</title>
          <screen>....
  &lt;install&gt;
....
    &lt;init&gt;
      &lt;info_file&gt;
&lt;![CDATA[
#
# Don't remove the following line:
# start_linuxrc_conf
#
install: nfs://192.168.1.1/CDs/full-i386
textmode: 1
autoyast: file:///info

# end_linuxrc_conf
# Do not remove the above comment
#
]]&gt;

      &lt;/info_file&gt;
    &lt;/init&gt;
......
  &lt;/install&gt;
....
</screen>
        </example>
        <para>
     Note that the <literal>autoyast</literal> keyword must point to the
     same file. If it is on a flash disk, then the option
     <literal>usb:///</literal> has to be used. If the
     <filename>info</filename> file is stored in the initial RAM disk, the
     <literal>file://</literal> option has to be used.
    </para>
      </sect2>
    </sect1>
    <sect1 xml:id="System_Configuration">
      <title>System Configuration</title>
      <para>
    The system configuration during auto-installation is the most important
    part of the whole process. As you have seen in the previous chapters,
    almost anything can be configured automatically on the target system. In
    addition to the pre-defined directives, you can always use post-scripts
    to change other things in the system. Additionally you can change any
    system variables, and if required, copy complete configuration files
    into the target system.
   </para>
      <sect2>
        <title>Post-Install and System Configuration</title>
        <para>
     The post-installation and system configuration are initiated directly
     after the last package is installed on the target system and continue
     after the system has booted for the first time.
    </para>
        <para>
     Before the system is booted for the first time, AutoYaST writes all data
     collected during installation and writes the boot loader in the
     specified location. In addition to these regular tasks, AutoYaST executes
     the chroot-scripts as specified in the control file. Note that these
     scripts are executed while the system is not yet mounted.
    </para>
        <para>
     If a different kernel than the default is installed, a hard reboot will
     be required. A hard reboot can also be forced during auto-installation,
     independent of the installed kernel. Use the <literal>reboot</literal>
     property of the <literal>general</literal> resource (see
     <link linkend="CreateProfile.General">General Options</link>).
    </para>
      </sect2>
      <sect2>
        <title>System Customization</title>
        <para>
     Most of the system customization is done in the second stage of the
     installation. If you require customizations that cannot be done using
     AutoYaST resources, use post-install scripts for further modifications.
    </para>
        <para>
     You can define an unlimited number of custom scripts in the control
     file, either by editing the control file or by using the configuration
     system.
    </para>
      </sect2>
    </sect1>
  </chapter>
  <appendix xml:id="handlingrules">
    <title>Handling Rules</title>
    <para>
   The following figure illustrates how rules are handled and the processes
   of retrieval and merge.
  </para>
    <figure xml:id="rulesflow">
      <title>Rules Retrieval Process</title>
      <mediaobject>
        <imageobject role="html">
          <imagedata fileref="RulesFlow.png"/>
        </imageobject>
        <imageobject role="fo">
          <imagedata fileref="RulesFlow.png" width="75%"/>
        </imageobject>
      </mediaobject>
    </figure>
  </appendix>
  <appendix xml:id="appendix.linuxrc">
    <title>Advanced Linuxrc Options</title>
    <para>
   Linuxrc is a program used for setting up the kernel for installation
   purposes. It allows the user to load modules, start an installed system,
   a rescue system or an installation via YaST.
  </para>
    <para>
   Linuxrc is designed to be as small as possible. Therefore, all needed
   programs are linked directly into one binary. So there is no need for
   shared libraries in the initdisk.
  </para>
    <note>
      <para>
    If you run Linuxrc on an installed system, it will work slightly
    differently so as not to destroy your installation. As a consequence you
    cannot test all features this way.
   </para>
    </note>
    <sect1>
      <title>Passing parameters to Linuxrc</title>
      <para>
    Unless Linuxrc is in manual mode, it will look for an
    <filename>info</filename> file in these locations: first
    <filename>/info</filename> on the flash disk and if that does not exist,
    for <filename>/info</filename> in the initrd. After that it parses the
    kernel command line for parameters. You may change the
    <filename>info</filename> file Linuxrc reads by setting the
    <filename>info</filename> command line parameter. If you do not want
    Linuxrc to read the kernel command line (e.g. because you need to
    specify a kernel parameter that Linuxrc recognizes as well), use
    <literal>linuxrc=nocmdline</literal>.
   </para>
      <para>
    Linuxrc will always look for and parse a file
    <filename>/linuxrc.config</filename>. Use this file to change default
    values if you need to. In general, it is better to use the
    <filename>info</filename> file instead. Note that
    <filename>/linuxrc.config</filename> is read before any
    <filename>info</filename> file, even in manual mode.
   </para>
    </sect1>
    <sect1 xml:id="info_file_format">
      <title><filename>info</filename> file format</title>
      <para>
    Lines starting with <literal>#</literal> are comments, valid entries are
    of the form:
   </para>
      <screen>key: value</screen>
      <para>
    Note that <literal>value</literal> extends to the end of the line and
    therefore may contain spaces. <literal>key</literal> is matched case
    insensitive.
   </para>
      <para>
    You can use the same key-value pairs on the kernel command line using
    the syntax <literal>key=value</literal>. Lines that do not have the form
    described above are ignored.
   </para>
      <para>
    The table below lists Valid keys. The given values are only examples.
   </para>
      <table>
        <title>Advanced linuxrc keywords</title>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>
                <para>
         Keyword/Value
        </para>
              </entry>
              <entry>
                <para>
         Description
        </para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
                <para>
         Language: de_DE
        </para>
              </entry>
              <entry>
                <para>
         Set the language
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         Keytable: de-lat1-nd
        </para>
              </entry>
              <entry>
                <para>
         Load this key table
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         Display: Color|Mono|Alt
        </para>
              </entry>
              <entry>
                <para>
         Set the menu color scheme
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         Install: nfs://<replaceable>SERVER</replaceable>/install/8.0-i386
        </para>
              </entry>
              <entry>
                <para>
         Install via NFS from <replaceable>SERVER</replaceable> (note: you
         can give username, password etc. in the URL, too)
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         InstMode: cd|hd|nfs|smb|ftp|http|tftp
        </para>
              </entry>
              <entry>
                <para>
         Set installation mode
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         HostIP: 10.10.0.2
        </para>
              </entry>
              <entry>
                <para>
         The client ip address
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         Netmask: 255.255.0.0
        </para>
              </entry>
              <entry>
                <para>
         Network mask
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         Gateway: 10.10.0.1
        </para>
              </entry>
              <entry>
                <para>
         Gateway
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         Server: 10.10.0.1
        </para>
              </entry>
              <entry>
                <para>
         Installation server address
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         Nameserver: 10.10.0.1
        </para>
              </entry>
              <entry>
                <para>
         Nameserver
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         Proxy: 10.10.0.1
        </para>
              </entry>
              <entry>
                <para>
         Proxy (either FTP or HTTP)
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         ProxyPort: 10.10.0.1
        </para>
              </entry>
              <entry>
                <para>
         Proxy port
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         Partition: hda1
        </para>
              </entry>
              <entry>
                <para>
         Partition with install sources for hard disk install
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         Serverdir: /install/8.0-i386
        </para>
              </entry>
              <entry>
                <para>
         Base directory of the installation sources
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         Netdevice: eth0
        </para>
              </entry>
              <entry>
                <para>
         Network interface to use
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         BOOTPWait: 5
        </para>
              </entry>
              <entry>
                <para>
         Sleep 5 seconds between network activation and starting bootp
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         BOOTPTimeout: 10
        </para>
              </entry>
              <entry>
                <para>
         10 seconds timeout for BOOTP requests
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         DHCPTimeout: 60
        </para>
              </entry>
              <entry>
                <para>
         60 seconds timeout for DHCP requests
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         TFTPTimeout: 10
        </para>
              </entry>
              <entry>
                <para>
         10 seconds timeout for TFTP connection
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         ForceRootimage: 0|1
        </para>
              </entry>
              <entry>
                <para>
         Load the installation system into RAM disk
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         Textmode: 0|1
        </para>
              </entry>
              <entry>
                <para>
         Start YaST in text mode
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         Username: name
        </para>
              </entry>
              <entry>
                <para>
         Set user name (e.g. for FTP install)
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         Password: password
        </para>
              </entry>
              <entry>
                <para>
         Set password (e.g. for FTP install)
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         WorkDomain: domain
        </para>
              </entry>
              <entry>
                <para>
         Set work domain for SMB install
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         ForceInsmod: 0|1
        </para>
              </entry>
              <entry>
                <para>
         Use <option>-f</option> option when running
         <command>insmod</command></para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         DHCP: 0|1
        </para>
              </entry>
              <entry>
                <para>
         Start the DHCP daemon now&gt;, but see <literal>UseDHCP</literal></para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         UseDHCP: 0|1
        </para>
              </entry>
              <entry>
                <para>
         Use DHCP instead of BOOTP (DHCP is default)
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         MemLimit: 10000
        </para>
              </entry>
              <entry>
                <para>
         Ask for swap if free memory drops below 10000 KB
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         MemYaST: 20000
        </para>
              </entry>
              <entry>
                <para>
         Run YaST in text mode if free memory is below 20000 KB
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         MemYaSTText: 10000
        </para>
              </entry>
              <entry>
                <para>
         Ask for swap before starting YaST if free memory is below 10000
         KB
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         MemModules: 20000
        </para>
              </entry>
              <entry>
                <para>
         Delete all modules before starting YaST if free memory is below
         20000 KB
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         MemLoadImage: 50000
        </para>
              </entry>
              <entry>
                <para>
         Load installation system into RAM disk if free memory is above
         50000 KB
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         Manual: 0|1
        </para>
              </entry>
              <entry>
                <para>
         Start Linuxrc in manual mode
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         NoPCMCIA: 0|1
        </para>
              </entry>
              <entry>
                <para>
         Do not start card manager
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         Domain: example.com
        </para>
              </entry>
              <entry>
                <para>
         Set domain name (used for name server lookups)
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         RootImage: /suse/images/root
        </para>
              </entry>
              <entry>
                <para>
         Installation system image
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         RescueImage: /suse/images/rescue
        </para>
              </entry>
              <entry>
                <para>
         Rescue system image
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         InstallDir: /suse/inst-sys
        </para>
              </entry>
              <entry>
                <para>
         Installation system
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         Rescue: 1|nfs://server/dir
        </para>
              </entry>
              <entry>
                <para>
         Load rescue system; the URL variant specifies the location of the
         rescue image explicitly
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         AutoYaST: ftp://autoyastfile
        </para>
              </entry>
              <entry>
                <para>
         Location of autoinstall file; activates autoinstall mode
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         VNC: 0|1
        </para>
              </entry>
              <entry>
                <para>
         Setup VNC server
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         VNCPassword: password
        </para>
              </entry>
              <entry>
                <para>
         Sets VNC server password
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         UseSSH: 0|1
        </para>
              </entry>
              <entry>
                <para>
         Setup SSH server
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         SSHPassword: password
        </para>
              </entry>
              <entry>
                <para>
         Sets SSH server password (this will not be the final root
         password!)
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         AddSwap: 0|3|/dev/sda5
        </para>
              </entry>
              <entry>
                <para>
         If 0, never ask for swap; if the argument is a positive number
         <literal>n</literal>, activate the <literal>n</literal>'th swap
         partition; if the argument is a partition name, activate this swap
         partition
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         Exec: command
        </para>
              </entry>
              <entry>
                <para>
         Run <emphasis>command</emphasis></para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         USBWait: 4
        </para>
              </entry>
              <entry>
                <para>
         Wait 4 seconds after loading USB modules
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         Insmod: module params
        </para>
              </entry>
              <entry>
                <para>
         Load this module
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         Loghost: 10.10.0.22
        </para>
              </entry>
              <entry>
                <para>
         Enable remove logging via syslog
        </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
         y2confirm
        </para>
              </entry>
              <entry>
                <para>
         Overrides the confirm parameter in a control file and requests
         confirmation of installation proposal
        </para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </sect1>
    <sect1>
      <title>Advanced Network Setup</title>
      <para>
    The <literal>netsetup</literal> keyword allows advanced network
    configurations and enables dialogs to setup the network where required.
   </para>
      <itemizedlist>
        <listitem>
          <para>
      netsetup=1
     </para>
          <para>
      the normal network setup questions
     </para>
        </listitem>
        <listitem>
          <para>
      netsetup=xxx,yyy
     </para>
          <para>
      only xxx and yyy
     </para>
        </listitem>
        <listitem>
          <para>
      netsetup=+xxx,-yyy
     </para>
          <para>
      default, additionally xxx, but not yyy
     </para>
        </listitem>
      </itemizedlist>
      <para><literal>netsetup</literal> can have the following values:
    <literal>dhcp</literal>, <literal>hostip</literal>,
    <literal>gateway</literal>, <literal>netmask</literal>, <literal>name
    server</literal>. <literal>nameserverN</literal> asks for N nameservers
    (max. 4).
   </para>
      <para>
    For example, the following can be entered on the command line:
   </para>
      <screen>netsetup=-dhcp,+nameserver3</screen>
    </sect1>
  </appendix>
</book>
