<!-- Converted by db4-upgrade version 1.1 -->

<sect1 xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0" xml:id="sec.zypper">
  <title>Using Zypper</title>
  <indexterm xml:id="idx.zypper" class="startofrange">
    <primary>zypper</primary>
  </indexterm>
  <indexterm>
    <primary>commands</primary>
    <secondary>zypper</secondary>
  </indexterm>
  <indexterm>
    <primary>software</primary>
    <secondary>managing</secondary>
    <tertiary>command line</tertiary>
  </indexterm>
  <para>
  Zypper is a command line package manager for installing, updating and
  removing packages as well as for managing repositories. It is especially
  useful for accomplishing remote software management tasks or managing
  software from shell scripts.
 </para>
  <sect2 xml:id="sec.zypper.usage">
    <title>General Usage</title>
    <para>
   The general syntax of Zypper is:
  </para>
    <screen>zypper <option>[--global-options]</option> <replaceable>command</replaceable> <option> [--command-options]</option> <option>[arguments]</option>
  ...</screen>
    <para>
   The components enclosed in brackets are not required. See <command>zypper
   help</command> for a list of general options and all commands. To get
   help for a specific command, type <command>zypper help
   <replaceable>command</replaceable></command>.
  </para>
    <para>
   The simplest way to execute Zypper is to type its name, followed by a
   command. For example, to apply all needed patches to the system type:
  </para>
    <screen>zypper patch</screen>
    <para>
   Additionally, you can choose from one or more global options by typing
   them immediately before the command. For example,
   <option>--non-interactive</option> means running the command without
   asking anything (automatically applying the default answers):
  </para>
    <screen>zypper --non-interactive patch</screen>
    <para>
   To use the options specific to a particular command, type them right
   after the command. For example,
   <option>--auto-agree-with-licenses</option> means applying all needed
   patches to the system without asking to confirm any licenses (they will
   automatically be accepted):
  </para>
    <screen>zypper patch --auto-agree-with-licenses</screen>
    <para>
   Some commands require one or more arguments. When using the install
   command, for example, you need to specify which package(s) to install:
  </para>
    <screen>zypper install mplayer</screen>
    <para>
   Some options also require an argument. The following command will list
   all known patterns:
  </para>
    <screen>zypper search -t pattern</screen>
    <para>
   You can combine all of the above. For example, the following command will
   install the <systemitem>aspell-de</systemitem> and
   <systemitem>aspell-fr</systemitem> packages from the
   <literal>factory</literal> repository while being verbose:
  </para>
    <screen>zypper -v install --from factory aspell-de aspell-fr</screen>
    <para>
   The <option>--from</option> option makes sure to keep all repositories
   enabled (for solving any dependencies) while requesting the package from
   the specified repository.
  </para>
    <para>
   Most Zypper commands have a <literal>dry-run</literal> option that does a
   simulation of the given command. It can be used for test purposes.
  </para>
    <screen>zypper remove --dry-run MozillaFirefox</screen>
    <para>
   Zypper supports the global <option>--userdata
   <replaceable>string</replaceable></option> option. You can specify a
   string with this option, which gets written to Zypper's log files and
   plug-ins (such as the Btrfs plug-in). It can be used to mark and identify
   transactions in log files.
  </para>
    <screen>zypper --userdata <replaceable>string</replaceable> patch</screen>
  </sect2>
  <sect2 xml:id="sec.zypper.softman">
    <title>Installing and Removing Software with Zypper</title>
    <para>
   To install or remove packages use the following commands:
  </para>
    <screen>zypper install <replaceable>package_name</replaceable>
zypper remove <replaceable>package_name</replaceable></screen>
    <para>
   Zypper knows various ways to address packages for the install and remove
   commands.
  </para>
    <variablelist>
      <varlistentry>
        <term>by the exact package name (and version number)</term>
        <listitem>
          <screen>zypper install MozillaFirefox</screen>
          <para>
      or
     </para>
          <screen>zypper install MozillaFirefox-3.5.3</screen>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>by repository alias and package name</term>
        <listitem>
          <screen>zypper install mozilla:MozillaFirefox</screen>
          <para>
      Where <literal>mozilla</literal> is the alias of the repository from
      which to install.
     </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>by package name using wild cards</term>
        <listitem>
          <para>
      The following command will install all packages that have names
      starting with <quote>Moz</quote>. Use with care, especially when
      removing packages.
     </para>
          <screen>zypper install 'Moz*'</screen>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>by capability</term>
        <listitem>
          <para>
      For example, if you want to install a Perl module without knowing the
      name of the package, capabilities come in handy:
     </para>
          <screen>zypper install firefox</screen>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>by capability and/or architecture and/or version</term>
        <listitem>
          <para>
      Together with a capability you can specify an architecture (such as
      <literal>x86_64</literal>) and/or a version. The version must be
      preceded by an operator: <literal>&lt;</literal> (lesser than),
      <literal>&lt;=</literal> (lesser than or equal), <literal>=</literal>
      (equal), <literal>&gt;=</literal> (greater than or equal),
      <literal>&gt;</literal> (greater than).
     </para>
          <screen>zypper install 'firefox.x86_64'
zypper install 'firefox&gt;=3.5.3'
zypper install 'firefox.x86_64&gt;=3.5.3'</screen>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>by path to the RPM file</term>
        <listitem>
          <para>
      You can also specify a local or remote path to a package:
     </para>
          <screen>zypper install /tmp/install/MozillaFirefox.rpm
zypper install http://download.opensuse.org/repositories/mozilla/SUSE_Factory/x86_64/MozillaFirefox-3.5.3-1.3.x86_64.rpm</screen>
        </listitem>
      </varlistentry>
    </variablelist>
    <para>
   To install and remove packages simultaneously use the
   <literal>+/-</literal> modifiers. To install
   <systemitem>emacs</systemitem> and remove <systemitem>vim</systemitem>
   simultaneously, use:
  </para>
    <screen>zypper install emacs -vim
</screen>
    <para>
   To remove <systemitem>emacs</systemitem> and install
   <systemitem>vim</systemitem> simultaneously, use:
  </para>
    <screen>zypper remove emacs +vim
</screen>
    <para>
   To prevent the package name starting with the <literal>-</literal> being
   interpreted as a command option, always use it as the second argument. If
   this is not possible, precede it with <literal>--</literal>:
  </para>
    <screen>zypper install -emacs +vim       # Wrong
zypper install vim -emacs        # Correct
zypper install -- -emacs +vim    # same as above
zypper remove emacs +vim         # same as above</screen>
    <para>
   If (together with a certain package) you automatically want to remove any
   packages that become unneeded after removing the specified package, use
   the <option>--clean-deps</option> option:
  </para>
    <screen>zypper rm <replaceable>package_name</replaceable> --clean-deps</screen>
    <para>
   By default, Zypper asks for a confirmation before installing or removing
   a selected package, or when a problem occurs. You can override this
   behavior using the <option>--non-interactive</option> option. This option
   must be given before the actual command (<command>install</command>,
   <command>remove</command>, and <command>patch</command>) as in the
   following:
  </para>
    <screen>zypper <option>--non-interactive</option> install <replaceable>package_name</replaceable></screen>
    <para>
   This option allows the use of Zypper in scripts and cron jobs.
  </para>
    <!-- fate#304459 -->
    <warning>
      <title>Do not Remove Mandatory System Packages</title>
      <para>
    Do not remove packages such as <systemitem>glibc</systemitem>,
    <systemitem>zypper</systemitem>, <systemitem>kernel</systemitem>, or
    similar packages. These packages are mandatory for the system and, if
    removed, may cause the system to become unstable or stop working
    altogether.
   </para>
    </warning>
    <sect3 xml:id="sec.zypper.softman.sources">
      <title>Installing or Downloading Source Packages</title>
      <para><indexterm><primary>software</primary><secondary>installing</secondary><tertiary>source package</tertiary></indexterm> If you want to install the corresponding source package of
    a package, use:
   </para>
      <screen>zypper source-install <replaceable>package_name</replaceable></screen>
      <para>
    That command will also install the build dependencies of the specified
    package. If you do not want this, add the switch <literal>-D</literal>.
    To install only the build dependencies use <literal>-d</literal>.
   </para>
      <screen>zypper source-install -D <replaceable>package_name</replaceable> # source package only
zypper source-install -d <replaceable>package_name</replaceable> # build dependencies only</screen>
      <para>
    Of course, this will only work if you have the repository with the
    source packages enabled in your repository list (it is added by default,
    but not enabled). See <xref linkend="sec.zypper.instrepo"/> for details
    on repository management.
   </para>
      <para>
    A list of all source packages available in your repositories can be
    obtained with:
   </para>
      <screen>zypper search -t srcpackage</screen>
      <para>
    You can also download source packages for all installed packages to a
    local directory. To download source packages, use:
   </para>
      <screen>zypper source-download</screen>
      <para>
    The default download directory is
    <filename>/var/cache/zypper/source-download</filename>. You can change
    it using the <option>--directory</option> option. To only show missing
    or extraneous packages without downloading or deleting anything, use the
    <option>--status</option> option. To delete extraneous source packages,
    use the <option>--delete</option> option. To disable deleting, use the
    <option>--no-delete</option> option.
   </para>
    </sect3>
    <sect3 xml:id="sec.zypper.softman.util">
      <title>Utilities</title>
      <para>
    To verify whether all dependencies are still fulfilled and to repair
    missing dependencies, use:
   </para>
      <screen>zypper verify</screen>
      <para>
    In addition to dependencies that must be fulfilled, some packages
    <quote>recommend</quote> other packages. These recommended packages are
    only installed if actually available and installable. In case
    recommended packages were made available after the recommending package
    has been installed (by adding additional packages or hardware), use the
    following command:
   </para>
      <screen>zypper install-new-recommends</screen>
      <para>
    This command is very useful after plugging in a webcam or Wi-Fi device.
    It will install drivers for the device and related software, if
    available. Drivers and related software are only installable if certain
    hardware dependencies are fulfilled.
   </para>
    </sect3>
  </sect2>
  <sect2 xml:id="sec.zypper.softup">
    <title>Updating Software with Zypper</title>
    <para>
   There are three different ways to update software using Zypper: by
   installing patches, by installing a new version of a package or by
   updating the entire distribution. The latter is achieved with
   <command>zypper dist-upgrade</command>. Upgrading <phrase role="productname"><phrase os="osuse">openSUSE</phrase><phrase os="sles">SUSE Linux Enterprise Server</phrase><phrase os="sled">SUSE Linux Enterprise Desktop</phrase><phrase os="slerte">SUSE Linux Enterprise Real Time Extension</phrase></phrase> is
   discussed in <xref linkend="cha.update.sle"/>.
  </para>
    <sect3 xml:id="sec.zypper.softup.patch">
      <title>Installing Patches</title>
      <para>
    To install all officially released patches applying to your system, run:
   </para>
      <screen>zypper patch</screen>
      <para>
    In this case, all patches available in your repositories are checked for
    relevance and installed, if necessary. After registering your
    <phrase role="productname"><phrase os="osuse">openSUSE</phrase><phrase os="sles">SUSE Linux Enterprise Server</phrase><phrase os="sled">SUSE Linux Enterprise Desktop</phrase><phrase os="slerte">SUSE Linux Enterprise Real Time Extension</phrase></phrase> installation, an official update repository containing
    such patches will be added to your system. The above command is all you
    must enter in order to apply them when needed.
   </para>
      <para>
    Zypper knows three different commands to query for the availability of
    patches:
   </para>
      <variablelist>
        <varlistentry>
          <term>
            <command>zypper patch-check</command>
          </term>
          <listitem>
            <para>
       Lists the number of needed patches (patches, that apply to your
       system but are not yet installed)
      </para>
            <screen><prompt role="user">tux &gt; </prompt>sudo zypper patch-check
Loading repository data...
Reading installed packages...
5 patches needed (1 security patch)</screen>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <command>zypper list-patches</command>
          </term>
          <listitem>
            <para>
       Lists all needed patches (patches, that apply to your system but are
       not yet installed)
      </para>
            <screen><?dbsuse-fo font-size="0.40em"?><prompt role="user">tux &gt; </prompt>sudo zypper list-patches
Loading repository data...
Reading installed packages...
 
Repository     | Name        | Version | Category | Status  | Summary
---------------+-------------+---------+----------+---------+---------
SLES12-Updates | SUSE-2014-8 | 1       | security | needed  | openssl: Update to OpenSSL 1.0.1g
</screen>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <command>zypper patches</command>
          </term>
          <listitem>
            <para>
       Lists all patches available for <phrase role="productname"><phrase os="osuse">openSUSE</phrase><phrase os="sles">SUSE Linux Enterprise Server</phrase><phrase os="sled">SUSE Linux Enterprise Desktop</phrase><phrase os="slerte">SUSE Linux Enterprise Real Time Extension</phrase></phrase>, regardless of whether
       they are already installed or apply to your installation.
      </para>
          </listitem>
        </varlistentry>
      </variablelist>
      <para>
    It is also possible to list and install patches relevant to specific
    issues. To list specific patches, use the <command>zypper
    list-patches</command> command with the following options:
   </para>
      <variablelist>
        <varlistentry>
          <term>
            <option>--bugzilla[=<replaceable>number</replaceable>] </option>
          </term>
          <listitem>
            <para>
       Lists all needed patches for Bugzilla issues. Optionally, you can
       specify a bug number if you only want to list patches for this
       specific bug.
      </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <option>--cve[=<replaceable>number</replaceable>]</option>
          </term>
          <listitem>
            <para>
       Lists all needed patches for CVE (Common Vulnerabilities and
       Exposures) issues, or only patches matching a certain CVE number, if
       specified.
      </para>
          </listitem>
        </varlistentry>
      </variablelist>
      <para>
    To install a patch for a specific Bugzilla or CVE issue, use the
    following commands:
   </para>
      <screen>zypper patch --bugzilla=<replaceable>number</replaceable></screen>
      <para>
    or
   </para>
      <screen>zypper patch --cve=<replaceable>number</replaceable></screen>
      <para>
    For example, to install a security patch with the CVE number
    <literal>CVE-2010-2713</literal>, execute:
   </para>
      <screen>zypper patch --cve=CVE-2010-2713</screen>
    </sect3>
    <sect3 xml:id="sec.zypper.softup.update">
      <title>Installing New Package Versions</title>
      <para>
    If a repository contains only new packages, but does not provide
    patches, <command>zypper patch</command> does not show any effect.
    To update all installed packages with newer available versions (while
    maintaining system integrity), use:
   </para>
      <screen>zypper update</screen>
      <para>
    To update individual packages, specify the package with either the
    update or install command:
   </para>
      <screen>zypper update <replaceable>package_name</replaceable>
zypper install <replaceable>package_name</replaceable></screen>
      <para>
    A list of all new installable packages can be obtained with the command:
   </para>
      <screen>zypper list-updates</screen>
      <para>
    Note that this command only lists packages that match the following
    criteria:
   </para>
      <itemizedlist>
        <listitem>
          <para>
      has the same vendor like the already installed package,
     </para>
        </listitem>
        <listitem>
          <para>
      is provided by repositories with at least the same priority than the
      already installed package,
     </para>
        </listitem>
        <listitem>
          <para>
      is installable (all dependencies are satisfied).
     </para>
        </listitem>
      </itemizedlist>
      <para>
    A list of <emphasis>all</emphasis> new available packages (regardless
    whether installable or not) can be obtained with:
   </para>
      <screen>zypper list-updates --all</screen>
      <para>
    To find out why a new package cannot be installed, use the
    <command>zypper install</command> or <command>zypper update</command>
    command as described above.
   </para>
    </sect3>
    <!--taroth 2014-04-30: commenting the following content due to trello#42 
    (https://trello.com/c/pyYJ7sQ1)

  <sect3 id="sec.zypper.softup.upgrade">
   <title>Upgrading to a New Product Version</title>
   <para>&suse; offers various tools to upgrade to a new product version.
    The scenario very much depends on how the system is registered and where it
    gets its repositories from. For more information, see <xref linkend="cha.update.sle"/>.
   </para>
   <para>
    To easily upgrade your installation to a new product version
    (for example, from &sls; 11 to
    &sls; 11 SP1, first adjust your repositories to match the
    current &productname; repositories. For details, refer to
    <xref
     linkend="sec.zypper.instrepo"/>. Then use the <command>zypper
    dist-upgrade</command> command with the required repositories. This
    command ensures that all packages will be installed from the
    repositories currently enabled. For detailed instructions, refer to
    <xref
     linkend="sec.update.zypper"/>.
   </para>
   <para>
    To restrict the distribution upgrade to packages from a certain
    repository while considering also the other repositories for satisfying
    dependencies, use the <option>-/-from</option> option and specify the
    repository by either its alias, its number or URI.
   </para>
   <note>
    <title>Differences between <command>zypper update</command> and <command>zypper dist-upgrade</command></title>
    <para>
     Choose <command>zypper update</command> to update packages to newer
     versions available for your product version while maintaining system
     integrity. <command>zypper update</command> will honor the following
     rules:
    </para>
    <simplelist>
     <member>no vendor changes</member>
     <member>no architecture changes</member>
     <member>no downgrades</member>
     <member>keep installed packages</member>
    </simplelist>
    <para>
     When executing <command>zypper dist-upgrade</command>, all packages
     will be installed from the repositories currently enabled. This rule is
     enforced, so packages might change vendor or architecture or even might
     get downgraded. All packages that have unfulfilled dependencies after
     the upgrade will be uninstalled.
    </para>
   </note>
  </sect3>-->
  </sect2>
  <!--taroth 2014-04-30: commenting the following content due to trello#42 
  (https://trello.com/c/pyYJ7sQ1)-->
  <!-- <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="zypper_upgrade.xml"/>-->
  <sect2 xml:id="sec.zypper.instrepo">
    <title>Managing Repositories with Zypper</title>
    <para>
   All installation or patch commands of Zypper rely on a list of known
   repositories. To list all repositories known to the system, use the
   command:
  </para>
    <screen>zypper repos</screen>
    <para>
   The result will look similar to the following output:
  </para>
    <example xml:id="ex.zypper.repos">
      <title>Zypper—List of Known Repositories</title>
      <screen><?dbsuse-fo font-size="0.60em"
?>
# | Alias        | Name          | Enabled | Refresh
--+--------------+---------------+---------+--------
1 | SLEHA-12-GEO | SLEHA-12-GEO  | Yes     | No     
2 | SLEHA-12     | SLEHA-12      | Yes     | No     
3 | SLES12       | SLES12        | Yes     | No 
  </screen>
    </example>
    <para>
   When specifying repositories in various commands, an alias, URI or
   repository number from the <command>zypper repos</command> command output
   can be used. A repository alias is a short version of the repository name
   for use in repository handling commands. Note that the repository numbers
   can change after modifying the list of repositories. The alias will never
   change by itself.
  </para>
    <para>
   By default, details such as the URI or the priority of the repository are
   not displayed. Use the following command to list all details:
  </para>
    <screen>zypper repos -d</screen>
    <sect3 xml:id="sec.zypper.instrepo.add">
      <title>Adding Repositories</title>
      <para>
    To add a repository, run
   </para>
      <screen>zypper addrepo <replaceable>URI</replaceable> <replaceable>alias</replaceable></screen>
      <para><replaceable>URI</replaceable> can either be an Internet repository, a
    network resource, a directory or a CD or DVD (see
    <link xlink:href="http://en.opensuse.org/openSUSE:Libzypp_URIs"/> for
    details). The <replaceable>alias</replaceable> is a shorthand and unique
    identifier of the repository. You can freely choose it, with the only
    exception that it needs to be unique. Zypper will issue a warning if you
    specify an alias that is already in use.
   </para>
    </sect3>
    <sect3 xml:id="sec.zypper.instrepo.rm">
      <title>Removing Repositories</title>
      <para>
    If you want to remove a repository from the list, use the command
    <command>zypper removerepo</command> together with the alias or number
    of the repository you want to delete. For example, to remove the
    repository <literal>SLEHA-12-GEO</literal> from
    <xref linkend="ex.zypper.repos"/>, use one of the following
    commands:
   </para>
      <screen>zypper removerepo 1
zypper removerepo "SLEHA-12-GEO"</screen>
    </sect3>
    <sect3 xml:id="sec.zypper.instrepo.mofify">
      <title>Modifying Repositories</title>
      <para>
    Enable or disable repositories with <command>zypper
    modifyrepo</command>. You can also alter the repository's properties
    (such as refreshing behavior, name or priority) with this command. The
    following command will enable the repository named
    <literal>updates</literal>, turn on auto-refresh and set its priority to
    20:
   </para>
      <screen>zypper modifyrepo -er -p 20 'updates'</screen>
      <para>
    Modifying repositories is not limited to a single repository—you
    can also operate on groups:
   </para>
      <simplelist>
        <member><option>-a</option>: all repositories</member>
        <member><option>-l</option>: local repositories</member>
        <member><option>-t</option>: remote repositories</member>
        <member><option>-m <replaceable>TYPE</replaceable></option>: repositories
     of a certain type (where <replaceable>TYPE</replaceable> can be one of the
     following: <literal>http</literal>, <literal>https</literal>, <literal>ftp</literal>, 
     <literal>cd</literal>, <literal>dvd</literal>, <literal>dir</literal>, <literal>file</literal>, 
     <literal>cifs</literal>, <literal>smb</literal>, <literal>nfs</literal>, <literal>hd</literal>, 
     <literal>iso</literal>) </member>
      </simplelist>
      <para>
    To rename a repository alias, use the <literal>renamerepo</literal>
    command. The following example changes the alias from <literal>Mozilla
    Firefox</literal> to <literal>firefox</literal>:
   </para>
      <screen>zypper renamerepo 'Mozilla Firefox' firefox</screen>
    </sect3>
  </sect2>
  <sect2 xml:id="sec.zypper.query">
    <title>Querying Repositories and Packages with Zypper</title>
    <para>
   Zypper offers various methods to query repositories or packages. To get
   lists of all products, patterns, packages or patches available, use the
   following commands:
  </para>
    <screen>zypper products
zypper patterns
zypper packages
zypper patches</screen>
    <para>
   To query all repositories for certain packages, use
   <literal>search</literal>. It works on package names, or, optionally, on
   package summaries and descriptions. String wrapped in
   <literal>/</literal> are interpreted as regular expressions. By default,
   the search is not case-sensitive.
  </para>
    <variablelist>
      <varlistentry>
        <term>Simple search for a package name containing <literal>fire</literal></term>
        <listitem>
          <screen>zypper search "fire"</screen>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Simple search for the exact package <literal>MozillaFirefox</literal></term>
        <listitem>
          <screen>zypper search --match-exact "MozillaFirefox"</screen>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Also search in package descriptions and summaries</term>
        <listitem>
          <screen>zypper search -d fire</screen>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Only display packages not already installed</term>
        <listitem>
          <screen>
      zypper search -u fire
     </screen>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Display packages containing the string <literal>fir</literal> not
    followed be <literal>e</literal></term>
        <listitem>
          <para>
      zypper se "/fir[^e]/"
     </para>
        </listitem>
      </varlistentry>
    </variablelist>
    <para>
   To search for packages which provide a special capability, use the
   command <literal>what-provides</literal>. For example, if you want to
   know which package provides the Perl module <literal>SVN::Core</literal>,
   use the following command:
  </para>
    <screen>zypper what-provides 'perl(SVN::Core)'</screen>
    <para>
   To query single packages, use <command>info</command> with an exact
   package name as an argument. It displays detailed information about a
   package. To also show what is required/recommended by the package, use
   the options <option>--requires</option> and
   <option>--recommends</option>:
  </para>
    <screen>zypper info --requires MozillaFirefox</screen>
    <para>
   The <literal>what-provides <replaceable>package</replaceable></literal>
   is similar to <command>rpm -q --whatprovides
   <replaceable>package</replaceable></command>, but RPM is only able to
   query the RPM database (that is the database of all installed packages).
   Zypper, on the other hand, will tell you about providers of the
   capability from any repository, not only those that are installed.
  </para>
    <indexterm class="endofrange" startref="idx.zypper"/>
  </sect2>
  <sect2 xml:id="sec.zypper.configure">
    <title>Configuring Zypper</title>
    <para>
   Zypper now comes with a configuration file, allowing you to permanently
   change Zypper's behavior (either system-wide or user-specific). For
   system-wide changes, edit <filename>/etc/zypp/zypper.conf</filename>. For
   user-specific changes, edit <filename>~/.zypper.conf</filename>. If
   <filename>~/.zypper.conf</filename> does not yet exist, you can use
   <filename>/etc/zypp/zypper.conf</filename> as a template: copy it to
   <filename>~/.zypper.conf</filename> and adjust it to your liking. Refer
   to the comments in the file for help about the available options.
  </para>
  </sect2>
  <sect2 xml:id="sec.zypper.trouble">
    <title>Troubleshooting</title>
    <para>
   In case you have problems to access packages from configured repositories
   (for example, Zypper cannot find a certain package though you know that
   it exists in one the repositories), it can help to refresh the
   repositories with:
  </para>
    <screen>zypper refresh</screen>
    <para>
   If that does not help, try
  </para>
    <screen>zypper refresh -fdb</screen>
    <para>
   This forces a complete refresh and rebuild of the database, including a
   forced download of raw metadata.
  </para>
  </sect2>
  <sect2 xml:id="sec.zypper.rollback">
    <title>Zypper Rollback Feature on Btrfs File System</title>
    <para>
   If the Btrfs file system is used on the root partition and
   <command>snapper</command> is installed, Zypper automatically calls
   <command>snapper</command> (via script installed by
   <command>snapper</command>) when committing changes to the file system to
   create appropriate file system snapshots. These snapshots can be used for
   reverting any changes made by Zypper. See <xref linkend="cha.snapper"/>
   for more information.
  </para>
  </sect2>
  <sect2 xml:id="sec.zypper.more">
    <title>For More Information</title>
    <para>
   For more information on managing software from the command line, enter
   <command>zypper help</command>, <command>zypper
   help <replaceable>command</replaceable></command> or refer to the
   <systemitem>zypper(8)</systemitem> man page. For a complete and detailed
   command reference, including <literal>cheat sheets</literal> with the
   most important commands, and information on how to use Zypper in scripts
   and applications, refer to
   <link xlink:href="http://en.opensuse.org/SDB:Zypper_usage"/>. A list of
   software changes for the latest <phrase role="productname"><phrase os="osuse">openSUSE</phrase><phrase os="sles">SUSE Linux Enterprise Server</phrase><phrase os="sled">SUSE Linux Enterprise Desktop</phrase><phrase os="slerte">SUSE Linux Enterprise Real Time Extension</phrase></phrase> version can be found at
   <link xlink:href="http://en.opensuse.org/openSUSE:Zypper versions"/>.
  </para>
  </sect2>
</sect1>
