<!-- Converted by db4-upgrade version 1.1 -->

<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0" xml:id="cha.qemu.overview">
  <title>QEMU Overview</title>
  <para>
  QEMU is a fast, cross-platform open-source machine emulator which can
  emulate a huge number of hardware architectures for you. QEMU lets you
  run a complete unmodified operating system (VM Guest) on top of your
  existing system (VM Host Server).
 </para>
  <para>
  You can also use QEMU for debugging purposesâ€”you can easily stop your
  running virtual machine, inspect its state and save and restore it later.
 </para>
  <para>
  QEMU consists of the following parts:
 </para>
  <itemizedlist>
    <listitem>
      <para>
    processor emulator (x86, s390x, PowerPC, Sparc)
   </para>
    </listitem>
    <listitem>
      <para>
    emulated devices (graphic card, network card, hard drives, mice)
   </para>
    </listitem>
    <listitem>
      <para>
    generic devices used to connect the emulated devices to the related host
    devices
   </para>
    </listitem>
    <listitem>
      <para>
    descriptions of the emulated machines (PC, Power Mac)
   </para>
    </listitem>
    <listitem>
      <para>
    debugger
   </para>
    </listitem>
    <listitem>
      <para>
    user interface used to interact with the emulator
   </para>
    </listitem>
  </itemizedlist>
  <para>
  QEMU is central to KVM and Xen Virtualization, where it provides the
  general machine emulation. Xen's usage of QEMU is somewhat hidden from
  the user, while KVM's usage exposes most QEMU features transparently.
  If the VM Guest hardware architecture is the same as the VM Host Server's
  architecture, QEMU can take advantage of the KVM acceleration (SUSE
  only supports QEMU with the KVM acceleration loaded).
 </para>
  <para>
  Apart from providing a core virtualization infrastructure and 
  processor-specific drivers, QEMU also provides an architecture-specific userspace
  program for managing VM Guests. Depending on the architecture this
  program is one of:
 </para>
  <itemizedlist>
    <listitem>
      <para>
        <command>qemu-system-i386</command>
      </para>
    </listitem>
    <listitem>
      <para>
        <command>qemu-system-s390x</command>
      </para>
    </listitem>
    <listitem>
      <para>
        <command>qemu-system-x86_64</command>
      </para>
    </listitem>
  </itemizedlist>
  <para>
  In the following this command is referred to as <command>qemu-system-<replaceable>ARCH</replaceable></command>; in
  examples the <command>qemu-system-x86_64</command> command is used.
 </para>
</chapter>
