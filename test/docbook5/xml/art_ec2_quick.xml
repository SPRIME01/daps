<!-- Converted by db4-upgrade version 1.1 -->

<article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0" xml:lang="en" xml:id="art.ec2quick">
  <?suse-quickstart columns="no" version="2"?>
  <title>Amazon EC2 Running <phrase role="productname"><phrase os="osuse">openSUSE®</phrase><phrase os="sles">SUSE® Linux Enterprise Server</phrase><phrase os="sled">SUSE® Linux Enterprise Desktop</phrase><phrase os="slerte">SUSE® Linux Enterprise Real Time Extension</phrase></phrase></title>
  <subtitle>Startup Guide</subtitle>
  <info>
    <productnumber>
      <phrase role="productname">
        <phrase os="osuse">12.2</phrase>
        <phrase os="sles;sled;slerte">12</phrase>
      </phrase>
    </productnumber>
    <productname>
      <phrase role="productname">
        <phrase os="osuse">openSUSE</phrase>
        <phrase os="sles">SUSE Linux Enterprise Server</phrase>
        <phrase os="sled">SUSE Linux Enterprise Desktop</phrase>
        <phrase os="slerte">SUSE Linux Enterprise Real Time Extension</phrase>
      </phrase>
    </productname>
    <date>
      <?dbtimestamp format="B d, Y" ?>
    </date>
  </info>
  <sect1 xml:id="sec.ec2.terms">
    <title>Definition of Terms</title>
    <variablelist>
      <varlistentry>
        <term>EC2</term>
        <listitem>
          <para>
      Elastic Compute Cloud, Amazon's virtual computing environment.
     </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>AWS</term>
        <listitem>
          <para>
      Amazon Web Services
     </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>AMI</term>
        <listitem>
          <para>
      Amazon Machine Image, a virtual machine that can be created and
      customized by a user. AMIs can be identified by an ID prefixed with
      <literal>ami-</literal>.
     </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>EBS</term>
        <listitem>
          <para>
      Amazon Elastic Block Store, block level storage volumes for use with
      Amazon EC2 instances. One or more storage volumes can be attached to
      running instances and persist after the instance has been shut down.
      It is possible to boot from an EBS volume.
     </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>S3</term>
        <listitem>
          <para>
      Amazon Simple Storage Service, a storage for the Internet that can be
      used to store and retrieve data on the web.
     </para>
        </listitem>
      </varlistentry>
      <!--
   <varlistentry>
    <term>AKI</term>
    <listitem>
     <para>
      Amazon Kernel Image, a paravirtualized kernel used by an AMI. Creating
      and publishing kernels is restricted to Amazon EC2 and selected
      vendors. AKIs can be identified by an ID prefixed with
      <literal>aki-</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>ARI</term>
    <listitem>
     <para>
      Amazon Ramdisk Image, a paravirtualized ramdisk used by an AKI.
      Creating and publishing ramdisks is restricted to Amazon EC2 and
      selected vendors. ARIs can be identified by an ID prefixed with
      <literal>ari-</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>SaaS</term>
    <listitem>
     <para>
      Software-as-a-Service (also called cloud applications) is a model of
      applications delivered over the Internet. Applications and accompanying
      data is stored remotely and delivered through a Web browser.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>IaaS</term>
    <listitem>
     <para>
      Infrastructure-as-a-Service is the delivery of computer architecture
      over the Internet. It involves the use of remote computers (operating
      systems, databases, middleware, applications) and storage, oftentimes
      enabling cloud applications.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>PaaS</term>
    <listitem>
     <para>
      Platform-as-a-Service is the model whereby application middleware and
      build tools are made available to developers by a remote service
      provider.
     </para>
    </listitem>
   </varlistentry>
-->
    </variablelist>
  </sect1>
  <sect1 xml:id="sec.ec2.management_tools">
    <title>Management Tools</title>
    <para>
   In order to manage your Amazon cloud environment, choose between the
   web-based AWS Management Console, the Firefox extension Elasticfox, or
   the command line tools. All tools allow you to launch and manage Amazon
   EC2 instances and to find, manage, and create AMIs. Novell recommends
   using the AWS Management Console.
  </para>
    <variablelist>
      <varlistentry>
        <term>AWS Management Console</term>
        <listitem>
          <para>
      The AWS Management Console is a web-based interface to manage all AWS
      services. It does not require installation of additional software. See
      <link xlink:href="http://aws.amazon.com/console/"/> for more information.
     </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Elasticfox</term>
        <listitem>
          <para>
      Elasticfox is a Firefox extension to manage Amazon's EC2 service. You
      may get the extension from
      <link xlink:href="http://s3.amazonaws.com/ec2-downloads/elasticfox.xpi"/>.
      Documentation for Elasticfox is available from the following URL:
      <link xlink:href="http://ec2-downloads.s3.amazonaws.com/elasticfox-owners-manual.pdf"/>.
     </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Command Line Tools</term>
        <listitem>
          <para>
      The API tools (package
      <systemitem class="resource">ec2-api-tools</systemitem>) serve
      as the client interface to the Amazon EC2 web service and let you
      register and launch instances, manipulate security groups, and more.
      <systemitem class="resource">ec2-api-tools</systemitem> is
      available for SUSE Linux Enterprise Server via the update channel. Documentation is available
      from
      <link xlink:href="http://awsdocs.s3.amazonaws.com/EC2/latest/ec2-clt.pdf"/>.
     </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </sect1>
  <sect1 xml:id="sec.ec2.amis">
    <title>Finding the official SUSE Linux Enterprise Server Images</title>
    <para>
   Currently images for SUSE Linux Enterprise Server 10 SP3 and SUSE Linux Enterprise Server 11 SP1 are available for the
   i386 (32 bit) and the x86_64 (64 bit) architecture and are available in
   all regions and availability zones.
  </para>
    <important>
      <title>Available Image Types for <phrase role="productname"><phrase os="osuse">openSUSE</phrase><phrase os="sles">SUSE Linux Enterprise Server</phrase><phrase os="sled">SUSE Linux Enterprise Desktop</phrase><phrase os="slerte">SUSE Linux Enterprise Real Time Extension</phrase></phrase></title>
      <para>
    Currently (as of
<?dbtimestamp format="B Y"?>
    ) Novell only offers Elastic Block Store (EBS)-backed images. Simple
    Storage Service (S3)-backed images and a High Performance Computing
    (HPC) image will be released in the near future.
   </para>
    </important>
    <table>
      <title>SUSE Linux Enterprise Server (SLES) Image IDs</title>
      <tgroup cols="5">
        <colspec colname="c1"/>
        <colspec colname="c2"/>
        <colspec colname="c3"/>
        <colspec colname="c4"/>
        <colspec colname="c5"/>
        <thead>
          <row>
            <entry>
              <para/>
            </entry>
            <entry>
              <para>
        US East
       </para>
            </entry>
            <entry>
              <para>
        US West
       </para>
            </entry>
            <entry>
              <para>
        EU
       </para>
            </entry>
            <entry>
              <para>
        Asia Pacific
       </para>
            </entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              <para>
        SLES 11 SP1 i386
<?dblinebreak?>
        (sles-11-sp1-v1.00.i386)
       </para>
            </entry>
            <entry>
              <para>
        ami-e0a35789
       </para>
            </entry>
            <entry>
              <para>
        ami-d01b4b95
       </para>
            </entry>
            <entry>
              <para>
        ami-6c576218
       </para>
            </entry>
            <entry>
              <para>
        ami-76146a24
       </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>
        SLES 11 SP1 x86_64
<?dblinebreak?>
        (sles-11-sp1-v1.00.x86_64)
       </para>
            </entry>
            <entry>
              <para>
        ami-e4a3578d
       </para>
            </entry>
            <entry>
              <para>
        ami-dc1b4b99
       </para>
            </entry>
            <entry>
              <para>
        ami-6e57621a
       </para>
            </entry>
            <entry>
              <para>
        ami-74146a26
       </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>
        SLES 10 SP3 i386
<?dblinebreak?>
        (sles-10-sp3-v1.00.i386)
       </para>
            </entry>
            <entry>
              <para>
        ami-16a3577f
       </para>
            </entry>
            <entry>
              <para>
        ami-d61b4b93
       </para>
            </entry>
            <entry>
              <para>
        ami-60576214
       </para>
            </entry>
            <entry>
              <para>
        ami-72146a20
       </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>
        SLES 10 SP3 x86_64
<?dblinebreak?>
        (sles-10-sp3-v1.00.x86_64)
       </para>
            </entry>
            <entry>
              <para>
        ami-eea35787
       </para>
            </entry>
            <entry>
              <para>
        ami-d21b4b97
       </para>
            </entry>
            <entry>
              <para>
        ami-62576216
       </para>
            </entry>
            <entry>
              <para>
        ami-78146a2a
       </para>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    <tip>
      <title>Identifying an Image</title>
      <para>
    Each image contains the file <filename>/etc/SUSE-release</filename> with
    information about the product name, architecture and version.
   </para>
    </tip>
  </sect1>
  <sect1 xml:id="sec.ec2.login">
    <title>Logging in to a Running SUSE Linux Enterprise Server Instance</title>
    <para>
   Once a SUSE Linux Enterprise Server instance is running, you can login as user <systemitem class="username">root</systemitem> via
   SSH. Make sure the security group the instance is launched with, allows
   connections via SSH (TCP port 22). You will need the following data:
  </para>
    <variablelist>
      <varlistentry>
        <term>Public DNS Name</term>
        <listitem>
          <para>
      Use the management tool with which you have started the instance to
      determine the Public DNS Name.
     </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Path to your Key pair</term>
        <listitem>
          <para>
      The key pair you specified when launching the instance is needed to
      authenticate. Make sure the key pair file is only accessible by it's
      owner.
     </para>
        </listitem>
      </varlistentry>
    </variablelist>
    <para>
   Log in with the following command:
  </para>
    <screen>ssh -i <replaceable>&lt;PATH TO KEY PAIR FILE&gt;</replaceable> root@<replaceable>&lt;PUBLIC DNS NAME&gt;</replaceable></screen>
  </sect1>
  <sect1 xml:id="sec.ec2.update">
    <title>Updating <phrase role="productname"><phrase os="osuse">openSUSE</phrase><phrase os="sles">SUSE Linux Enterprise Server</phrase><phrase os="sled">SUSE Linux Enterprise Desktop</phrase><phrase os="slerte">SUSE Linux Enterprise Real Time Extension</phrase></phrase></title>
    <para>
   All official SUSE Linux Enterprise Server images are automatically preconfigured with an
   official update channel. Registering your SUSE Linux Enterprise Server instance at Novell is
   <emphasis>not</emphasis> needed. To update your instance, either use the
   YaST ncurses version or the command line tool
   <command>zypper</command>.
  </para>
    <important>
      <title>Making Your Changes Permanent</title>
      <para>
    Once you terminate your instance, all changes you have made will be
    lost. In order to preserve them, create your own image with the
    <guimenu>Create Image</guimenu> command in the management tool. The next
    time you start a SUSE Linux Enterprise Server instance, you will be able to use your own image.
   </para>
    </important>
    <sect2 xml:id="sec.ec2.update.yast">
      <title>Updating Using YaST</title>
      <procedure>
        <step>
          <para>
      Call the YaST ncurses Online Update module with the command
     </para>
          <screen>yast online_update</screen>
        </step>
        <step>
          <para>
      The list of patches available is displayed. Press <keycombo><keycap function="alt"/><keycap>A</keycap></keycombo> to install all
      patches.
     </para>
        </step>
        <step>
          <para>
      Once all patches are installed, the YaST Online Update automatically
      terminates. In case the patch system itself was updated, re-run the
      online update. Certain patches, such as kernel updates, require you to
      reboot the machine.
     </para>
        </step>
        <step>
          <para>
      For more information about the YaST Online Update and the ncurses
      YaST version, refer to the following web pages:
     </para>
          <variablelist>
            <varlistentry>
              <term>
	SUSE Linux Enterprise Server 10 SP 3
       </term>
              <listitem>
                <para>
                  <link xlink:href="http://www.suse.com/documentation/sles10/book_sle_reference/data/cha_yast2.html"/>
                </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>SUSE Linux Enterprise Server 11 SP 1</term>
              <listitem>
                <para>
                  <link xlink:href="http://www.suse.com/documentation/sles11/book_sle_admin/data/part_administration.html"/>
                </para>
              </listitem>
            </varlistentry>
          </variablelist>
        </step>
      </procedure>
    </sect2>
    <sect2 xml:id="sec.ec2.update.zypper">
      <title>Updating with <command>zypper</command></title>
      <procedure>
        <step>
          <para>
      To get a list of needed patches that apply to your system, but are not
      yet installed, run:
     </para>
          <screen>zypper list-patches   #SUSE Linux Enterprise Server 11 only
zypper pch            #SUSE Linux Enterprise Server 10</screen>
        </step>
        <step>
          <para>
      To install all needed patches, run:
     </para>
          <screen>zypper patch             #SUSE Linux Enterprise Server 11 only
zypper up -y -t patch    #SUSE Linux Enterprise Server 10</screen>
        </step>
        <step>
          <para>
      In case the patch system itself was updated, re-run <command>zypper
      patch</command>. Certain patches, such as kernel updates, require you
      to reboot the machine.
     </para>
        </step>
        <step>
          <para>
      For more information about <command>zypper</command> refer to it's
      manpage (<command>man 8 zypper</command>).
     </para>
        </step>
      </procedure>
    </sect2>
  </sect1>
  <sect1 xml:id="sec.ec2.packages">
    <title>Installing Additional Software Packages</title>
    <para>
   All official SUSE Linux Enterprise Server images are automatically preconfigured with the
   default repository containing all software packages released for your
   version of SUSE Linux Enterprise Server. A second repository containing the SUSE Linux Enterprise Server Software
   Development Kit (SDK) is also available. To install additional packages
   either use the YaST ncurses version or the command line tool
   <command>zypper</command>.
  </para>
    <important>
      <title>Making Your Changes Permanent</title>
      <para>
    Once you terminate your instance, all changes you have made will be
    lost. In order to preserve them, create your own image with the
    <guimenu>Create Image</guimenu> command in the management tool. The next
    time you start a SUSE Linux Enterprise Server instance, you will be able to use your own image.
   </para>
    </important>
    <sect2 xml:id="sec.ec2.packages.yast">
      <title>Installing Packages with YaST</title>
      <procedure>
        <step>
          <para>
      Call the YaST ncurses Software Management module with the command
     </para>
          <screen>yast sw_single</screen>
        </step>
        <step>
          <para>
      Place the cursor in the search box by pressing <keycombo><keycap function="alt"/><keycap>P</keycap></keycombo>. Enter a
      phrase to search for packages and press
      <keycap function="enter"/> to start the search.
     </para>
        </step>
        <step>
          <para>
      The cursor is automatically placed within the search result list. Use
      the <keycap function="down"/> and <keycap function="up"/> keys to
      navigate. Packages already installed are marked with
      <guimenu>i</guimenu>. In order to install a package, select it and
      press <keycap function="space"/>. It will be marked with
      <guimenu>+</guimenu>.
     </para>
        </step>
        <step>
          <para>
      Repeat the previous two steps to select more packages for
      installation. Once you are finished, press <keycombo><keycap function="alt"/><keycap>A</keycap></keycombo> to start the
      installation. In case additional packages have been selected to
      resolve dependencies, confirm with <keycap function="enter"/>.
     </para>
        </step>
        <step>
          <para>
      For more information about the installing software with YaST and the
      ncurses YaST version, refer to the following web pages:
     </para>
          <variablelist>
            <varlistentry>
              <term>
	SUSE Linux Enterprise Server 10 SP 3
       </term>
              <listitem>
                <para>
                  <link xlink:href="http://www.suse.com/documentation/sles10/book_sle_reference/data/cha_yast2.html"/>
                </para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>SUSE Linux Enterprise Server 11 SP 1</term>
              <listitem>
                <para>
                  <link xlink:href="http://www.suse.com/documentation/sles11/book_sle_admin/data/part_administration.html"/>
                </para>
              </listitem>
            </varlistentry>
          </variablelist>
        </step>
      </procedure>
    </sect2>
    <sect2 xml:id="sec.ec2.packages.zypper">
      <title>Installing Packages with <command>zypper</command></title>
      <procedure>
        <step>
          <para>
      Search for packages with the command
     </para>
          <screen>zypper se -d <replaceable>SEARCHTERM</replaceable></screen>
        </step>
        <step>
          <para>
      To install packages run
     </para>
          <screen>zypper in <replaceable>SPACE SEPARATED LIST OF PACKAGES</replaceable></screen>
        </step>
        <step>
          <para>
      For more information about <command>zypper</command> refer to it's
      manpage (<command>man 8 zypper</command>).
     </para>
        </step>
      </procedure>
    </sect2>
  </sect1>
  <sect1 xml:id="sec.ec2.studio">
    <title>Building and Deploying Appliances for Amazon EC2 in SUSE Studio</title>
    <para>
   SUSE Studio supports building SUSE Linux Enterprise Server 11 SP1 and SUSE Linux Enterprise Server 10 SP3 based
   appliances for Amazon EC2. Each appliance built for Amazon EC2 comes with
   a script to easily create and deploy the appliance as an EBS backed
   Amazon Machine Image.
  </para>
    <sect2 xml:id="sec.ec2.studio.image">
      <title>Building Amazon EC2 Images</title>
      <para>
    Building an Amazon EC2 image works like building any other images in
    SUSE Studio with the difference that it is necessary to include the
    Amazon EC2 software repository:
   </para>
      <procedure>
        <step>
          <para>
      Login to SUSE Studio and proceed to <guimenu>Create a new
      appliance...</guimenu>.
     </para>
        </step>
        <step>
          <para>
      Choose a base template from <guimenu>SUSE Linux Enterprise Server 11 SP1</guimenu> or
      <guimenu>SUSE Linux Enterprise Server 10 SP3</guimenu>, select an architecture and provide a
      name for your appliance. Proceed with <guimenu>Create
      appliance.</guimenu></para>
        </step>
        <step>
          <para>
      Configure your appliance using the tabs <guimenu>Software</guimenu>,
      <guimenu>Configuration</guimenu>, <guimenu>Files</guimenu>, and
      <guimenu>Share</guimenu>.
     </para>
        </step>
        <step>
          <para>
      Switch to the tab <guimenu>Build</guimenu>. Choose <guimenu>Amazon EC2
      Image</guimenu> as the <guimenu>Default Format</guimenu>. An alert
      appears in the left sidebar, telling you to add the Amazon EC2
      software repository before building. Do so by clicking <guimenu>Add
      the 'Amazon EC2 Updates' repository</guimenu>.
     </para>
        </step>
        <step>
          <para>
      Click <guimenu>Build</guimenu> to start the image building process.
      Once completed, download the tarball containing the image and the
      build script.
     </para>
        </step>
      </procedure>
    </sect2>
    <sect2 xml:id="sec.ec2.studio.deploy">
      <title>Creating and Uploading the AMI</title>
      <para>
    The Amazon EC2 image tarball you have created with SUSE Studio contains
    the appliance and the shell script
    <filename>create_ebs_ami.sh</filename> to upload the appliance and
    create an EBS-backed AMI. In order to work, the script requires the
    installation of the Amazon EC2 API tools and a special environment. In
    case these requirements are already met, proceed with
    <xref linkend="sec.ec2.studio.deploy.upload"/>.
   </para>
      <sect3 xml:id="sec.ec2.studio.deploy.api-tools">
        <title>Installing the Amazon EC2 API tools</title>
        <para>
     The Amazon EC2 API tools are available as a zip archive at
     <link xlink:href="http://aws.amazon.com/developertools/351"/>. To
     install the tools, download and extract the zip archive to a folder of
     your choice, for example <filename>~/ec2/</filename>.
    </para>
        <para>
     The tools will be extracted to a folder
     <filename>ec2-api-tools-X.Y-nnnnn</filename> (for example
     ec2-api-tools-1.3-57419) which contains sub-directories named
     <filename>bin/</filename> and <filename>lib/</filename>. To locate the
     libraries, the tools rely on the variable <literal>EC2_HOME</literal>.
     In order to easily call the executables, the <filename>bin/</filename>
     directory needs to be added to the path. Add the following lines to
     <filename>~/.bashrc</filename>:
    </para>
        <screen>export EC2_HOME="$HOME/ec2/ec2-api-tools-1.3-57419/"
export PATH=$PATH:$EC2_HOME/bin/</screen>
        <important>
          <title>Java Required</title>
          <para>
      The Amazon EC2 API tools require Java. Make sure the package
      <systemitem class="resource">java-1_6_0-ibm</systemitem> is
      installed.
     </para>
        </important>
      </sect3>
      <sect3 xml:id="sec.ec2.studio.deploy.env">
        <title>Setting up the Environment</title>
        <para>
     In order to identify yourself you need to set a few variables that will
     be evaluated by the tools. It is recommended to export them in your
     <filename>~/.bashrc</filename>, so that you don't have to set them up
     manually each time. Replace the values in the following example with
     your credentials/paths:
    </para>
        <screen>export AWS_USER_ID="123456789012"                       # AWS Account Number
export AWS_ACCESS_KEY="ABCDEFGHIJKLMNOPQRST"            # AWS Access Key ID
export AWS_SECRET_KEY="abcdefghijklmnoprqrtuvwxyz12345" # AWS Secret Access Key
export EC2_CERT="~/.cert-aws.pem"                       # Path to EC2 X.509 certificate
export EC2_PRIVATE_KEY="~/.pk-ec2.pem"                  # Path to EC2 private key
</screen>
        <para>
     Verify your environment is correctly set up by running the following
     command. In case your setup is correct, it lists all available AMIs
     owned by Amazon or yourself:
    </para>
        <screen>ec2-describe-images -o amazon -o self</screen>
        <note>
          <title>Getting the Credentials and Certificates</title>
          <para>
      Get the needed data and the certificates by browsing to
      <link xlink:href="http://aws.amazon.com/account/"/> and clicking on
      <guimenu>Security Credentials</guimenu>.
     </para>
        </note>
        <sect4 xml:id="sec.ec2.studio.deploy.env.keys">
          <title>Generating a Key Pair</title>
          <para>
      The final step in setting up the environment is to generate an Amazon
      EC2 key pair which is used every time you launch an instance to make
      sure only you have access to the instance. In the following example a
      key pair named <quote>my_aws_ec2_key</quote> is generated for the
      region us-east-1. The private key is saved to
      <filename>~/.ssh/my_aws_ec2_key.pem</filename>. Make sure to remember
      the name of the key pair—you need to provide it with most EC2
      API commands.
     </para>
          <screen>ec2addkey --region us-east-1 my_aws_ec2_key &gt; ~/.ssh/my_aws_ec2_key.pem
chmod 600 ~/.ssh/my_aws_ec2_key.pem</screen>
          <para>
      Make sure to restrict the file permissions on the private key file as
      shown above, otherwise you will not be able to use it. Also keep in
      mind that a key is generated for one region only - if you are going to
      work in different regions, you need to create key pairs for each
      region.
     </para>
          <note>
            <title>Using an Existing SSH key</title>
            <para>
       As an alternative to generating an Amazon EC2 key pair you can upload
       an existing public ssh key. The following example assumes that public
       key is located in <filename>~/.ssh/id_rsa.pub</filename>. As in the
       example above <quote>my_aws_ec2_key</quote> is used as a name. You
       may upload this same key for other regions, too.
      </para>
            <screen>ec2ikey --region us-east-1 --public-key-file "~/.ssh/id_rsa.pub" my_aws_ec2_key</screen>
          </note>
        </sect4>
      </sect3>
      <sect3 xml:id="sec.ec2.studio.deploy.upload">
        <title>Creating the AMI</title>
        <para>
     Once the Amazon EC2 API tools are installed and the environment is set
     up, you are ready to create an AMI from you appliance. Extract the
     tarball you have downloaded from SUSE Studio and change into the
     resulting directory. Run the <filename>create_ebs_ami.sh</filename>
     script:
    </para>
        <screen>./create_ebs_ami.sh --region us-west-1<co xml:id="co.ec2.studio.deploy.region"/> --name "my_ec2_appliance"<co xml:id="co.ec2.studio.deploy.name"/> \
--description "My first EC2 appliance"<co xml:id="co.ec2.studio.deploy.description"/> --ssh_key_name "my_aws_ec2_key"<co xml:id="co.ec2.studio.deploy.keyname"/> \
--ssh_private_key " ~/.ssh/my_aws_ec2_key.pem"<co xml:id="co.ec2.studio.deploy.keypath"/> \
--tarball "/tmp/EC2_TEST_SLE_11_SP1.i686-0.0.1.ec2.tar.gz"<co xml:id="co.ec2.studio.deploy.tarball"/></screen>
        <calloutlist>
          <callout arearefs="co.ec2.studio.deploy.region">
            <para>
       The region. Optional, default is <quote>us-east-1</quote>.
      </para>
          </callout>
          <callout arearefs="co.ec2.studio.deploy.name">
            <para>
       The AMI name. Must be unique. Optional, default is a random
       alphanumeric string followed by the the appliance's name.
      </para>
          </callout>
          <callout arearefs="co.ec2.studio.deploy.description">
            <para>
       A description for the AMI. Optional, default is <quote>Built by SUSE
       Studio</quote>.
      </para>
          </callout>
          <callout arearefs="co.ec2.studio.deploy.keyname">
            <para>
       The name of the key pair. Mandatory unless the environment variable
       <literal>SSH_KEY_NAME</literal> is set.
      </para>
          </callout>
          <callout arearefs="co.ec2.studio.deploy.keypath">
            <para>
       Path to the private key file. Mandatory unless the environment
       variable <literal>SSH_PRIVATE_KEY</literal> is set.
      </para>
          </callout>
          <callout arearefs="co.ec2.studio.deploy.tarball">
            <para>
       Path to the tarball downloaded from SUSE Studio. Optional, default
       is <filename>../<replaceable>TARBALL.tar.gz</replaceable></filename>.
      </para>
          </callout>
        </calloutlist>
      </sect3>
    </sect2>
  </sect1>
  <sect1 xml:id="sec.ec2.more_information">
    <title>For More Information</title>
    <para>
   Please refer to the following resources for more information:
  </para>
    <sect2 xml:id="sec.ec2.more_information.novell">
      <title>SUSE</title>
      <variablelist>
        <varlistentry>
          <term>SUSE: SUSE Linux Enterprise Server 11 SP1 Documentation</term>
          <listitem>
            <para>
              <link xlink:href="http://www.suse.com/documentation/sles11/"/>
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>SUSE: SUSE Linux Enterprise Server 10 SP3 Documentation</term>
          <listitem>
            <para>
              <link xlink:href="http://www.suse.com/documentation/sles10/"/>
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>SUSE: Make Cloud Computing Work for You</term>
          <listitem>
            <para>
              <link xlink:href="http://www.suse.com/cloud/"/>
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Novell: SUSE Studio</term>
          <listitem>
            <para>
              <link xlink:href="http://susestudio.com/"/>
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </sect2>
    <sect2 xml:id="sec.ec2.more_information.aws">
      <title>Amazon Web Services</title>
      <variablelist>
        <varlistentry>
          <term>AWS Documentation Portal</term>
          <listitem>
            <para>
              <link xlink:href="http://aws.amazon.com/documentation/"/>
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>AWS Management Console</term>
          <listitem>
            <para>
              <link xlink:href="http://aws.amazon.com/console/"/>
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Elasticfox Getting Started Guide</term>
          <listitem>
            <para>
              <link xlink:href="http://ec2-downloads.s3.amazonaws.com/elasticfox-owners-manual.pdf"/>
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>ec2-api-tools Documentation</term>
          <listitem>
            <para>
              <link xlink:href="http://awsdocs.s3.amazonaws.com/EC2/latest/ec2-clt.pdf"/>
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </sect2>
  </sect1>
  <xi:include href="common_copyright_quick.xml" parse="xml"/>
</article>
